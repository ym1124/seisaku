//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer cb
// {
//
//   float3 eye;                        // Offset:    0 Size:    12
//   float random_num;                  // Offset:   12 Size:     4
//   float3 look;                       // Offset:   16 Size:    12
//   float screen_width;                // Offset:   28 Size:     4
//   float screen_height;               // Offset:   32 Size:     4
//   int iterations;                    // Offset:   36 Size:     4
//   int surf_type;                     // Offset:   40 Size:     4
//   float dummy;                       // Offset:   44 Size:     4 [unused]
//   float3 cb_sc;                      // Offset:   48 Size:    12
//   float cb_ior;                      // Offset:   60 Size:     4
//   float3 cb_emissive_color;          // Offset:   64 Size:    12
//   float cb_gloss_angle;              // Offset:   76 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// default_sampler                   sampler      NA          NA    0        1
// prev_tex                          texture  float4          2d    0        1
// cb                                cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb2[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 36
dcl_indexableTemp x0[32], 4
dcl_indexableTemp x1[54], 4
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Tex.x; v1.y <- input.Tex.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 191 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)precompile\pa"
mov r0.x, l(100000000.000000)  // r0.x <- INFINITY
itof r0.yzw, l(0, 0, 0, 0)  // r0.y <- bg_color.x; r0.z <- bg_color.y; r0.w <- bg_color.z
mov r1.x, l(0.004000)  // r1.x <- cutoff
mov r1.y, l(0.001000)  // r1.y <- bias
nop 
mov r2.xyz, cb2[0].xyzx
mov r3.xyz, cb2[1].xyzx
itof r4.xyz, l(0, 0, 1, 0)
itof r5.w, l(50)

#line 179
mov r2.xyz, r2.xyzx  // r2.x <- createCamera.pos.x; r2.y <- createCamera.pos.y; r2.z <- createCamera.pos.z
mul r6.xyz, r3.zxyz, r4.zxyz
mul r4.xyz, r3.yzxy, r4.xyzx
mov r4.xyz, -r4.xyzx
add r4.xyz, r4.xyzx, r6.xyzx  // r4.x <- left_temp.x; r4.y <- left_temp.y; r4.z <- left_temp.z
mul r6.xyz, r3.yzxy, r4.zxyz
mul r7.xyz, r3.zxyz, r4.yzxy
mov r7.xyz, -r7.xyzx
add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- u.x; r6.y <- u.y; r6.z <- u.z
dp3 r1.z, r3.xyzx, r3.xyzx
rsq r1.z, r1.z
mul r3.xyz, r1.zzzz, r3.xyzx  // r3.x <- createCamera.look.x; r3.y <- createCamera.look.y; r3.z <- createCamera.look.z
dp3 r1.z, r6.xyzx, r6.xyzx
rsq r1.z, r1.z
mul r6.xyz, r1.zzzz, r6.xyzx  // r6.x <- createCamera.up.x; r6.y <- createCamera.up.y; r6.z <- createCamera.up.z
dp3 r1.z, r4.xyzx, r4.xyzx
rsq r1.z, r1.z
mul r5.xyz, r1.zzzz, r4.xyzx  // r5.x <- createCamera.left.x; r5.y <- createCamera.left.y; r5.z <- createCamera.left.z
mov r5.w, r5.w  // r5.w <- createCamera.fovy
mov r5.xyz, r5.xyzx  // r5.x <- <createCamera return value>.left.x; r5.y <- <createCamera return value>.left.y; r5.z <- <createCamera return value>.left.z
mov r5.w, r5.w  // r5.w <- <createCamera return value>.fovy
mov r2.xyz, r2.xyzx  // r2.x <- <createCamera return value>.pos.x; r2.y <- <createCamera return value>.pos.y; r2.z <- <createCamera return value>.pos.z
mov r3.xyz, r3.xyzx  // r3.x <- <createCamera return value>.look.x; r3.y <- <createCamera return value>.look.y; r3.z <- <createCamera return value>.look.z
mov r6.xyz, r6.xyzx  // r6.x <- <createCamera return value>.up.x; r6.y <- <createCamera return value>.up.y; r6.z <- <createCamera return value>.up.z

#line 197
mov r2.xyz, r2.xyzx  // r2.x <- main_camera.pos.x; r2.y <- main_camera.pos.y; r2.z <- main_camera.pos.z
mov r3.xyz, r3.xyzx  // r3.x <- main_camera.look.x; r3.y <- main_camera.look.y; r3.z <- main_camera.look.z
mov r6.xyz, r6.xyzx  // r6.x <- main_camera.up.x; r6.y <- main_camera.up.y; r6.z <- main_camera.up.z
mov r5.xyzw, r5.xyzw  // r5.x <- main_camera.left.x; r5.y <- main_camera.left.y; r5.z <- main_camera.left.z; r5.w <- main_camera.fovy
mul r1.z, r5.w, l(1.570796)
itof r1.w, l(180)
div r1.z, r1.z, r1.w
sincos r1.w, null, r1.z
sincos null, r1.z, r1.z
div r1.z, r1.w, r1.z  // r1.z <- fovAngle

#line 233
mov r1.w, l(4)  // r1.w <- SPHERES_NUM
nop 
nop 
mov r4.xyz, l(0.800000,0.800000,0.800000,0)
itof r7.xyz, l(0, 0, 0, 0)
itof r8.x, l(1)
itof r8.y, l(0)
mov r8.z, l(1)

#line 34
mov r4.xyz, r4.xyzx  // r4.x <- new_material.surface_color.x; r4.y <- new_material.surface_color.y; r4.z <- new_material.surface_color.z
mov r7.xyz, r7.xyzx  // r7.x <- new_material.emissive_color.x; r7.y <- new_material.emissive_color.y; r7.z <- new_material.emissive_color.z
mov r8.x, r8.x  // r8.x <- new_material.ior
mov r8.y, r8.y  // r8.y <- new_material.gloss_angle
mov r8.z, r8.z  // r8.z <- new_material.surface_type
mov r4.xyz, r4.xyzx  // r4.x <- <createMaterial return value>.surface_color.x; r4.y <- <createMaterial return value>.surface_color.y; r4.z <- <createMaterial return value>.surface_color.z
mov r7.xyz, r7.xyzx  // r7.x <- <createMaterial return value>.emissive_color.x; r7.y <- <createMaterial return value>.emissive_color.y; r7.z <- <createMaterial return value>.emissive_color.z
mov r8.x, r8.x  // r8.x <- <createMaterial return value>.ior
mov r8.y, r8.y  // r8.y <- <createMaterial return value>.gloss_angle
mov r8.z, r8.z  // r8.z <- <createMaterial return value>.surface_type

#line 234
mov r4.xyz, r4.xyzx
mov r7.xyz, r7.xyzx
mov r8.xyz, r8.xyzx
itof r9.xyz, l(2, 1, -1, 0)
itof r2.w, l(1)

#line 72
mov r4.xyz, r4.xyzx  // r4.x <- new_sphere.mtl.surface_color.x; r4.y <- new_sphere.mtl.surface_color.y; r4.z <- new_sphere.mtl.surface_color.z
mov r7.xyz, r7.xyzx  // r7.x <- new_sphere.mtl.emissive_color.x; r7.y <- new_sphere.mtl.emissive_color.y; r7.z <- new_sphere.mtl.emissive_color.z
mov r8.xyz, r8.xyzx  // r8.x <- new_sphere.mtl.ior; r8.y <- new_sphere.mtl.gloss_angle; r8.z <- new_sphere.mtl.surface_type
mov r9.xyz, r9.xyzx  // r9.x <- new_sphere.center.x; r9.y <- new_sphere.center.y; r9.z <- new_sphere.center.z
mul r2.w, r2.w, r2.w  // r2.w <- new_sphere.radiusSq
mov r4.xyz, r4.xyzx  // r4.x <- <createSphere return value>.mtl.surface_color.x; r4.y <- <createSphere return value>.mtl.surface_color.y; r4.z <- <createSphere return value>.mtl.surface_color.z
mov r7.xyz, r7.xyzx  // r7.x <- <createSphere return value>.mtl.emissive_color.x; r7.y <- <createSphere return value>.mtl.emissive_color.y; r7.z <- <createSphere return value>.mtl.emissive_color.z
mov r8.xyz, r8.xyzx  // r8.x <- <createSphere return value>.mtl.ior; r8.y <- <createSphere return value>.mtl.gloss_angle; r8.z <- <createSphere return value>.mtl.surface_type
mov r9.xyz, r9.xyzx  // r9.x <- <createSphere return value>.center.x; r9.y <- <createSphere return value>.center.y; r9.z <- <createSphere return value>.center.z
mov r2.w, r2.w  // r2.w <- <createSphere return value>.radiusSq

#line 234
nop 
nop 
mov r10.xyz, l(0.900000,0.900000,0.900000,0)
itof r11.xyz, l(0, 0, 0, 0)
mov r12.x, l(0)
mov r12.y, l(0.200000)
mov r12.z, l(3)

#line 34
mov r10.xyz, r10.xyzx  // r10.x <- new_material.surface_color.x; r10.y <- new_material.surface_color.y; r10.z <- new_material.surface_color.z
mov r11.xyz, r11.xyzx  // r11.x <- new_material.emissive_color.x; r11.y <- new_material.emissive_color.y; r11.z <- new_material.emissive_color.z
mov r12.x, r12.x  // r12.x <- new_material.ior
mov r12.y, r12.y  // r12.y <- new_material.gloss_angle
mov r12.z, r12.z  // r12.z <- new_material.surface_type
mov r10.xyz, r10.xyzx  // r10.x <- <createMaterial return value>.surface_color.x; r10.y <- <createMaterial return value>.surface_color.y; r10.z <- <createMaterial return value>.surface_color.z
mov r11.xyz, r11.xyzx  // r11.x <- <createMaterial return value>.emissive_color.x; r11.y <- <createMaterial return value>.emissive_color.y; r11.z <- <createMaterial return value>.emissive_color.z
mov r12.x, r12.x  // r12.x <- <createMaterial return value>.ior
mov r12.y, r12.y  // r12.y <- <createMaterial return value>.gloss_angle
mov r12.z, r12.z  // r12.z <- <createMaterial return value>.surface_type

#line 234
mov r10.xyz, r10.xyzx
mov r11.xyz, r11.xyzx
mov r12.xyz, r12.xyzx
itof r13.xyz, l(2, 2, 2, 0)
itof r3.w, l(2)

#line 72
mov r10.xyz, r10.xyzx  // r10.x <- new_sphere.mtl.surface_color.x; r10.y <- new_sphere.mtl.surface_color.y; r10.z <- new_sphere.mtl.surface_color.z
mov r11.xyz, r11.xyzx  // r11.x <- new_sphere.mtl.emissive_color.x; r11.y <- new_sphere.mtl.emissive_color.y; r11.z <- new_sphere.mtl.emissive_color.z
mov r12.xyz, r12.xyzx  // r12.x <- new_sphere.mtl.ior; r12.y <- new_sphere.mtl.gloss_angle; r12.z <- new_sphere.mtl.surface_type
mov r13.xyz, r13.xyzx  // r13.x <- new_sphere.center.x; r13.y <- new_sphere.center.y; r13.z <- new_sphere.center.z
mul r3.w, r3.w, r3.w  // r3.w <- new_sphere.radiusSq
mov r10.xyz, r10.xyzx  // r10.x <- <createSphere return value>.mtl.surface_color.x; r10.y <- <createSphere return value>.mtl.surface_color.y; r10.z <- <createSphere return value>.mtl.surface_color.z
mov r11.xyz, r11.xyzx  // r11.x <- <createSphere return value>.mtl.emissive_color.x; r11.y <- <createSphere return value>.mtl.emissive_color.y; r11.z <- <createSphere return value>.mtl.emissive_color.z
mov r12.xyz, r12.xyzx  // r12.x <- <createSphere return value>.mtl.ior; r12.y <- <createSphere return value>.mtl.gloss_angle; r12.z <- <createSphere return value>.mtl.surface_type
mov r13.xyz, r13.xyzx  // r13.x <- <createSphere return value>.center.x; r13.y <- <createSphere return value>.center.y; r13.z <- <createSphere return value>.center.z
mov r3.w, r3.w  // r3.w <- <createSphere return value>.radiusSq

#line 234
nop 
nop 
mov r14.xyz, l(0.900000,0.900000,0.900000,0)
itof r15.xyz, l(0, 0, 0, 0)
mov r16.x, l(2.800000)
mov r16.y, l(0)
mov r16.z, l(6)

#line 34
mov r14.xyz, r14.xyzx  // r14.x <- new_material.surface_color.x; r14.y <- new_material.surface_color.y; r14.z <- new_material.surface_color.z
mov r15.xyz, r15.xyzx  // r15.x <- new_material.emissive_color.x; r15.y <- new_material.emissive_color.y; r15.z <- new_material.emissive_color.z
mov r16.x, r16.x  // r16.x <- new_material.ior
mov r16.y, r16.y  // r16.y <- new_material.gloss_angle
mov r16.z, r16.z  // r16.z <- new_material.surface_type
mov r14.xyz, r14.xyzx  // r14.x <- <createMaterial return value>.surface_color.x; r14.y <- <createMaterial return value>.surface_color.y; r14.z <- <createMaterial return value>.surface_color.z
mov r15.xyz, r15.xyzx  // r15.x <- <createMaterial return value>.emissive_color.x; r15.y <- <createMaterial return value>.emissive_color.y; r15.z <- <createMaterial return value>.emissive_color.z
mov r16.x, r16.x  // r16.x <- <createMaterial return value>.ior
mov r16.y, r16.y  // r16.y <- <createMaterial return value>.gloss_angle
mov r16.z, r16.z  // r16.z <- <createMaterial return value>.surface_type

#line 234
mov r14.xyz, r14.xyzx
mov r15.xyz, r15.xyzx
mov r16.xyz, r16.xyzx
itof r17.xyz, l(-2, 3, -2, 0)
itof r4.w, l(1)

#line 72
mov r14.xyz, r14.xyzx  // r14.x <- new_sphere.mtl.surface_color.x; r14.y <- new_sphere.mtl.surface_color.y; r14.z <- new_sphere.mtl.surface_color.z
mov r15.xyz, r15.xyzx  // r15.x <- new_sphere.mtl.emissive_color.x; r15.y <- new_sphere.mtl.emissive_color.y; r15.z <- new_sphere.mtl.emissive_color.z
mov r16.xyz, r16.xyzx  // r16.x <- new_sphere.mtl.ior; r16.y <- new_sphere.mtl.gloss_angle; r16.z <- new_sphere.mtl.surface_type
mov r17.xyz, r17.xyzx  // r17.x <- new_sphere.center.x; r17.y <- new_sphere.center.y; r17.z <- new_sphere.center.z
mul r4.w, r4.w, r4.w  // r4.w <- new_sphere.radiusSq
mov r14.xyz, r14.xyzx  // r14.x <- <createSphere return value>.mtl.surface_color.x; r14.y <- <createSphere return value>.mtl.surface_color.y; r14.z <- <createSphere return value>.mtl.surface_color.z
mov r15.xyz, r15.xyzx  // r15.x <- <createSphere return value>.mtl.emissive_color.x; r15.y <- <createSphere return value>.mtl.emissive_color.y; r15.z <- <createSphere return value>.mtl.emissive_color.z
mov r16.xyz, r16.xyzx  // r16.x <- <createSphere return value>.mtl.ior; r16.y <- <createSphere return value>.mtl.gloss_angle; r16.z <- <createSphere return value>.mtl.surface_type
mov r17.xyz, r17.xyzx  // r17.x <- <createSphere return value>.center.x; r17.y <- <createSphere return value>.center.y; r17.z <- <createSphere return value>.center.z
mov r4.w, r4.w  // r4.w <- <createSphere return value>.radiusSq

#line 234
nop 
nop 
mov r18.xyz, cb2[3].xyzx
itof r19.xyz, l(3, 3, 3, 0)
mul r19.xyz, r19.xyzx, cb2[4].xyzx
mov r20.x, cb2[3].w
mov r20.y, cb2[4].w
mov r20.z, l(4)

#line 34
mov r18.xyz, r18.xyzx  // r18.x <- new_material.surface_color.x; r18.y <- new_material.surface_color.y; r18.z <- new_material.surface_color.z
mov r19.xyz, r19.xyzx  // r19.x <- new_material.emissive_color.x; r19.y <- new_material.emissive_color.y; r19.z <- new_material.emissive_color.z
mov r20.x, r20.x  // r20.x <- new_material.ior
mov r20.y, r20.y  // r20.y <- new_material.gloss_angle
mov r20.z, r20.z  // r20.z <- new_material.surface_type
mov r18.xyz, r18.xyzx  // r18.x <- <createMaterial return value>.surface_color.x; r18.y <- <createMaterial return value>.surface_color.y; r18.z <- <createMaterial return value>.surface_color.z
mov r19.xyz, r19.xyzx  // r19.x <- <createMaterial return value>.emissive_color.x; r19.y <- <createMaterial return value>.emissive_color.y; r19.z <- <createMaterial return value>.emissive_color.z
mov r20.x, r20.x  // r20.x <- <createMaterial return value>.ior
mov r20.y, r20.y  // r20.y <- <createMaterial return value>.gloss_angle
mov r20.z, r20.z  // r20.z <- <createMaterial return value>.surface_type

#line 234
mov r18.xyz, r18.xyzx
mov r19.xyz, r19.xyzx
mov r20.xyz, r20.xyzx
itof r21.xyz, l(-1, 1, 1, 0)
itof r5.w, l(1)

#line 72
mov r18.xyz, r18.xyzx  // r18.x <- new_sphere.mtl.surface_color.x; r18.y <- new_sphere.mtl.surface_color.y; r18.z <- new_sphere.mtl.surface_color.z
mov r19.xyz, r19.xyzx  // r19.x <- new_sphere.mtl.emissive_color.x; r19.y <- new_sphere.mtl.emissive_color.y; r19.z <- new_sphere.mtl.emissive_color.z
mov r20.xyz, r20.xyzx  // r20.x <- new_sphere.mtl.ior; r20.y <- new_sphere.mtl.gloss_angle; r20.z <- new_sphere.mtl.surface_type
mov r21.xyz, r21.xyzx  // r21.x <- new_sphere.center.x; r21.y <- new_sphere.center.y; r21.z <- new_sphere.center.z
mul r5.w, r5.w, r5.w  // r5.w <- new_sphere.radiusSq
mov r18.xyz, r18.xyzx  // r18.x <- <createSphere return value>.mtl.surface_color.x; r18.y <- <createSphere return value>.mtl.surface_color.y; r18.z <- <createSphere return value>.mtl.surface_color.z
mov r19.xyz, r19.xyzx  // r19.x <- <createSphere return value>.mtl.emissive_color.x; r19.y <- <createSphere return value>.mtl.emissive_color.y; r19.z <- <createSphere return value>.mtl.emissive_color.z
mov r20.xyz, r20.xyzx  // r20.x <- <createSphere return value>.mtl.ior; r20.y <- <createSphere return value>.mtl.gloss_angle; r20.z <- <createSphere return value>.mtl.surface_type
mov r21.xyz, r21.xyzx  // r21.x <- <createSphere return value>.center.x; r21.y <- <createSphere return value>.center.y; r21.z <- <createSphere return value>.center.z
mov r5.w, r5.w  // r5.w <- <createSphere return value>.radiusSq

#line 234
mov x0[0].xyz, r4.xyzx
mov x0[1].xyz, r7.xyzx
mov x0[2].x, r8.x
mov x0[3].x, r8.y
mov x0[4].x, r8.z
mov x0[5].xyz, r9.xyzx
mov x0[7].x, r2.w
mov x0[8].xyz, r10.xyzx
mov x0[9].xyz, r11.xyzx
mov x0[10].x, r12.x
mov x0[11].x, r12.y
mov x0[12].x, r12.z
mov x0[13].xyz, r13.xyzx
mov x0[15].x, r3.w
mov x0[16].xyz, r14.xyzx
mov x0[17].xyz, r15.xyzx
mov x0[18].x, r16.x
mov x0[19].x, r16.y
mov x0[20].x, r16.z
mov x0[21].xyz, r17.xyzx
mov x0[23].x, r4.w
mov x0[24].xyz, r18.xyzx
mov x0[25].xyz, r19.xyzx
mov x0[26].x, r20.x
mov x0[27].x, r20.y
mov x0[28].x, r20.z
mov x0[29].xyz, r21.xyzx
mov x0[31].x, r5.w

#line 242
mov r2.w, l(6)  // r2.w <- PLANES_NUM
nop 
nop 
mov r4.xyz, l(0.800000,0.800000,0.800000,0)
mov r7.xyz, l(1.000000,1.000000,1.000000,0)
mov r8.x, l(1.700000)
mov r8.y, l(0.300000)
mov r8.z, cb2[2].z

#line 34
mov r4.xyz, r4.xyzx  // r4.x <- new_material.surface_color.x; r4.y <- new_material.surface_color.y; r4.z <- new_material.surface_color.z
mov r7.xyz, r7.xyzx  // r7.x <- new_material.emissive_color.x; r7.y <- new_material.emissive_color.y; r7.z <- new_material.emissive_color.z
mov r8.x, r8.x  // r8.x <- new_material.ior
mov r8.y, r8.y  // r8.y <- new_material.gloss_angle
mov r8.z, r8.z  // r8.z <- new_material.surface_type
mov r4.xyz, r4.xyzx  // r4.x <- <createMaterial return value>.surface_color.x; r4.y <- <createMaterial return value>.surface_color.y; r4.z <- <createMaterial return value>.surface_color.z
mov r7.xyz, r7.xyzx  // r7.x <- <createMaterial return value>.emissive_color.x; r7.y <- <createMaterial return value>.emissive_color.y; r7.z <- <createMaterial return value>.emissive_color.z
mov r8.x, r8.x  // r8.x <- <createMaterial return value>.ior
mov r8.y, r8.y  // r8.y <- <createMaterial return value>.gloss_angle
mov r8.z, r8.z  // r8.z <- <createMaterial return value>.surface_type

#line 243
mov r4.xyz, r4.xyzx
mov r7.xyz, r7.xyzx
mov r8.xyz, r8.xyzx
mov r9.xyz, l(0,-1.000000,0,0)
mov r10.xyz, l(0,0,0,0)
mov r3.w, l(1.000000)
mov r4.w, l(1.000000)

#line 133
mov r4.xyz, r4.xyzx  // r4.x <- new_plane.mtl.surface_color.x; r4.y <- new_plane.mtl.surface_color.y; r4.z <- new_plane.mtl.surface_color.z
mov r7.xyz, r7.xyzx  // r7.x <- new_plane.mtl.emissive_color.x; r7.y <- new_plane.mtl.emissive_color.y; r7.z <- new_plane.mtl.emissive_color.z
mov r8.xyz, r8.xyzx  // r8.x <- new_plane.mtl.ior; r8.y <- new_plane.mtl.gloss_angle; r8.z <- new_plane.mtl.surface_type
dp3 r5.w, r9.xyzx, r9.xyzx
rsq r5.w, r5.w
mul r9.xyz, r5.wwww, r9.xyzx  // r9.x <- new_plane.normal.x; r9.y <- new_plane.normal.y; r9.z <- new_plane.normal.z
mov r10.xyz, r10.xyzx  // r10.x <- new_plane.pnt.x; r10.y <- new_plane.pnt.y; r10.z <- new_plane.pnt.z
mov r3.w, r3.w  // r3.w <- new_plane.texscalex
mov r4.w, r4.w  // r4.w <- new_plane.texscaley
mov r4.xyz, r4.xyzx  // r4.x <- <createPlane return value>.mtl.surface_color.x; r4.y <- <createPlane return value>.mtl.surface_color.y; r4.z <- <createPlane return value>.mtl.surface_color.z
mov r7.xyz, r7.xyzx  // r7.x <- <createPlane return value>.mtl.emissive_color.x; r7.y <- <createPlane return value>.mtl.emissive_color.y; r7.z <- <createPlane return value>.mtl.emissive_color.z
mov r8.xyz, r8.xyzx  // r8.x <- <createPlane return value>.mtl.ior; r8.y <- <createPlane return value>.mtl.gloss_angle; r8.z <- <createPlane return value>.mtl.surface_type
mov r9.xyz, r9.xyzx  // r9.x <- <createPlane return value>.normal.x; r9.y <- <createPlane return value>.normal.y; r9.z <- <createPlane return value>.normal.z
mov r10.xyz, r10.xyzx  // r10.x <- <createPlane return value>.pnt.x; r10.y <- <createPlane return value>.pnt.y; r10.z <- <createPlane return value>.pnt.z
mov r3.w, r3.w  // r3.w <- <createPlane return value>.texscalex
mov r4.w, r4.w  // r4.w <- <createPlane return value>.texscaley

#line 243
nop 
nop 
mov r11.xyz, l(0.800000,0.800000,0.800000,0)
mov r12.xyz, l(1.000000,1.000000,1.000000,0)
mov r13.x, l(1.000000)
mov r13.y, l(0)
mov r13.z, l(4)

#line 34
mov r11.xyz, r11.xyzx  // r11.x <- new_material.surface_color.x; r11.y <- new_material.surface_color.y; r11.z <- new_material.surface_color.z
mov r12.xyz, r12.xyzx  // r12.x <- new_material.emissive_color.x; r12.y <- new_material.emissive_color.y; r12.z <- new_material.emissive_color.z
mov r13.x, r13.x  // r13.x <- new_material.ior
mov r13.y, r13.y  // r13.y <- new_material.gloss_angle
mov r13.z, r13.z  // r13.z <- new_material.surface_type
mov r11.xyz, r11.xyzx  // r11.x <- <createMaterial return value>.surface_color.x; r11.y <- <createMaterial return value>.surface_color.y; r11.z <- <createMaterial return value>.surface_color.z
mov r12.xyz, r12.xyzx  // r12.x <- <createMaterial return value>.emissive_color.x; r12.y <- <createMaterial return value>.emissive_color.y; r12.z <- <createMaterial return value>.emissive_color.z
mov r13.x, r13.x  // r13.x <- <createMaterial return value>.ior
mov r13.y, r13.y  // r13.y <- <createMaterial return value>.gloss_angle
mov r13.z, r13.z  // r13.z <- <createMaterial return value>.surface_type

#line 243
mov r11.xyz, r11.xyzx
mov r12.xyz, r12.xyzx
mov r13.xyz, r13.xyzx
mov r14.xyz, l(0,1.000000,0,0)
mov r15.xyz, l(0,5.000000,0,0)
mov r5.w, l(1.000000)
mov r6.w, l(1.000000)

#line 133
mov r11.xyz, r11.xyzx  // r11.x <- new_plane.mtl.surface_color.x; r11.y <- new_plane.mtl.surface_color.y; r11.z <- new_plane.mtl.surface_color.z
mov r12.xyz, r12.xyzx  // r12.x <- new_plane.mtl.emissive_color.x; r12.y <- new_plane.mtl.emissive_color.y; r12.z <- new_plane.mtl.emissive_color.z
mov r13.xyz, r13.xyzx  // r13.x <- new_plane.mtl.ior; r13.y <- new_plane.mtl.gloss_angle; r13.z <- new_plane.mtl.surface_type
dp3 r7.w, r14.xyzx, r14.xyzx
rsq r7.w, r7.w
mul r14.xyz, r7.wwww, r14.xyzx  // r14.x <- new_plane.normal.x; r14.y <- new_plane.normal.y; r14.z <- new_plane.normal.z
mov r15.xyz, r15.xyzx  // r15.x <- new_plane.pnt.x; r15.y <- new_plane.pnt.y; r15.z <- new_plane.pnt.z
mov r5.w, r5.w  // r5.w <- new_plane.texscalex
mov r6.w, r6.w  // r6.w <- new_plane.texscaley
mov r11.xyz, r11.xyzx  // r11.x <- <createPlane return value>.mtl.surface_color.x; r11.y <- <createPlane return value>.mtl.surface_color.y; r11.z <- <createPlane return value>.mtl.surface_color.z
mov r12.xyz, r12.xyzx  // r12.x <- <createPlane return value>.mtl.emissive_color.x; r12.y <- <createPlane return value>.mtl.emissive_color.y; r12.z <- <createPlane return value>.mtl.emissive_color.z
mov r13.xyz, r13.xyzx  // r13.x <- <createPlane return value>.mtl.ior; r13.y <- <createPlane return value>.mtl.gloss_angle; r13.z <- <createPlane return value>.mtl.surface_type
mov r14.xyz, r14.xyzx  // r14.x <- <createPlane return value>.normal.x; r14.y <- <createPlane return value>.normal.y; r14.z <- <createPlane return value>.normal.z
mov r15.xyz, r15.xyzx  // r15.x <- <createPlane return value>.pnt.x; r15.y <- <createPlane return value>.pnt.y; r15.z <- <createPlane return value>.pnt.z
mov r5.w, r5.w  // r5.w <- <createPlane return value>.texscalex
mov r6.w, r6.w  // r6.w <- <createPlane return value>.texscaley

#line 243
nop 
nop 
mov r16.xyz, l(0.800000,0,0,0)
mov r17.xyz, l(0,0,0,0)
mov r18.x, l(1.000000)
mov r18.y, l(0)
mov r18.z, l(1)

#line 34
mov r16.xyz, r16.xyzx  // r16.x <- new_material.surface_color.x; r16.y <- new_material.surface_color.y; r16.z <- new_material.surface_color.z
mov r17.xyz, r17.xyzx  // r17.x <- new_material.emissive_color.x; r17.y <- new_material.emissive_color.y; r17.z <- new_material.emissive_color.z
mov r18.x, r18.x  // r18.x <- new_material.ior
mov r18.y, r18.y  // r18.y <- new_material.gloss_angle
mov r18.z, r18.z  // r18.z <- new_material.surface_type
mov r16.xyz, r16.xyzx  // r16.x <- <createMaterial return value>.surface_color.x; r16.y <- <createMaterial return value>.surface_color.y; r16.z <- <createMaterial return value>.surface_color.z
mov r17.xyz, r17.xyzx  // r17.x <- <createMaterial return value>.emissive_color.x; r17.y <- <createMaterial return value>.emissive_color.y; r17.z <- <createMaterial return value>.emissive_color.z
mov r18.x, r18.x  // r18.x <- <createMaterial return value>.ior
mov r18.y, r18.y  // r18.y <- <createMaterial return value>.gloss_angle
mov r18.z, r18.z  // r18.z <- <createMaterial return value>.surface_type

#line 243
mov r16.xyz, r16.xyzx
mov r17.xyz, r17.xyzx
mov r18.xyz, r18.xyzx
mov r19.xyz, l(-1.000000,0,0,0)
mov r20.xyz, l(-5.000000,0,0,0)
mov r7.w, l(1.000000)
mov r8.w, l(1.000000)

#line 133
mov r16.xyz, r16.xyzx  // r16.x <- new_plane.mtl.surface_color.x; r16.y <- new_plane.mtl.surface_color.y; r16.z <- new_plane.mtl.surface_color.z
mov r17.xyz, r17.xyzx  // r17.x <- new_plane.mtl.emissive_color.x; r17.y <- new_plane.mtl.emissive_color.y; r17.z <- new_plane.mtl.emissive_color.z
mov r18.xyz, r18.xyzx  // r18.x <- new_plane.mtl.ior; r18.y <- new_plane.mtl.gloss_angle; r18.z <- new_plane.mtl.surface_type
dp3 r9.w, r19.xyzx, r19.xyzx
rsq r9.w, r9.w
mul r19.xyz, r9.wwww, r19.xyzx  // r19.x <- new_plane.normal.x; r19.y <- new_plane.normal.y; r19.z <- new_plane.normal.z
mov r20.xyz, r20.xyzx  // r20.x <- new_plane.pnt.x; r20.y <- new_plane.pnt.y; r20.z <- new_plane.pnt.z
mov r7.w, r7.w  // r7.w <- new_plane.texscalex
mov r8.w, r8.w  // r8.w <- new_plane.texscaley
mov r16.xyz, r16.xyzx  // r16.x <- <createPlane return value>.mtl.surface_color.x; r16.y <- <createPlane return value>.mtl.surface_color.y; r16.z <- <createPlane return value>.mtl.surface_color.z
mov r17.xyz, r17.xyzx  // r17.x <- <createPlane return value>.mtl.emissive_color.x; r17.y <- <createPlane return value>.mtl.emissive_color.y; r17.z <- <createPlane return value>.mtl.emissive_color.z
mov r18.xyz, r18.xyzx  // r18.x <- <createPlane return value>.mtl.ior; r18.y <- <createPlane return value>.mtl.gloss_angle; r18.z <- <createPlane return value>.mtl.surface_type
mov r19.xyz, r19.xyzx  // r19.x <- <createPlane return value>.normal.x; r19.y <- <createPlane return value>.normal.y; r19.z <- <createPlane return value>.normal.z
mov r20.xyz, r20.xyzx  // r20.x <- <createPlane return value>.pnt.x; r20.y <- <createPlane return value>.pnt.y; r20.z <- <createPlane return value>.pnt.z
mov r7.w, r7.w  // r7.w <- <createPlane return value>.texscalex
mov r8.w, r8.w  // r8.w <- <createPlane return value>.texscaley

#line 243
nop 
nop 
mov r21.xyz, l(0,0.800000,0,0)
mov r22.xyz, l(0,0,0,0)
mov r23.x, l(1.000000)
mov r23.y, l(0)
mov r23.z, l(1)

#line 34
mov r21.xyz, r21.xyzx  // r21.x <- new_material.surface_color.x; r21.y <- new_material.surface_color.y; r21.z <- new_material.surface_color.z
mov r22.xyz, r22.xyzx  // r22.x <- new_material.emissive_color.x; r22.y <- new_material.emissive_color.y; r22.z <- new_material.emissive_color.z
mov r23.x, r23.x  // r23.x <- new_material.ior
mov r23.y, r23.y  // r23.y <- new_material.gloss_angle
mov r23.z, r23.z  // r23.z <- new_material.surface_type
mov r21.xyz, r21.xyzx  // r21.x <- <createMaterial return value>.surface_color.x; r21.y <- <createMaterial return value>.surface_color.y; r21.z <- <createMaterial return value>.surface_color.z
mov r22.xyz, r22.xyzx  // r22.x <- <createMaterial return value>.emissive_color.x; r22.y <- <createMaterial return value>.emissive_color.y; r22.z <- <createMaterial return value>.emissive_color.z
mov r23.x, r23.x  // r23.x <- <createMaterial return value>.ior
mov r23.y, r23.y  // r23.y <- <createMaterial return value>.gloss_angle
mov r23.z, r23.z  // r23.z <- <createMaterial return value>.surface_type

#line 243
mov r21.xyz, r21.xyzx
mov r22.xyz, r22.xyzx
mov r23.xyz, r23.xyzx
mov r24.xyz, l(1.000000,0,0,0)
mov r25.xyz, l(5.000000,0,0,0)
mov r9.w, l(1.000000)
mov r10.w, l(1.000000)

#line 133
mov r21.xyz, r21.xyzx  // r21.x <- new_plane.mtl.surface_color.x; r21.y <- new_plane.mtl.surface_color.y; r21.z <- new_plane.mtl.surface_color.z
mov r22.xyz, r22.xyzx  // r22.x <- new_plane.mtl.emissive_color.x; r22.y <- new_plane.mtl.emissive_color.y; r22.z <- new_plane.mtl.emissive_color.z
mov r23.xyz, r23.xyzx  // r23.x <- new_plane.mtl.ior; r23.y <- new_plane.mtl.gloss_angle; r23.z <- new_plane.mtl.surface_type
dp3 r11.w, r24.xyzx, r24.xyzx
rsq r11.w, r11.w
mul r24.xyz, r11.wwww, r24.xyzx  // r24.x <- new_plane.normal.x; r24.y <- new_plane.normal.y; r24.z <- new_plane.normal.z
mov r25.xyz, r25.xyzx  // r25.x <- new_plane.pnt.x; r25.y <- new_plane.pnt.y; r25.z <- new_plane.pnt.z
mov r9.w, r9.w  // r9.w <- new_plane.texscalex
mov r10.w, r10.w  // r10.w <- new_plane.texscaley
mov r21.xyz, r21.xyzx  // r21.x <- <createPlane return value>.mtl.surface_color.x; r21.y <- <createPlane return value>.mtl.surface_color.y; r21.z <- <createPlane return value>.mtl.surface_color.z
mov r22.xyz, r22.xyzx  // r22.x <- <createPlane return value>.mtl.emissive_color.x; r22.y <- <createPlane return value>.mtl.emissive_color.y; r22.z <- <createPlane return value>.mtl.emissive_color.z
mov r23.xyz, r23.xyzx  // r23.x <- <createPlane return value>.mtl.ior; r23.y <- <createPlane return value>.mtl.gloss_angle; r23.z <- <createPlane return value>.mtl.surface_type
mov r24.xyz, r24.xyzx  // r24.x <- <createPlane return value>.normal.x; r24.y <- <createPlane return value>.normal.y; r24.z <- <createPlane return value>.normal.z
mov r25.xyz, r25.xyzx  // r25.x <- <createPlane return value>.pnt.x; r25.y <- <createPlane return value>.pnt.y; r25.z <- <createPlane return value>.pnt.z
mov r9.w, r9.w  // r9.w <- <createPlane return value>.texscalex
mov r10.w, r10.w  // r10.w <- <createPlane return value>.texscaley

#line 243
nop 
nop 
mov r26.xyz, l(0.800000,0.800000,0.800000,0)
mov r27.xyz, l(0,0,0,0)
mov r28.x, l(1.000000)
mov r28.y, l(0)
mov r28.z, l(1)

#line 34
mov r26.xyz, r26.xyzx  // r26.x <- new_material.surface_color.x; r26.y <- new_material.surface_color.y; r26.z <- new_material.surface_color.z
mov r27.xyz, r27.xyzx  // r27.x <- new_material.emissive_color.x; r27.y <- new_material.emissive_color.y; r27.z <- new_material.emissive_color.z
mov r28.x, r28.x  // r28.x <- new_material.ior
mov r28.y, r28.y  // r28.y <- new_material.gloss_angle
mov r28.z, r28.z  // r28.z <- new_material.surface_type
mov r26.xyz, r26.xyzx  // r26.x <- <createMaterial return value>.surface_color.x; r26.y <- <createMaterial return value>.surface_color.y; r26.z <- <createMaterial return value>.surface_color.z
mov r27.xyz, r27.xyzx  // r27.x <- <createMaterial return value>.emissive_color.x; r27.y <- <createMaterial return value>.emissive_color.y; r27.z <- <createMaterial return value>.emissive_color.z
mov r28.x, r28.x  // r28.x <- <createMaterial return value>.ior
mov r28.y, r28.y  // r28.y <- <createMaterial return value>.gloss_angle
mov r28.z, r28.z  // r28.z <- <createMaterial return value>.surface_type

#line 243
mov r26.xyz, r26.xyzx
mov r27.xyz, r27.xyzx
mov r28.xyz, r28.xyzx
mov r29.xyz, l(0,0,-1.000000,0)
mov r30.xyz, l(0,0,-10.000000,0)
mov r11.w, l(1.000000)
mov r12.w, l(1.000000)

#line 133
mov r26.xyz, r26.xyzx  // r26.x <- new_plane.mtl.surface_color.x; r26.y <- new_plane.mtl.surface_color.y; r26.z <- new_plane.mtl.surface_color.z
mov r27.xyz, r27.xyzx  // r27.x <- new_plane.mtl.emissive_color.x; r27.y <- new_plane.mtl.emissive_color.y; r27.z <- new_plane.mtl.emissive_color.z
mov r28.xyz, r28.xyzx  // r28.x <- new_plane.mtl.ior; r28.y <- new_plane.mtl.gloss_angle; r28.z <- new_plane.mtl.surface_type
dp3 r13.w, r29.xyzx, r29.xyzx
rsq r13.w, r13.w
mul r29.xyz, r13.wwww, r29.xyzx  // r29.x <- new_plane.normal.x; r29.y <- new_plane.normal.y; r29.z <- new_plane.normal.z
mov r30.xyz, r30.xyzx  // r30.x <- new_plane.pnt.x; r30.y <- new_plane.pnt.y; r30.z <- new_plane.pnt.z
mov r11.w, r11.w  // r11.w <- new_plane.texscalex
mov r12.w, r12.w  // r12.w <- new_plane.texscaley
mov r26.xyz, r26.xyzx  // r26.x <- <createPlane return value>.mtl.surface_color.x; r26.y <- <createPlane return value>.mtl.surface_color.y; r26.z <- <createPlane return value>.mtl.surface_color.z
mov r27.xyz, r27.xyzx  // r27.x <- <createPlane return value>.mtl.emissive_color.x; r27.y <- <createPlane return value>.mtl.emissive_color.y; r27.z <- <createPlane return value>.mtl.emissive_color.z
mov r28.xyz, r28.xyzx  // r28.x <- <createPlane return value>.mtl.ior; r28.y <- <createPlane return value>.mtl.gloss_angle; r28.z <- <createPlane return value>.mtl.surface_type
mov r29.xyz, r29.xyzx  // r29.x <- <createPlane return value>.normal.x; r29.y <- <createPlane return value>.normal.y; r29.z <- <createPlane return value>.normal.z
mov r30.xyz, r30.xyzx  // r30.x <- <createPlane return value>.pnt.x; r30.y <- <createPlane return value>.pnt.y; r30.z <- <createPlane return value>.pnt.z
mov r11.w, r11.w  // r11.w <- <createPlane return value>.texscalex
mov r12.w, r12.w  // r12.w <- <createPlane return value>.texscaley

#line 243
nop 
nop 
mov r31.xyz, l(0.800000,0.800000,0.800000,0)
mov r32.xyz, l(0,0,0,0)
mov r33.x, l(1.000000)
mov r33.y, l(0)
mov r33.z, l(2)

#line 34
mov r31.xyz, r31.xyzx  // r31.x <- new_material.surface_color.x; r31.y <- new_material.surface_color.y; r31.z <- new_material.surface_color.z
mov r32.xyz, r32.xyzx  // r32.x <- new_material.emissive_color.x; r32.y <- new_material.emissive_color.y; r32.z <- new_material.emissive_color.z
mov r33.x, r33.x  // r33.x <- new_material.ior
mov r33.y, r33.y  // r33.y <- new_material.gloss_angle
mov r33.z, r33.z  // r33.z <- new_material.surface_type
mov r31.xyz, r31.xyzx  // r31.x <- <createMaterial return value>.surface_color.x; r31.y <- <createMaterial return value>.surface_color.y; r31.z <- <createMaterial return value>.surface_color.z
mov r32.xyz, r32.xyzx  // r32.x <- <createMaterial return value>.emissive_color.x; r32.y <- <createMaterial return value>.emissive_color.y; r32.z <- <createMaterial return value>.emissive_color.z
mov r33.x, r33.x  // r33.x <- <createMaterial return value>.ior
mov r33.y, r33.y  // r33.y <- <createMaterial return value>.gloss_angle
mov r33.z, r33.z  // r33.z <- <createMaterial return value>.surface_type

#line 243
mov r31.xyz, r31.xyzx
mov r32.xyz, r32.xyzx
mov r33.xyz, r33.xyzx
mov r34.xyz, l(0,0,1.000000,0)
mov r35.xyz, l(0,0,10.000000,0)
mov r13.w, l(1.000000)
mov r14.w, l(1.000000)

#line 133
mov r31.xyz, r31.xyzx  // r31.x <- new_plane.mtl.surface_color.x; r31.y <- new_plane.mtl.surface_color.y; r31.z <- new_plane.mtl.surface_color.z
mov r32.xyz, r32.xyzx  // r32.x <- new_plane.mtl.emissive_color.x; r32.y <- new_plane.mtl.emissive_color.y; r32.z <- new_plane.mtl.emissive_color.z
mov r33.xyz, r33.xyzx  // r33.x <- new_plane.mtl.ior; r33.y <- new_plane.mtl.gloss_angle; r33.z <- new_plane.mtl.surface_type
dp3 r15.w, r34.xyzx, r34.xyzx
rsq r15.w, r15.w
mul r34.xyz, r15.wwww, r34.xyzx  // r34.x <- new_plane.normal.x; r34.y <- new_plane.normal.y; r34.z <- new_plane.normal.z
mov r35.xyz, r35.xyzx  // r35.x <- new_plane.pnt.x; r35.y <- new_plane.pnt.y; r35.z <- new_plane.pnt.z
mov r13.w, r13.w  // r13.w <- new_plane.texscalex
mov r14.w, r14.w  // r14.w <- new_plane.texscaley
mov r31.xyz, r31.xyzx  // r31.x <- <createPlane return value>.mtl.surface_color.x; r31.y <- <createPlane return value>.mtl.surface_color.y; r31.z <- <createPlane return value>.mtl.surface_color.z
mov r32.xyz, r32.xyzx  // r32.x <- <createPlane return value>.mtl.emissive_color.x; r32.y <- <createPlane return value>.mtl.emissive_color.y; r32.z <- <createPlane return value>.mtl.emissive_color.z
mov r33.xyz, r33.xyzx  // r33.x <- <createPlane return value>.mtl.ior; r33.y <- <createPlane return value>.mtl.gloss_angle; r33.z <- <createPlane return value>.mtl.surface_type
mov r34.xyz, r34.xyzx  // r34.x <- <createPlane return value>.normal.x; r34.y <- <createPlane return value>.normal.y; r34.z <- <createPlane return value>.normal.z
mov r35.xyz, r35.xyzx  // r35.x <- <createPlane return value>.pnt.x; r35.y <- <createPlane return value>.pnt.y; r35.z <- <createPlane return value>.pnt.z
mov r13.w, r13.w  // r13.w <- <createPlane return value>.texscalex
mov r14.w, r14.w  // r14.w <- <createPlane return value>.texscaley

#line 243
mov x1[0].xyz, r4.xyzx
mov x1[1].xyz, r7.xyzx
mov x1[2].x, r8.x
mov x1[3].x, r8.y
mov x1[4].x, r8.z
mov x1[5].xyz, r9.xyzx
mov x1[6].xyz, r10.xyzx
mov x1[7].x, r3.w
mov x1[8].x, r4.w
mov x1[9].xyz, r11.xyzx
mov x1[10].xyz, r12.xyzx
mov x1[11].x, r13.x
mov x1[12].x, r13.y
mov x1[13].x, r13.z
mov x1[14].xyz, r14.xyzx
mov x1[15].xyz, r15.xyzx
mov x1[16].x, r5.w
mov x1[17].x, r6.w
mov x1[18].xyz, r16.xyzx
mov x1[19].xyz, r17.xyzx
mov x1[20].x, r18.x
mov x1[21].x, r18.y
mov x1[22].x, r18.z
mov x1[23].xyz, r19.xyzx
mov x1[24].xyz, r20.xyzx
mov x1[25].x, r7.w
mov x1[26].x, r8.w
mov x1[27].xyz, r21.xyzx
mov x1[28].xyz, r22.xyzx
mov x1[29].x, r23.x
mov x1[30].x, r23.y
mov x1[31].x, r23.z
mov x1[32].xyz, r24.xyzx
mov x1[33].xyz, r25.xyzx
mov x1[34].x, r9.w
mov x1[35].x, r10.w
mov x1[36].xyz, r26.xyzx
mov x1[37].xyz, r27.xyzx
mov x1[38].x, r28.x
mov x1[39].x, r28.y
mov x1[40].x, r28.z
mov x1[41].xyz, r29.xyzx
mov x1[42].xyz, r30.xyzx
mov x1[43].x, r11.w
mov x1[44].x, r12.w
mov x1[45].xyz, r31.xyzx
mov x1[46].xyz, r32.xyzx
mov x1[47].x, r33.x
mov x1[48].x, r33.y
mov x1[49].x, r33.z
mov x1[50].xyz, r34.xyzx
mov x1[51].xyz, r35.xyzx
mov x1[52].x, r13.w
mov x1[53].x, r14.w

#line 6 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\path_tr"
mul r4.xy, v1.xyxx, cb2[0].wwww  // r4.x <- curSeed.x; r4.y <- curSeed.y
itof r3.w, l(2)
mul r4.z, v1.x, cb2[1].w
nop 
mov r4.xy, r4.xyxx

#line 203 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)precompile\pa"
dp2 r4.w, r4.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
sincos r4.w, null, r4.w
mul r4.w, r4.w, l(43758.546875)
frc r4.w, r4.w  // r4.w <- <random return value>

#line 8 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\path_tr"
add r4.z, r4.w, r4.z
div r4.z, r4.z, cb2[1].w
mul r3.w, r3.w, r4.z
itof r4.z, l(1)
mov r4.z, -r4.z
add r3.w, r3.w, r4.z
mul r3.w, r1.z, r3.w
mul r3.w, r3.w, cb2[1].w
div r3.w, r3.w, cb2[2].x  // r3.w <- xx
itof r4.z, l(1)
itof r4.w, l(2)
mul r5.w, v1.y, cb2[2].x
nop 
itof r7.xy, l(2, 2, 0, 0)
mul r7.xy, r4.xyxx, r7.xyxx

#line 203 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)precompile\pa"
dp2 r6.w, r7.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
sincos r6.w, null, r6.w
mul r6.w, r6.w, l(43758.546875)
frc r6.w, r6.w  // r6.w <- <random return value>

#line 9 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\path_tr"
add r5.w, r5.w, r6.w
div r5.w, r5.w, cb2[2].x
mul r4.w, r4.w, r5.w
mov r4.w, -r4.w
add r4.z, r4.w, r4.z
mul r1.z, r1.z, r4.z  // r1.z <- yy
nop 
mov r2.xyz, r2.xyzx
mul r5.xyz, r3.wwww, r5.xyzx
mul r6.xyz, r1.zzzz, r6.xyzx
add r5.xyz, r5.xyzx, r6.xyzx
add r3.xyz, r3.xyzx, r5.xyzx
dp3 r1.z, r3.xyzx, r3.xyzx
rsq r1.z, r1.z
mul r3.xyz, r1.zzzz, r3.xyzx
mov r4.xy, r4.xyxx

#line 256 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)precompile\pa"
itof r5.xyz, l(1, 1, 1, 0)  // r5.x <- ray_color.x; r5.y <- ray_color.y; r5.z <- ray_color.z
mov r1.z, l(3)  // r1.z <- rand_counter

#line 262
mov r0.x, r0.x  // r0.x <- nearest_dist
mov r3.w, l(0)  // r3.w <- nearest_index
mov r4.z, l(0)  // r4.z <- nearest_type
itof r6.xyzw, l(0, 0, 0, 0)  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r6.w <- nearest_mtl.ior
itof r4.w, l(0)  // r4.w <- nearest_mtl.gloss_angle
mov r5.w, l(0)  // r5.w <- nearest_mtl.surface_type

#line 268
mov r7.x, l(0)  // r7.x <- i
mov r7.yzw, r6.xxyz  // r7.y <- nearest_mtl.emissive_color.x; r7.z <- nearest_mtl.emissive_color.y; r7.w <- nearest_mtl.emissive_color.z
mov r8.x, r0.x  // r8.x <- nearest_dist
mov r8.y, r3.w  // r8.y <- nearest_index
mov r8.z, r4.z  // r8.z <- nearest_type
mov r8.w, r6.w  // r8.w <- nearest_mtl.ior
mov r9.x, r4.w  // r9.x <- nearest_mtl.gloss_angle
mov r9.y, r5.w  // r9.y <- nearest_mtl.surface_type
mov r9.z, r7.x  // r9.z <- i
loop 
  ult r9.w, r9.z, r1.w
  breakc_z r9.w
  nop 
  imul null, r9.w, r9.z, l(8)
  mov r10.xyz, x0[r9.w + 5].xyzx
  mov r9.w, x0[r9.w + 7].x
  mov r10.xyz, r10.xyzx
  mov r9.w, r9.w
  mov r11.xyz, r2.xyzx
  mov r12.xyz, r3.xyzx

#line 92
  mov r11.xyz, -r11.xyzx
  add r10.xyz, r10.xyzx, r11.xyzx  // r10.x <- l.x; r10.y <- l.y; r10.z <- l.z

#line 95
  dp3 r10.w, r10.xyzx, r12.xyzx  // r10.w <- tca
  itof r11.x, l(0)
  lt r11.x, r10.w, r11.x
  if_nz r11.x
    nop 
    mov r11.y, l(0)
    itof r11.z, l(0)

#line 54
    mov r11.y, r11.y  // r11.y <- new_intersect.intersection
    mov r11.z, r11.z  // r11.z <- new_intersect.dist
    mov r11.y, r11.y  // r11.y <- <createIntersect return value>.intersection
    mov r11.z, r11.z  // r11.z <- <createIntersect return value>.dist

#line 98
    mov r11.yz, r11.yyzy  // r11.y <- <sphereGetIntersect return value>.intersection; r11.z <- <sphereGetIntersect return value>.dist
  endif 

#line 102
  if_z r11.x
    dp3 r10.x, r10.xyzx, r10.xyzx
    mul r10.y, r10.w, r10.w
    mov r10.y, -r10.y
    add r10.x, r10.y, r10.x  // r10.x <- d2
    lt r10.y, r9.w, r10.x
    if_nz r10.y
      nop 
      mov r11.y, l(0)  // r11.y <- i
      itof r11.z, l(0)  // r11.z <- d

#line 54
      mov r11.y, r11.y  // r11.y <- new_intersect.intersection; r11.y <- new_intersect.intersection
      mov r11.z, r11.z  // r11.z <- new_intersect.dist; r11.z <- new_intersect.dist
      mov r11.y, r11.y  // r11.y <- <createIntersect return value>.intersection; r11.y <- <createIntersect return value>.intersection
      mov r11.z, r11.z  // r11.z <- <createIntersect return value>.dist; r11.z <- <createIntersect return value>.dist

#line 105
      mov r11.yz, r11.yyzy
    endif 

#line 109
    if_z r10.y
      mov r10.x, -r10.x
      add r9.w, r9.w, r10.x
      sqrt r9.w, r9.w  // r9.w <- thc
      mov r10.x, -r9.w
      add r11.z, r10.x, r10.w  // r11.z <- d
      itof r10.x, l(0)
      lt r10.x, r11.z, r10.x
      if_nz r10.x
        add r11.z, r9.w, r10.w
      endif 
      nop 
      mov r11.y, l(-1)  // r11.y <- i; r11.y <- i
      mov r11.z, r11.z  // r11.z <- d; r11.z <- d

#line 54
      mov r11.y, r11.y  // r11.y <- new_intersect.intersection; r11.y <- new_intersect.intersection; r11.y <- new_intersect.intersection
      mov r11.z, r11.z  // r11.z <- new_intersect.dist; r11.z <- new_intersect.dist; r11.z <- new_intersect.dist
      mov r11.y, r11.y  // r11.y <- <createIntersect return value>.intersection; r11.y <- <createIntersect return value>.intersection; r11.y <- <createIntersect return value>.intersection
      mov r11.z, r11.z  // r11.z <- <createIntersect return value>.dist; r11.z <- <createIntersect return value>.dist; r11.z <- <createIntersect return value>.dist

#line 116
      mov r11.yz, r11.yyzy  // r11.z <- <sphereGetIntersect return value>.dist
    endif 
  endif 

#line 270
  mov r11.z, r11.z  // r11.z <- curIntersect.dist
  if_nz r11.y
    lt r9.w, r11.z, r8.x
    if_nz r9.w
      mov r8.x, r11.z
      mov r8.y, r9.z
      mov r8.z, l(1)
      imul null, r9.w, r9.z, l(8)
      mov r7.yzw, x0[r9.w + 1].xxyz
      mov r8.w, x0[r9.w + 2].x
      mov r9.x, x0[r9.w + 3].x
      mov r9.y, x0[r9.w + 4].x
    endif 
  endif 

#line 281
  iadd r9.z, r9.z, l(1)
endloop 
mov r3.w, l(0)  // r3.w <- j
mov r6.xyz, r7.yzwy  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z
mov r4.z, r8.x  // r4.z <- nearest_dist
mov r4.w, r8.y  // r4.w <- nearest_index
mov r5.w, r8.z  // r5.w <- nearest_type
mov r6.w, r8.w  // r6.w <- nearest_mtl.ior
mov r7.x, r9.x  // r7.x <- nearest_mtl.gloss_angle
mov r9.z, r9.y  // r9.z <- nearest_mtl.surface_type
mov r9.w, r3.w  // r9.w <- j
loop 
  ult r10.x, r9.w, r2.w
  breakc_z r10.x
  nop 
  imul null, r10.x, r9.w, l(9)
  mov r10.yzw, x1[r10.x + 5].xxyz
  mov r11.xyz, x1[r10.x + 6].xyzx
  mov r10.yzw, r10.yyzw
  mov r11.xyz, r11.xyzx
  mov r12.xyz, r2.xyzx
  mov r13.xyz, r3.xyzx

#line 154
  dp3 r10.x, r10.yzwy, r13.xyzx  // r10.x <- denom
  lt r11.w, l(0.000001), r10.x
  if_nz r11.w
    mov r12.xyz, -r12.xyzx
    add r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- origintopoint.x; r11.y <- origintopoint.y; r11.z <- origintopoint.z
    dp3 r10.y, r11.xyzx, r10.yzwy
    div r10.y, r10.y, r10.x  // r10.y <- d
    itof r10.z, l(0)
    ge r10.z, r10.y, r10.z
    if_nz r10.z
      nop 
      mov r10.x, l(-1)  // r10.x <- i; r10.x <- i; r10.x <- i
      mov r10.y, r10.y  // r10.y <- d; r10.y <- d; r10.y <- d

#line 54
      mov r10.x, r10.x  // r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection
      mov r10.y, r10.y  // r10.y <- new_intersect.dist; r10.y <- new_intersect.dist; r10.y <- new_intersect.dist; r10.y <- new_intersect.dist
      mov r10.x, r10.x  // r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection
      mov r10.y, r10.y  // r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist

#line 159
      mov r10.xy, r10.xyxx  // r10.x <- <planeGetIntersect return value>.intersection; r10.y <- <planeGetIntersect return value>.dist
    endif 
  else   // Prior locations: r10.y <- pln.normal.x; r10.z <- pln.normal.y; r11.x <- pln.pnt.x; r11.y <- pln.pnt.y; r11.z <- pln.pnt.z; r12.x <- rayorig.x; r12.y <- rayorig.y; r12.z <- rayorig.z; r10.x <- denom
    mov r10.z, l(0)
  endif 
  if_z r10.z  // r10.x <- <planeGetIntersect return value>.intersection; r10.y <- <planeGetIntersect return value>.dist
    nop 
    mov r10.x, l(0)  // r10.x <- i; r10.x <- i; r10.x <- i; r10.x <- i
    itof r10.y, l(0)  // r10.y <- d; r10.y <- d; r10.y <- d; r10.y <- d

#line 54
    mov r10.x, r10.x  // r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection
    mov r10.y, r10.y  // r10.y <- new_intersect.dist; r10.y <- new_intersect.dist; r10.y <- new_intersect.dist; r10.y <- new_intersect.dist; r10.y <- new_intersect.dist
    mov r10.x, r10.x  // r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection
    mov r10.y, r10.y  // r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist

#line 162
    mov r10.xy, r10.xyxx
  endif 

#line 284
  mov r10.y, r10.y  // r10.y <- curIntersect.dist
  if_nz r10.x
    lt r10.x, r10.y, r4.z
    if_nz r10.x
      mov r4.z, r10.y
      mov r4.w, r9.w
      mov r5.w, l(2)
      imul null, r10.x, r9.w, l(9)
      mov r6.xyz, x1[r10.x + 1].xyzx
      mov r6.w, x1[r10.x + 2].x
      mov r7.x, x1[r10.x + 3].x
      mov r9.z, x1[r10.x + 4].x
    endif 
  endif 

#line 295
  iadd r9.w, r9.w, l(1)
endloop 

#line 298
mov r3.w, l(0)
ieq r7.yz, r3.wwww, r5.wwww
if_z r5.w
  mov r8.xyz, r0.yzwy
endif   // r8.x <- <trace return value>.x; r8.y <- <trace return value>.y; r8.z <- <trace return value>.z
not r3.w, r7.z
not r7.w, r7.y
and r3.w, r3.w, r7.w
not r7.w, r3.w
if_nz r3.w
  mov r8.w, l(4)
  ieq r8.w, r8.w, r9.z
  if_nz r8.w
    mul r5.xyz, r5.xyzx, r6.xyzx
  endif 

#line 310
  not r6.x, r8.w
  not r6.x, r6.x
  if_z r8.w
    mul r9.xyw, r3.xyxz, r4.zzzz
    add r9.xyw, r2.xyxz, r9.xyxw  // r9.x <- phit.x; r9.y <- phit.y; r9.w <- phit.z
    mov r4.z, l(1)
    ieq r4.z, r4.z, r5.w
    nop 
    imul null, r6.y, r4.w, l(8)
    mov r10.xyz, x0[r6.y + 0].xyzx

#line 87
    mov r10.xyz, r10.xyzx  // r10.x <- <sphereGetSurfaceColor return value>.x; r10.y <- <sphereGetSurfaceColor return value>.y; r10.z <- <sphereGetSurfaceColor return value>.z

#line 311
    nop 
    imul null, r6.y, r4.w, l(9)
    mov r11.xyz, x1[r6.y + 0].xyzx

#line 149
    mov r11.xyz, r11.xyzx  // r11.x <- <planeGetSurfaceColor return value>.x; r11.y <- <planeGetSurfaceColor return value>.y; r11.z <- <planeGetSurfaceColor return value>.z

#line 311
    movc r10.xyz, r4.zzzz, r10.xyzx, r11.xyzx  // r10.x <- chit.x; r10.y <- chit.y; r10.z <- chit.z
    mul r5.xyz, r5.xyzx, r10.xyzx
    mov r4.z, l(1)
    ieq r4.z, r4.z, r5.w
    nop 
    imul null, r5.w, r4.w, l(8)
    mov r10.xyz, x0[r5.w + 5].xyzx
    mov r9.xyw, r9.xyxw

#line 82
    mov r10.xyz, -r10.xyzx
    add r10.xyz, r9.xywx, r10.xyzx  // r10.x <- <sphereGetNormal return value>.x; r10.y <- <sphereGetNormal return value>.y; r10.z <- <sphereGetNormal return value>.z

#line 314
    nop 
    imul null, r4.w, r4.w, l(9)
    mov r11.xyz, x1[r4.w + 5].xyzx

#line 144
    mov r11.xyz, r11.xyzx  // r11.x <- <planeGetNormal return value>.x; r11.y <- <planeGetNormal return value>.y; r11.z <- <planeGetNormal return value>.z

#line 314
    movc r10.xyz, r4.zzzz, r10.xyzx, r11.xyzx  // r10.x <- nhit.x; r10.y <- nhit.y; r10.z <- nhit.z

#line 317
    dp3 r4.z, r3.xyzx, r10.xyzx
    itof r4.w, l(0)
    lt r4.z, r4.w, r4.z  // r4.z <- inside
    if_nz r4.z
      mov r10.xyz, -r10.xyzx
    endif 

#line 320
    mov r4.w, l(1)
    ieq r4.w, r4.w, r9.z
    if_nz r4.w
      mul r11.xyz, r1.yyyy, r10.xyzx
      add r2.xyz, r9.xywx, r11.xyzx
      nop 
      mov r11.xyz, r10.xyzx
      mov r4.xy, r4.xyxx
      mov r1.z, r1.z

#line 209
      nop 
      itof r6.yz, r1.zzzz
      mul r6.yz, r4.xxyx, r6.yyzy

#line 203
      dp2 r5.w, r6.yzyy, l(12.989800, 78.233002, 0.000000, 0.000000)
      sincos r5.w, null, r5.w
      mul r5.w, r5.w, l(43758.546875)
      frc r5.w, r5.w  // r5.w <- <random return value>

#line 209
      mul r5.w, r5.w, l(6.283185)  // r5.w <- r1
      iadd r6.y, r1.z, l(1)  // r6.y <- c
      nop 
      itof r12.xy, r6.yyyy
      mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y

#line 203
      dp2 r6.z, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
      sincos r6.z, null, r6.z
      mul r6.z, r6.z, l(43758.546875)
      frc r6.z, r6.z  // r6.z <- <random return value>; r6.z <- <random return value>

#line 210
      mov r6.z, r6.z  // r6.z <- r2
      iadd r1.z, r6.y, l(1)  // r1.z <- c
      sqrt r6.y, r6.z  // r6.y <- r2s
      mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
      mov r10.w, -r11.x
      max r10.w, r10.w, r11.x
      lt r10.w, l(0.100000), r10.w
      itof r12.xyz, l(0, 0, 1, 0)
      itof r13.xyz, l(0, 1, 0, 0)
      movc r12.xyz, r10.wwww, r12.xyzx, r13.xyzx
      mul r13.xyz, r11.zxyz, r12.zxyz
      mul r12.xyz, r11.yzxy, r12.xyzx
      mov r12.xyz, -r12.xyzx
      add r12.xyz, r12.xyzx, r13.xyzx
      dp3 r10.w, r12.xyzx, r12.xyzx
      rsq r10.w, r10.w
      mul r12.xyz, r10.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
      mul r13.xyz, r11.yzxy, r12.zxyz
      mul r14.xyz, r11.zxyz, r12.yzxy
      mov r14.xyz, -r14.xyzx
      add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
      sincos null, r10.w, r5.w
      mul r12.xyz, r10.wwww, r12.xyzx
      mul r12.xyz, r6.yyyy, r12.xyzx
      sincos r5.w, null, r5.w
      mul r13.xyz, r5.wwww, r13.xyzx
      mul r13.xyz, r6.yyyy, r13.xyzx
      add r12.xyz, r12.xyzx, r13.xyzx
      itof r5.w, l(1)
      mov r6.y, -r6.z
      add r5.w, r5.w, r6.y
      sqrt r5.w, r5.w
      mul r11.xyz, r5.wwww, r11.xyzx
      add r11.xyz, r11.xyzx, r12.xyzx
      dp3 r5.w, r11.xyzx, r11.xyzx
      rsq r5.w, r5.w
      mul r3.xyz, r5.wwww, r11.xyzx  // r3.x <- <randomHemisphereDirection return value>.x; r3.y <- <randomHemisphereDirection return value>.y; r3.z <- <randomHemisphereDirection return value>.z

#line 323
      mov r1.z, r1.z  // r1.z <- rand_counter
      mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
    endif 
    if_z r4.w
      mov r4.w, l(2)
      ieq r4.w, r4.w, r9.z
      if_nz r4.w
        mul r11.xyz, r1.yyyy, r10.xyzx
        add r2.xyz, r9.xywx, r11.xyzx
        dp3 r5.w, r3.xyzx, r10.xyzx
        add r5.w, r5.w, r5.w
        mov r5.w, -r5.w
        mul r11.xyz, r5.wwww, r10.xyzx
        add r11.xyz, r3.xyzx, r11.xyzx
        dp3 r5.w, r11.xyzx, r11.xyzx
        rsq r5.w, r5.w
        mul r3.xyz, r5.wwww, r11.xyzx
      endif 

#line 334
      if_z r4.w
        mov r4.w, l(3)
        ieq r4.w, r4.w, r9.z
        if_nz r4.w
          mul r11.xyz, r1.yyyy, r10.xyzx
          add r2.xyz, r9.xywx, r11.xyzx
          nop 
          dp3 r5.w, r3.xyzx, r10.xyzx
          add r5.w, r5.w, r5.w
          mov r5.w, -r5.w
          mul r11.xyz, r5.wwww, r10.xyzx
          add r11.xyz, r3.xyzx, r11.xyzx
          dp3 r5.w, r11.xyzx, r11.xyzx
          rsq r5.w, r5.w
          mul r11.xyz, r5.wwww, r11.xyzx
          mov r7.x, r7.x
          mov r4.xy, r4.xyxx
          mov r1.z, r1.z

#line 222
          nop 
          itof r6.yz, r1.zzzz
          mul r6.yz, r4.xxyx, r6.yyzy  // r6.y <- uv.x; r6.z <- uv.y; r6.y <- uv.x; r6.z <- uv.y

#line 203
          dp2 r5.w, r6.yzyy, l(12.989800, 78.233002, 0.000000, 0.000000)
          sincos r5.w, null, r5.w
          mul r5.w, r5.w, l(43758.546875)
          frc r5.w, r5.w  // r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>

#line 222
          mul r5.w, r5.w, l(6.283185)  // r5.w <- r1
          iadd r6.y, r1.z, l(1)  // r6.y <- c
          sincos r6.z, null, r7.x
          sincos r10.w, null, r7.x
          mul r6.z, r6.z, r10.w
          nop 
          itof r12.xy, r6.yyyy
          mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
          dp2 r10.w, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
          sincos r10.w, null, r10.w
          mul r10.w, r10.w, l(43758.546875)
          frc r10.w, r10.w  // r10.w <- <random return value>; r10.w <- <random return value>; r10.w <- <random return value>; r10.w <- <random return value>

#line 223
          mul r6.z, r6.z, r10.w  // r6.z <- r2
          iadd r1.z, r6.y, l(1)  // r1.z <- c
          sqrt r6.y, r6.z  // r6.y <- r2s
          mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
          mov r10.w, -r11.x
          max r10.w, r10.w, r11.x
          lt r10.w, l(0.100000), r10.w
          itof r12.xyz, l(0, 0, 1, 0)
          itof r13.xyz, l(0, 1, 0, 0)
          movc r12.xyz, r10.wwww, r12.xyzx, r13.xyzx
          mul r13.xyz, r11.zxyz, r12.zxyz
          mul r12.xyz, r11.yzxy, r12.xyzx
          mov r12.xyz, -r12.xyzx
          add r12.xyz, r12.xyzx, r13.xyzx
          dp3 r10.w, r12.xyzx, r12.xyzx
          rsq r10.w, r10.w
          mul r12.xyz, r10.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
          mul r13.xyz, r11.yzxy, r12.zxyz
          mul r14.xyz, r11.zxyz, r12.yzxy
          mov r14.xyz, -r14.xyzx
          add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
          sincos null, r10.w, r5.w
          mul r12.xyz, r10.wwww, r12.xyzx
          mul r12.xyz, r6.yyyy, r12.xyzx
          sincos r5.w, null, r5.w
          mul r13.xyz, r5.wwww, r13.xyzx
          mul r13.xyz, r6.yyyy, r13.xyzx
          add r12.xyz, r12.xyzx, r13.xyzx
          itof r5.w, l(1)
          mov r6.y, -r6.z
          add r5.w, r5.w, r6.y
          sqrt r5.w, r5.w
          mul r11.xyz, r5.wwww, r11.xyzx
          add r11.xyz, r11.xyzx, r12.xyzx
          dp3 r5.w, r11.xyzx, r11.xyzx
          rsq r5.w, r5.w
          mul r3.xyz, r5.wwww, r11.xyzx  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 337
          mov r1.z, r1.z  // r1.z <- rand_counter
          mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
        endif 
        if_z r4.w
          mov r4.w, l(5)
          ieq r4.w, r4.w, r9.z
          if_nz r4.w
            itof r5.w, l(1)
            div r5.w, r5.w, r6.w
            movc r5.w, r4.z, r6.w, r5.w  // r5.w <- n
            mul r11.xyz, r1.yyyy, r10.xyzx
            mov r11.xyz, -r11.xyzx
            add r2.xyz, r9.xywx, r11.xyzx
            dp3 r6.y, r3.xyzx, r10.xyzx
            mul r6.z, r6.y, r6.y
            mul r10.w, r5.w, r5.w
            mov r6.z, -r6.z
            add r6.z, r6.z, l(1.000000)
            mul r6.z, r6.z, r10.w
            mov r6.z, -r6.z
            add r6.z, r6.z, l(1.000000)
            sqrt r10.w, r6.z
            mul r6.y, r5.w, r6.y
            add r6.y, r10.w, r6.y
            ge r6.z, r6.z, l(0.000000)
            mul r11.xyz, r3.xyzx, r5.wwww
            mul r12.xyz, r10.xyzx, r6.yyyy
            mov r12.xyz, -r12.xyzx
            add r11.xyz, r11.xyzx, r12.xyzx
            movc r11.xyz, r6.zzzz, r11.xyzx, l(0,0,0,0)
            dp3 r5.w, r11.xyzx, r11.xyzx
            rsq r5.w, r5.w
            mul r3.xyz, r5.wwww, r11.xyzx
          endif 

#line 349
          if_z r4.w
            mov r4.w, l(6)
            ieq r4.w, r4.w, r9.z
            if_nz r4.w
              itof r4.w, l(1)
              div r4.w, r4.w, r6.w
              movc r4.z, r4.z, r6.w, r4.w  // r4.z <- n
              mul r6.yzw, r1.yyyy, r10.xxyz
              mov r6.yzw, -r6.yyzw
              add r2.xyz, r6.yzwy, r9.xywx
              nop 
              dp3 r4.w, r3.xyzx, r10.xyzx
              mul r5.w, r4.w, r4.w
              mul r6.y, r4.z, r4.z
              mov r5.w, -r5.w
              add r5.w, r5.w, l(1.000000)
              mul r5.w, r5.w, r6.y
              mov r5.w, -r5.w
              add r5.w, r5.w, l(1.000000)
              sqrt r6.y, r5.w
              mul r4.w, r4.w, r4.z
              add r4.w, r6.y, r4.w
              ge r5.w, r5.w, l(0.000000)
              mul r6.yzw, r3.xxyz, r4.zzzz
              mul r9.xyz, r10.xyzx, r4.wwww
              mov r9.xyz, -r9.xyzx
              add r6.yzw, r6.yyzw, r9.xxyz
              movc r6.yzw, r5.wwww, r6.yyzw, l(0,0,0,0)
              dp3 r4.z, r6.yzwy, r6.yzwy
              rsq r4.z, r4.z
              mul r6.yzw, r4.zzzz, r6.yyzw  // r6.y <- r.x; r6.z <- r.y; r6.w <- r.z
              mov r7.x, r7.x  // r7.x <- theta
              mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y
              mov r1.z, r1.z  // r1.z <- c

#line 222
              nop 
              itof r4.zw, r1.zzzz
              mul r4.zw, r4.zzzw, r4.xxxy  // r4.z <- uv.x; r4.w <- uv.y; r4.z <- uv.x; r4.w <- uv.y; r4.z <- uv.x; r4.w <- uv.y; r4.z <- uv.x; r4.w <- uv.y

#line 203
              dp2 r4.z, r4.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
              sincos r4.z, null, r4.z
              mul r4.z, r4.z, l(43758.546875)
              frc r4.z, r4.z  // r4.z <- <random return value>; r4.z <- <random return value>; r4.z <- <random return value>; r4.z <- <random return value>; r4.z <- <random return value>

#line 222
              mul r4.z, r4.z, l(6.283185)  // r4.z <- r1; r4.z <- r1
              iadd r4.w, r1.z, l(1)  // r4.w <- c; r4.w <- c
              sincos r5.w, null, r7.x
              sincos r7.x, null, r7.x
              mul r5.w, r5.w, r7.x
              nop 
              itof r9.xy, r4.wwww
              mul r9.xy, r4.xyxx, r9.xyxx  // r9.x <- uv.x; r9.y <- uv.y; r9.x <- uv.x; r9.y <- uv.y; r9.x <- uv.x; r9.y <- uv.y; r9.x <- uv.x; r9.y <- uv.y; r9.x <- uv.x; r9.y <- uv.y

#line 203
              dp2 r7.x, r9.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
              sincos r7.x, null, r7.x
              mul r7.x, r7.x, l(43758.546875)
              frc r7.x, r7.x  // r7.x <- <random return value>; r7.x <- <random return value>; r7.x <- <random return value>; r7.x <- <random return value>; r7.x <- <random return value>; r7.x <- <random return value>

#line 223
              mul r5.w, r5.w, r7.x  // r5.w <- r2; r5.w <- r2
              iadd r1.z, r4.w, l(1)  // r1.z <- c; r1.z <- c
              sqrt r4.w, r5.w  // r4.w <- r2s; r4.w <- r2s
              mov r6.yzw, r6.yyzw  // r6.y <- w.x; r6.z <- w.y; r6.w <- w.z; r6.y <- w.x; r6.z <- w.y; r6.w <- w.z
              mov r7.x, -r6.y
              max r7.x, r6.y, r7.x
              lt r7.x, l(0.100000), r7.x
              itof r9.xyz, l(0, 0, 1, 0)
              itof r10.xyz, l(0, 1, 0, 0)
              movc r9.xyz, r7.xxxx, r9.xyzx, r10.xyzx
              mul r10.xyz, r6.wyzw, r9.zxyz
              mul r9.xyz, r6.zwyz, r9.xyzx
              mov r9.xyz, -r9.xyzx
              add r9.xyz, r9.xyzx, r10.xyzx
              dp3 r7.x, r9.xyzx, r9.xyzx
              rsq r7.x, r7.x
              mul r9.xyz, r7.xxxx, r9.xyzx  // r9.x <- u.x; r9.y <- u.y; r9.z <- u.z; r9.x <- u.x; r9.y <- u.y; r9.z <- u.z
              mul r10.xyz, r6.zwyz, r9.zxyz
              mul r11.xyz, r6.wyzw, r9.yzxy
              mov r11.xyz, -r11.xyzx
              add r10.xyz, r10.xyzx, r11.xyzx  // r10.x <- v.x; r10.y <- v.y; r10.z <- v.z; r10.x <- v.x; r10.y <- v.y; r10.z <- v.z
              sincos null, r7.x, r4.z
              mul r9.xyz, r7.xxxx, r9.xyzx
              mul r9.xyz, r4.wwww, r9.xyzx
              sincos r4.z, null, r4.z
              mul r10.xyz, r4.zzzz, r10.xyzx
              mul r10.xyz, r4.wwww, r10.xyzx
              add r9.xyz, r9.xyzx, r10.xyzx
              itof r4.z, l(1)
              mov r4.w, -r5.w
              add r4.z, r4.w, r4.z
              sqrt r4.z, r4.z
              mul r6.yzw, r4.zzzz, r6.yyzw
              add r6.yzw, r6.yyzw, r9.xxyz
              dp3 r4.z, r6.yzwy, r6.yzwy
              rsq r4.z, r4.z
              mul r3.xyz, r4.zzzz, r6.yzwy  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 353
              mov r1.z, r1.z  // r1.z <- rand_counter
              mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
            endif 
          endif 
        endif 
      endif 
    endif 
  endif 
  or r4.z, r8.w, r6.x
else   // Prior locations: r4.x <- curSeed.x; r4.y <- curSeed.y; r2.x <- main_camera.pos.x; r2.y <- main_camera.pos.y; r2.z <- main_camera.pos.z; r4.x <- seed.x; r4.y <- seed.y; r4.z <- nearest_dist; r4.w <- nearest_index; r5.w <- nearest_type; r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r6.w <- nearest_mtl.ior; r7.x <- nearest_mtl.gloss_angle; r9.z <- nearest_mtl.surface_type; r9.w <- j
  mov r4.z, l(-1)
endif 
and r4.z, r3.w, r4.z
or r4.z, r7.z, r4.z
and r3.w, r3.w, r7.w
or r3.w, r7.y, r3.w

#line 260
not r4.w, r4.z
not r5.w, r3.w
and r4.w, r4.w, r5.w
max r5.w, r5.y, r5.x
max r5.w, r5.z, r5.w
lt r5.w, r1.x, r5.w
and r4.w, r4.w, r5.w
if_nz r4.w

#line 263
  not r5.w, r4.z
  not r6.x, r3.w
  and r5.w, r5.w, r6.x
  if_nz r5.w  // r0.x <- INFINITY; r0.x <- nearest_dist; r0.x <- INFINITY
    mov r6.x, l(0)  // r6.x <- nearest_index
    mov r6.y, l(0)  // r6.y <- nearest_type
    itof r7.xyzw, l(0, 0, 0, 0)  // r7.x <- nearest_mtl.emissive_color.x; r7.y <- nearest_mtl.emissive_color.y; r7.z <- nearest_mtl.emissive_color.z; r7.w <- nearest_mtl.ior
    itof r6.z, l(0)  // r6.z <- nearest_mtl.gloss_angle
    mov r6.w, l(0)  // r6.w <- nearest_mtl.surface_type

#line 268
    mov r8.w, l(0)  // r8.w <- i
    mov r9.xyz, r7.xyzx  // r9.x <- nearest_mtl.emissive_color.x; r9.y <- nearest_mtl.emissive_color.y; r9.z <- nearest_mtl.emissive_color.z
    mov r9.w, r0.x  // r9.w <- nearest_dist
    mov r10.x, r6.x  // r10.x <- nearest_index
    mov r10.y, r6.y  // r10.y <- nearest_type
    mov r10.z, r7.w  // r10.z <- nearest_mtl.ior
    mov r10.w, r6.z  // r10.w <- nearest_mtl.gloss_angle
    mov r11.x, r6.w  // r11.x <- nearest_mtl.surface_type
    mov r11.y, r8.w  // r11.y <- i
    loop 
      ult r11.z, r11.y, r1.w
      breakc_z r11.z
      nop 
      imul null, r11.z, r11.y, l(8)
      mov r12.xyz, x0[r11.z + 5].xyzx
      mov r11.z, x0[r11.z + 7].x
      mov r12.xyz, r12.xyzx  // r12.x <- sph.center.x; r12.y <- sph.center.y; r12.z <- sph.center.z
      mov r11.z, r11.z  // r11.z <- sph.radiusSq
      mov r13.xyz, r2.xyzx  // r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
      mov r14.xyz, r3.xyzx  // r14.x <- raydir.x; r14.y <- raydir.y; r14.z <- raydir.z

#line 92
      mov r13.xyz, -r13.xyzx
      add r12.xyz, r12.xyzx, r13.xyzx  // r12.x <- l.x; r12.y <- l.y; r12.z <- l.z

#line 95
      dp3 r11.w, r12.xyzx, r14.xyzx  // r11.w <- tca
      itof r12.w, l(0)
      lt r12.w, r11.w, r12.w
      if_nz r12.w
        nop 
        mov r13.x, l(0)  // r13.x <- i; r13.x <- i; r13.x <- i; r13.x <- i; r13.x <- i
        itof r13.y, l(0)  // r13.y <- d; r13.y <- d; r13.y <- d; r13.y <- d; r13.y <- d

#line 54
        mov r13.x, r13.x  // r13.x <- new_intersect.intersection; r13.x <- new_intersect.intersection; r13.x <- new_intersect.intersection; r13.x <- new_intersect.intersection; r13.x <- new_intersect.intersection
        mov r13.y, r13.y  // r13.y <- new_intersect.dist; r13.y <- new_intersect.dist; r13.y <- new_intersect.dist; r13.y <- new_intersect.dist; r13.y <- new_intersect.dist
        mov r13.x, r13.x  // r13.x <- <createIntersect return value>.intersection; r13.x <- <createIntersect return value>.intersection; r13.x <- <createIntersect return value>.intersection; r13.x <- <createIntersect return value>.intersection; r13.x <- <createIntersect return value>.intersection
        mov r13.y, r13.y  // r13.y <- <createIntersect return value>.dist; r13.y <- <createIntersect return value>.dist; r13.y <- <createIntersect return value>.dist; r13.y <- <createIntersect return value>.dist; r13.y <- <createIntersect return value>.dist

#line 98
        mov r13.xy, r13.xyxx  // r13.x <- <sphereGetIntersect return value>.intersection; r13.y <- <sphereGetIntersect return value>.dist
      endif 

#line 102
      if_z r12.w
        dp3 r12.x, r12.xyzx, r12.xyzx
        mul r12.y, r11.w, r11.w
        mov r12.y, -r12.y
        add r12.x, r12.y, r12.x  // r12.x <- d2
        lt r12.y, r11.z, r12.x
        if_nz r12.y
          nop 
          mov r13.x, l(0)  // r13.x <- i; r13.x <- i; r13.x <- i; r13.x <- i; r13.x <- i
          itof r13.y, l(0)  // r13.y <- d; r13.y <- d; r13.y <- d; r13.y <- d; r13.y <- d

#line 54
          mov r13.x, r13.x  // r13.x <- new_intersect.intersection; r13.x <- new_intersect.intersection; r13.x <- new_intersect.intersection; r13.x <- new_intersect.intersection; r13.x <- new_intersect.intersection
          mov r13.y, r13.y  // r13.y <- new_intersect.dist; r13.y <- new_intersect.dist; r13.y <- new_intersect.dist; r13.y <- new_intersect.dist; r13.y <- new_intersect.dist
          mov r13.x, r13.x  // r13.x <- <createIntersect return value>.intersection; r13.x <- <createIntersect return value>.intersection; r13.x <- <createIntersect return value>.intersection; r13.x <- <createIntersect return value>.intersection; r13.x <- <createIntersect return value>.intersection
          mov r13.y, r13.y  // r13.y <- <createIntersect return value>.dist; r13.y <- <createIntersect return value>.dist; r13.y <- <createIntersect return value>.dist; r13.y <- <createIntersect return value>.dist; r13.y <- <createIntersect return value>.dist

#line 105
          mov r13.xy, r13.xyxx
        endif 

#line 109
        if_z r12.y
          mov r12.x, -r12.x
          add r11.z, r11.z, r12.x
          sqrt r11.z, r11.z  // r11.z <- thc
          mov r12.x, -r11.z
          add r13.y, r11.w, r12.x  // r13.y <- d
          itof r12.x, l(0)
          lt r12.x, r13.y, r12.x
          if_nz r12.x
            add r13.y, r11.z, r11.w
          endif 
          nop 
          mov r13.x, l(-1)  // r13.x <- i; r13.x <- i; r13.x <- i; r13.x <- i; r13.x <- i
          mov r13.y, r13.y  // r13.y <- d; r13.y <- d; r13.y <- d; r13.y <- d; r13.y <- d

#line 54
          mov r13.x, r13.x  // r13.x <- new_intersect.intersection; r13.x <- new_intersect.intersection; r13.x <- new_intersect.intersection; r13.x <- new_intersect.intersection; r13.x <- new_intersect.intersection
          mov r13.y, r13.y  // r13.y <- new_intersect.dist; r13.y <- new_intersect.dist; r13.y <- new_intersect.dist; r13.y <- new_intersect.dist; r13.y <- new_intersect.dist
          mov r13.x, r13.x  // r13.x <- <createIntersect return value>.intersection; r13.x <- <createIntersect return value>.intersection; r13.x <- <createIntersect return value>.intersection; r13.x <- <createIntersect return value>.intersection; r13.x <- <createIntersect return value>.intersection
          mov r13.y, r13.y  // r13.y <- <createIntersect return value>.dist; r13.y <- <createIntersect return value>.dist; r13.y <- <createIntersect return value>.dist; r13.y <- <createIntersect return value>.dist; r13.y <- <createIntersect return value>.dist

#line 116
          mov r13.xy, r13.xyxx  // r13.y <- <sphereGetIntersect return value>.dist
        endif 
      endif 

#line 270
      mov r13.y, r13.y  // r13.y <- curIntersect.dist
      if_nz r13.x
        lt r11.z, r13.y, r9.w
        if_nz r11.z
          mov r9.w, r13.y
          mov r10.x, r11.y
          mov r10.y, l(1)
          imul null, r11.z, r11.y, l(8)
          mov r9.xyz, x0[r11.z + 1].xyzx
          mov r10.z, x0[r11.z + 2].x
          mov r10.w, x0[r11.z + 3].x
          mov r11.x, x0[r11.z + 4].x
        endif 
      endif 

#line 281
      iadd r11.y, r11.y, l(1)
    endloop 
    mov r6.x, l(0)  // r6.x <- j
    mov r6.yzw, r9.xxyz  // r6.y <- nearest_mtl.emissive_color.x; r6.z <- nearest_mtl.emissive_color.y; r6.w <- nearest_mtl.emissive_color.z
    mov r7.x, r9.w  // r7.x <- nearest_dist
    mov r7.y, r10.x  // r7.y <- nearest_index
    mov r7.z, r10.y  // r7.z <- nearest_type
    mov r7.w, r10.z  // r7.w <- nearest_mtl.ior
    mov r8.w, r10.w  // r8.w <- nearest_mtl.gloss_angle
    mov r11.y, r11.x  // r11.y <- nearest_mtl.surface_type
    mov r11.z, r6.x  // r11.z <- j
    loop 
      ult r11.w, r11.z, r2.w
      breakc_z r11.w
      nop 
      imul null, r11.w, r11.z, l(9)
      mov r12.xyz, x1[r11.w + 5].xyzx
      mov r13.xyz, x1[r11.w + 6].xyzx
      mov r12.xyz, r12.xyzx  // r12.x <- pln.normal.x; r12.y <- pln.normal.y; r12.z <- pln.normal.z
      mov r13.xyz, r13.xyzx  // r13.x <- pln.pnt.x; r13.y <- pln.pnt.y; r13.z <- pln.pnt.z
      mov r14.xyz, r2.xyzx  // r14.x <- rayorig.x; r14.y <- rayorig.y; r14.z <- rayorig.z
      mov r15.xyz, r3.xyzx  // r15.x <- raydir.x; r15.y <- raydir.y; r15.z <- raydir.z

#line 154
      dp3 r11.w, r12.xyzx, r15.xyzx  // r11.w <- denom
      lt r12.w, l(0.000001), r11.w
      if_nz r12.w
        mov r14.xyz, -r14.xyzx
        add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- origintopoint.x; r13.y <- origintopoint.y; r13.z <- origintopoint.z
        dp3 r12.x, r13.xyzx, r12.xyzx
        div r12.y, r12.x, r11.w  // r12.y <- d
        itof r11.w, l(0)
        ge r11.w, r12.y, r11.w
        if_nz r11.w
          nop 
          mov r12.x, l(-1)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
          mov r12.y, r12.y  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
          mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
          mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
          mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
          mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 159
          mov r12.xy, r12.xyxx  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
        endif 
      else   // Prior locations: r12.x <- pln.normal.x; r12.y <- pln.normal.y; r13.x <- pln.pnt.x; r13.y <- pln.pnt.y; r13.z <- pln.pnt.z; r14.x <- rayorig.x; r14.y <- rayorig.y; r14.z <- rayorig.z; r11.w <- denom
        mov r11.w, l(0)
      endif 
      if_z r11.w  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
        nop 
        mov r12.x, l(0)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
        itof r12.y, l(0)  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
        mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
        mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
        mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
        mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 162
        mov r12.xy, r12.xyxx
      endif 

#line 284
      mov r12.y, r12.y  // r12.y <- curIntersect.dist
      if_nz r12.x
        lt r11.w, r12.y, r7.x
        if_nz r11.w
          mov r7.x, r12.y
          mov r7.y, r11.z
          mov r7.z, l(2)
          imul null, r11.w, r11.z, l(9)
          mov r6.yzw, x1[r11.w + 1].xxyz
          mov r7.w, x1[r11.w + 2].x
          mov r8.w, x1[r11.w + 3].x
          mov r11.y, x1[r11.w + 4].x
        endif 
      endif 

#line 295
      iadd r11.z, r11.z, l(1)
    endloop 

#line 298
    mov r6.x, l(0)
    ieq r9.xy, r6.xxxx, r7.zzzz
    if_z r7.z
      mov r8.xyz, r0.yzwy
    endif 
    not r6.x, r9.y
    not r9.z, r9.x
    and r6.x, r6.x, r9.z
    not r9.z, r6.x
    if_nz r6.x
      mov r9.w, l(4)
      ieq r9.w, r9.w, r11.y
      if_nz r9.w
        mul r5.xyz, r5.xyzx, r6.yzwy
      endif 

#line 310
      not r6.y, r9.w
      not r6.y, r6.y
      if_z r9.w
        mul r10.xyz, r3.xyzx, r7.xxxx
        add r10.xyz, r2.xyzx, r10.xyzx  // r10.x <- phit.x; r10.y <- phit.y; r10.z <- phit.z
        mov r6.z, l(1)
        ieq r6.z, r6.z, r7.z
        nop 
        imul null, r6.w, r7.y, l(8)
        mov r11.xzw, x0[r6.w + 0].xxyz  // r11.x <- sph.mtl.surface_color.x; r11.z <- sph.mtl.surface_color.y; r11.w <- sph.mtl.surface_color.z

#line 87
        mov r11.xzw, r11.xxzw  // r11.x <- <sphereGetSurfaceColor return value>.x; r11.z <- <sphereGetSurfaceColor return value>.y; r11.w <- <sphereGetSurfaceColor return value>.z

#line 311
        nop 
        imul null, r6.w, r7.y, l(9)
        mov r12.xyz, x1[r6.w + 0].xyzx  // r12.x <- pln.mtl.surface_color.x; r12.y <- pln.mtl.surface_color.y; r12.z <- pln.mtl.surface_color.z

#line 149
        mov r12.xyz, r12.xyzx  // r12.x <- <planeGetSurfaceColor return value>.x; r12.y <- <planeGetSurfaceColor return value>.y; r12.z <- <planeGetSurfaceColor return value>.z

#line 311
        movc r11.xzw, r6.zzzz, r11.xxzw, r12.xxyz  // r11.x <- chit.x; r11.z <- chit.y; r11.w <- chit.z
        mul r5.xyz, r5.xyzx, r11.xzwx
        mov r6.z, l(1)
        ieq r6.z, r6.z, r7.z
        nop 
        imul null, r6.w, r7.y, l(8)
        mov r11.xzw, x0[r6.w + 5].xxyz  // r11.x <- sph.center.x; r11.z <- sph.center.y; r11.w <- sph.center.z
        mov r10.xyz, r10.xyzx  // r10.x <- p.x; r10.y <- p.y; r10.z <- p.z

#line 82
        mov r11.xzw, -r11.xxzw
        add r11.xzw, r10.xxyz, r11.xxzw  // r11.x <- <sphereGetNormal return value>.x; r11.z <- <sphereGetNormal return value>.y; r11.w <- <sphereGetNormal return value>.z

#line 314
        nop 
        imul null, r6.w, r7.y, l(9)
        mov r7.xyz, x1[r6.w + 5].xyzx  // r7.x <- pln.normal.x; r7.y <- pln.normal.y; r7.z <- pln.normal.z

#line 144
        mov r7.xyz, r7.xyzx  // r7.x <- <planeGetNormal return value>.x; r7.y <- <planeGetNormal return value>.y; r7.z <- <planeGetNormal return value>.z

#line 314
        movc r7.xyz, r6.zzzz, r11.xzwx, r7.xyzx  // r7.x <- nhit.x; r7.y <- nhit.y; r7.z <- nhit.z

#line 317
        dp3 r6.z, r3.xyzx, r7.xyzx
        itof r6.w, l(0)
        lt r6.z, r6.w, r6.z  // r6.z <- inside
        if_nz r6.z
          mov r7.xyz, -r7.xyzx
        endif 

#line 320
        mov r6.w, l(1)
        ieq r6.w, r6.w, r11.y
        if_nz r6.w
          mul r11.xzw, r1.yyyy, r7.xxyz
          add r2.xyz, r10.xyzx, r11.xzwx
          nop 
          mov r11.xzw, r7.xxyz  // r11.x <- n.x; r11.z <- n.y; r11.w <- n.z
          mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y
          mov r1.z, r1.z  // r1.z <- c

#line 209
          nop 
          itof r12.xy, r1.zzzz
          mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
          dp2 r10.w, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
          sincos r10.w, null, r10.w
          mul r10.w, r10.w, l(43758.546875)
          frc r10.w, r10.w  // r10.w <- <random return value>; r10.w <- <random return value>; r10.w <- <random return value>; r10.w <- <random return value>; r10.w <- <random return value>; r10.w <- <random return value>

#line 209
          mul r10.w, r10.w, l(6.283185)  // r10.w <- r1
          iadd r12.x, r1.z, l(1)  // r12.x <- c
          nop 
          itof r12.yz, r12.xxxx
          mul r12.yz, r4.xxyx, r12.yyzy  // r12.y <- uv.x; r12.z <- uv.y; r12.y <- uv.x; r12.z <- uv.y; r12.y <- uv.x; r12.z <- uv.y; r12.y <- uv.x; r12.z <- uv.y; r12.y <- uv.x; r12.z <- uv.y; r12.y <- uv.x; r12.z <- uv.y

#line 203
          dp2 r12.y, r12.yzyy, l(12.989800, 78.233002, 0.000000, 0.000000)
          sincos r12.y, null, r12.y
          mul r12.y, r12.y, l(43758.546875)
          frc r12.y, r12.y  // r12.y <- <random return value>; r12.y <- <random return value>; r12.y <- <random return value>; r12.y <- <random return value>; r12.y <- <random return value>; r12.y <- <random return value>

#line 210
          mov r12.y, r12.y  // r12.y <- r2
          iadd r1.z, r12.x, l(1)  // r1.z <- c
          sqrt r12.x, r12.y  // r12.x <- r2s
          mov r11.xzw, r11.xxzw  // r11.x <- w.x; r11.z <- w.y; r11.w <- w.z
          mov r12.z, -r11.x
          max r12.z, r11.x, r12.z
          lt r12.z, l(0.100000), r12.z
          itof r13.xyz, l(0, 0, 1, 0)
          itof r14.xyz, l(0, 1, 0, 0)
          movc r13.xyz, r12.zzzz, r13.xyzx, r14.xyzx
          mul r14.xyz, r11.wxzw, r13.zxyz
          mul r13.xyz, r11.zwxz, r13.xyzx
          mov r13.xyz, -r13.xyzx
          add r13.xyz, r13.xyzx, r14.xyzx
          dp3 r12.z, r13.xyzx, r13.xyzx
          rsq r12.z, r12.z
          mul r13.xyz, r12.zzzz, r13.xyzx  // r13.x <- u.x; r13.y <- u.y; r13.z <- u.z
          mul r14.xyz, r11.zwxz, r13.zxyz
          mul r15.xyz, r11.wxzw, r13.yzxy
          mov r15.xyz, -r15.xyzx
          add r14.xyz, r14.xyzx, r15.xyzx  // r14.x <- v.x; r14.y <- v.y; r14.z <- v.z
          sincos null, r12.z, r10.w
          mul r13.xyz, r12.zzzz, r13.xyzx
          mul r13.xyz, r12.xxxx, r13.xyzx
          sincos r10.w, null, r10.w
          mul r14.xyz, r10.wwww, r14.xyzx
          mul r12.xzw, r12.xxxx, r14.xxyz
          add r12.xzw, r12.xxzw, r13.xxyz
          itof r10.w, l(1)
          mov r12.y, -r12.y
          add r10.w, r10.w, r12.y
          sqrt r10.w, r10.w
          mul r11.xzw, r10.wwww, r11.xxzw
          add r11.xzw, r11.xxzw, r12.xxzw
          dp3 r10.w, r11.xzwx, r11.xzwx
          rsq r10.w, r10.w
          mul r3.xyz, r10.wwww, r11.xzwx  // r3.x <- <randomHemisphereDirection return value>.x; r3.y <- <randomHemisphereDirection return value>.y; r3.z <- <randomHemisphereDirection return value>.z

#line 323
          mov r1.z, r1.z  // r1.z <- rand_counter
          mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
        endif 
        if_z r6.w
          mov r6.w, l(2)
          ieq r6.w, r6.w, r11.y
          if_nz r6.w
            mul r11.xzw, r1.yyyy, r7.xxyz
            add r2.xyz, r10.xyzx, r11.xzwx
            dp3 r10.w, r3.xyzx, r7.xyzx
            add r10.w, r10.w, r10.w
            mov r10.w, -r10.w
            mul r11.xzw, r7.xxyz, r10.wwww
            add r11.xzw, r3.xxyz, r11.xxzw
            dp3 r10.w, r11.xzwx, r11.xzwx
            rsq r10.w, r10.w
            mul r3.xyz, r10.wwww, r11.xzwx
          endif 

#line 334
          if_z r6.w
            mov r6.w, l(3)
            ieq r6.w, r6.w, r11.y
            if_nz r6.w
              mul r11.xzw, r1.yyyy, r7.xxyz
              add r2.xyz, r10.xyzx, r11.xzwx
              nop 
              dp3 r10.w, r3.xyzx, r7.xyzx
              add r10.w, r10.w, r10.w
              mov r10.w, -r10.w
              mul r11.xzw, r7.xxyz, r10.wwww
              add r11.xzw, r3.xxyz, r11.xxzw
              dp3 r10.w, r11.xzwx, r11.xzwx
              rsq r10.w, r10.w
              mul r11.xzw, r10.wwww, r11.xxzw  // r11.x <- r.x; r11.z <- r.y; r11.w <- r.z; r11.x <- r.x; r11.z <- r.y; r11.w <- r.z
              mov r8.w, r8.w  // r8.w <- theta; r8.w <- theta
              mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
              mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
              nop 
              itof r12.xy, r1.zzzz
              mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
              dp2 r10.w, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
              sincos r10.w, null, r10.w
              mul r10.w, r10.w, l(43758.546875)
              frc r10.w, r10.w  // r10.w <- <random return value>; r10.w <- <random return value>; r10.w <- <random return value>; r10.w <- <random return value>; r10.w <- <random return value>; r10.w <- <random return value>

#line 222
              mul r10.w, r10.w, l(6.283185)  // r10.w <- r1; r10.w <- r1
              iadd r12.x, r1.z, l(1)  // r12.x <- c; r12.x <- c
              sincos r12.y, null, r8.w
              sincos r12.z, null, r8.w
              mul r12.y, r12.z, r12.y
              nop 
              itof r12.zw, r12.xxxx
              mul r12.zw, r4.xxxy, r12.zzzw  // r12.z <- uv.x; r12.w <- uv.y; r12.z <- uv.x; r12.w <- uv.y; r12.z <- uv.x; r12.w <- uv.y; r12.z <- uv.x; r12.w <- uv.y; r12.z <- uv.x; r12.w <- uv.y; r12.z <- uv.x; r12.w <- uv.y

#line 203
              dp2 r12.z, r12.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
              sincos r12.z, null, r12.z
              mul r12.z, r12.z, l(43758.546875)
              frc r12.z, r12.z  // r12.z <- <random return value>; r12.z <- <random return value>; r12.z <- <random return value>; r12.z <- <random return value>; r12.z <- <random return value>; r12.z <- <random return value>

#line 223
              mul r12.y, r12.z, r12.y  // r12.y <- r2; r12.y <- r2
              iadd r1.z, r12.x, l(1)  // r1.z <- c; r1.z <- c
              sqrt r12.x, r12.y  // r12.x <- r2s; r12.x <- r2s
              mov r11.xzw, r11.xxzw  // r11.x <- w.x; r11.z <- w.y; r11.w <- w.z; r11.x <- w.x; r11.z <- w.y; r11.w <- w.z
              mov r12.z, -r11.x
              max r12.z, r11.x, r12.z
              lt r12.z, l(0.100000), r12.z
              itof r13.xyz, l(0, 0, 1, 0)
              itof r14.xyz, l(0, 1, 0, 0)
              movc r13.xyz, r12.zzzz, r13.xyzx, r14.xyzx
              mul r14.xyz, r11.wxzw, r13.zxyz
              mul r13.xyz, r11.zwxz, r13.xyzx
              mov r13.xyz, -r13.xyzx
              add r13.xyz, r13.xyzx, r14.xyzx
              dp3 r12.z, r13.xyzx, r13.xyzx
              rsq r12.z, r12.z
              mul r13.xyz, r12.zzzz, r13.xyzx  // r13.x <- u.x; r13.y <- u.y; r13.z <- u.z; r13.x <- u.x; r13.y <- u.y; r13.z <- u.z
              mul r14.xyz, r11.zwxz, r13.zxyz
              mul r15.xyz, r11.wxzw, r13.yzxy
              mov r15.xyz, -r15.xyzx
              add r14.xyz, r14.xyzx, r15.xyzx  // r14.x <- v.x; r14.y <- v.y; r14.z <- v.z; r14.x <- v.x; r14.y <- v.y; r14.z <- v.z
              sincos null, r12.z, r10.w
              mul r13.xyz, r12.zzzz, r13.xyzx
              mul r13.xyz, r12.xxxx, r13.xyzx
              sincos r10.w, null, r10.w
              mul r14.xyz, r10.wwww, r14.xyzx
              mul r12.xzw, r12.xxxx, r14.xxyz
              add r12.xzw, r12.xxzw, r13.xxyz
              itof r10.w, l(1)
              mov r12.y, -r12.y
              add r10.w, r10.w, r12.y
              sqrt r10.w, r10.w
              mul r11.xzw, r10.wwww, r11.xxzw
              add r11.xzw, r11.xxzw, r12.xxzw
              dp3 r10.w, r11.xzwx, r11.xzwx
              rsq r10.w, r10.w
              mul r3.xyz, r10.wwww, r11.xzwx  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 337
              mov r1.z, r1.z  // r1.z <- rand_counter
              mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
            endif 
            if_z r6.w
              mov r6.w, l(5)
              ieq r6.w, r6.w, r11.y
              if_nz r6.w
                itof r10.w, l(1)
                div r10.w, r10.w, r7.w
                movc r10.w, r6.z, r7.w, r10.w  // r10.w <- n
                mul r11.xzw, r1.yyyy, r7.xxyz
                mov r11.xzw, -r11.xxzw
                add r2.xyz, r10.xyzx, r11.xzwx
                dp3 r11.x, r3.xyzx, r7.xyzx
                mul r11.z, r11.x, r11.x
                mul r11.w, r10.w, r10.w
                mov r11.z, -r11.z
                add r11.z, r11.z, l(1.000000)
                mul r11.z, r11.z, r11.w
                mov r11.z, -r11.z
                add r11.z, r11.z, l(1.000000)
                sqrt r11.w, r11.z
                mul r11.x, r10.w, r11.x
                add r11.x, r11.w, r11.x
                ge r11.z, r11.z, l(0.000000)
                mul r12.xyz, r3.xyzx, r10.wwww
                mul r13.xyz, r7.xyzx, r11.xxxx
                mov r13.xyz, -r13.xyzx
                add r12.xyz, r12.xyzx, r13.xyzx
                movc r11.xzw, r11.zzzz, r12.xxyz, l(0,0,0,0)
                dp3 r10.w, r11.xzwx, r11.xzwx
                rsq r10.w, r10.w
                mul r3.xyz, r10.wwww, r11.xzwx
              endif 

#line 349
              if_z r6.w
                mov r6.w, l(6)
                ieq r6.w, r6.w, r11.y
                if_nz r6.w
                  itof r6.w, l(1)
                  div r6.w, r6.w, r7.w
                  movc r6.z, r6.z, r7.w, r6.w  // r6.z <- n
                  mul r11.xyz, r1.yyyy, r7.xyzx
                  mov r11.xyz, -r11.xyzx
                  add r2.xyz, r10.xyzx, r11.xyzx
                  nop 
                  dp3 r6.w, r3.xyzx, r7.xyzx
                  mul r7.w, r6.w, r6.w
                  mul r10.x, r6.z, r6.z
                  mov r7.w, -r7.w
                  add r7.w, r7.w, l(1.000000)
                  mul r7.w, r7.w, r10.x
                  mov r7.w, -r7.w
                  add r7.w, r7.w, l(1.000000)
                  sqrt r10.x, r7.w
                  mul r6.w, r6.w, r6.z
                  add r6.w, r10.x, r6.w
                  ge r7.w, r7.w, l(0.000000)
                  mul r10.xyz, r3.xyzx, r6.zzzz
                  mul r7.xyz, r7.xyzx, r6.wwww
                  mov r7.xyz, -r7.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx
                  movc r7.xyz, r7.wwww, r7.xyzx, l(0,0,0,0)
                  dp3 r6.z, r7.xyzx, r7.xyzx
                  rsq r6.z, r6.z
                  mul r7.xyz, r6.zzzz, r7.xyzx  // r7.x <- r.x; r7.y <- r.y; r7.z <- r.z; r7.x <- r.x; r7.y <- r.y; r7.z <- r.z
                  mov r8.w, r8.w  // r8.w <- theta; r8.w <- theta
                  mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
                  mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
                  nop 
                  itof r6.zw, r1.zzzz
                  mul r6.zw, r4.xxxy, r6.zzzw  // r6.z <- uv.x; r6.w <- uv.y; r6.z <- uv.x; r6.w <- uv.y; r6.z <- uv.x; r6.w <- uv.y; r6.z <- uv.x; r6.w <- uv.y; r6.z <- uv.x; r6.w <- uv.y; r6.z <- uv.x; r6.w <- uv.y

#line 203
                  dp2 r6.z, r6.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                  sincos r6.z, null, r6.z
                  mul r6.z, r6.z, l(43758.546875)
                  frc r6.z, r6.z  // r6.z <- <random return value>; r6.z <- <random return value>; r6.z <- <random return value>; r6.z <- <random return value>; r6.z <- <random return value>; r6.z <- <random return value>

#line 222
                  mul r6.z, r6.z, l(6.283185)  // r6.z <- r1; r6.z <- r1
                  iadd r6.w, r1.z, l(1)  // r6.w <- c; r6.w <- c
                  sincos r7.w, null, r8.w
                  sincos r8.w, null, r8.w
                  mul r7.w, r7.w, r8.w
                  nop 
                  itof r10.xy, r6.wwww
                  mul r10.xy, r4.xyxx, r10.xyxx  // r10.x <- uv.x; r10.y <- uv.y; r10.x <- uv.x; r10.y <- uv.y; r10.x <- uv.x; r10.y <- uv.y; r10.x <- uv.x; r10.y <- uv.y; r10.x <- uv.x; r10.y <- uv.y; r10.x <- uv.x; r10.y <- uv.y

#line 203
                  dp2 r8.w, r10.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                  sincos r8.w, null, r8.w
                  mul r8.w, r8.w, l(43758.546875)
                  frc r8.w, r8.w  // r8.w <- <random return value>; r8.w <- <random return value>; r8.w <- <random return value>; r8.w <- <random return value>; r8.w <- <random return value>; r8.w <- <random return value>

#line 223
                  mul r7.w, r7.w, r8.w  // r7.w <- r2; r7.w <- r2
                  iadd r1.z, r6.w, l(1)  // r1.z <- c; r1.z <- c
                  sqrt r6.w, r7.w  // r6.w <- r2s; r6.w <- r2s
                  mov r7.xyz, r7.xyzx  // r7.x <- w.x; r7.y <- w.y; r7.z <- w.z; r7.x <- w.x; r7.y <- w.y; r7.z <- w.z
                  mov r8.w, -r7.x
                  max r8.w, r7.x, r8.w
                  lt r8.w, l(0.100000), r8.w
                  itof r10.xyz, l(0, 0, 1, 0)
                  itof r11.xyz, l(0, 1, 0, 0)
                  movc r10.xyz, r8.wwww, r10.xyzx, r11.xyzx
                  mul r11.xyz, r7.zxyz, r10.zxyz
                  mul r10.xyz, r7.yzxy, r10.xyzx
                  mov r10.xyz, -r10.xyzx
                  add r10.xyz, r10.xyzx, r11.xyzx
                  dp3 r8.w, r10.xyzx, r10.xyzx
                  rsq r8.w, r8.w
                  mul r10.xyz, r8.wwww, r10.xyzx  // r10.x <- u.x; r10.y <- u.y; r10.z <- u.z; r10.x <- u.x; r10.y <- u.y; r10.z <- u.z
                  mul r11.xyz, r7.yzxy, r10.zxyz
                  mul r12.xyz, r7.zxyz, r10.yzxy
                  mov r12.xyz, -r12.xyzx
                  add r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- v.x; r11.y <- v.y; r11.z <- v.z; r11.x <- v.x; r11.y <- v.y; r11.z <- v.z
                  sincos null, r8.w, r6.z
                  mul r10.xyz, r8.wwww, r10.xyzx
                  mul r10.xyz, r6.wwww, r10.xyzx
                  sincos r6.z, null, r6.z
                  mul r11.xyz, r6.zzzz, r11.xyzx
                  mul r11.xyz, r6.wwww, r11.xyzx
                  add r10.xyz, r10.xyzx, r11.xyzx
                  itof r6.z, l(1)
                  mov r6.w, -r7.w
                  add r6.z, r6.w, r6.z
                  sqrt r6.z, r6.z
                  mul r7.xyz, r6.zzzz, r7.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx
                  dp3 r6.z, r7.xyzx, r7.xyzx
                  rsq r6.z, r6.z
                  mul r3.xyz, r6.zzzz, r7.xyzx  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 353
                  mov r1.z, r1.z  // r1.z <- rand_counter
                  mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
                endif 
              endif 
            endif 
          endif 
        endif 
      endif 
      or r6.y, r9.w, r6.y
    else   // Prior locations: r2.x <- main_camera.pos.x; r2.y <- main_camera.pos.y; r2.z <- main_camera.pos.z; r7.x <- nearest_dist; r7.y <- nearest_index; r7.z <- nearest_type; r7.w <- nearest_mtl.ior; r6.y <- nearest_mtl.emissive_color.x; r6.z <- nearest_mtl.emissive_color.y; r6.w <- nearest_mtl.emissive_color.z; r8.w <- nearest_mtl.gloss_angle; r11.y <- nearest_mtl.surface_type; r11.z <- j
      mov r6.y, l(-1)
    endif 
    and r6.y, r6.y, r6.x
    or r6.y, r9.y, r6.y
    and r6.x, r6.x, r9.z
    or r6.x, r9.x, r6.x
  else   // Prior locations: r0.x <- INFINITY; r2.x <- main_camera.pos.x; r2.y <- main_camera.pos.y; r2.z <- main_camera.pos.z; r0.x <- nearest_dist; r0.x <- INFINITY
    mov r6.x, l(-1)
    mov r6.y, l(-1)
  endif 
  and r6.y, r5.w, r6.y
  or r4.z, r4.z, r6.y
  and r5.w, r5.w, r6.x
  or r3.w, r3.w, r5.w
else   // Prior locations: r2.x <- main_camera.pos.x; r2.y <- main_camera.pos.y; r2.z <- main_camera.pos.z
  mov r4.z, l(-1)
endif 

#line 260
not r4.z, r4.z
not r5.w, r3.w
and r4.z, r4.z, r5.w
and r4.z, r4.z, r4.w
max r4.w, r5.y, r5.x
max r4.w, r5.z, r4.w
lt r4.w, r1.x, r4.w
and r4.z, r4.w, r4.z
if_nz r4.z

#line 263
  mov r4.w, l(0)  // r4.w <- nearest_index
  mov r5.w, l(0)  // r5.w <- nearest_type
  itof r6.xyzw, l(0, 0, 0, 0)  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r6.w <- nearest_mtl.ior
  itof r7.x, l(0)  // r7.x <- nearest_mtl.gloss_angle
  mov r7.y, l(0)  // r7.y <- nearest_mtl.surface_type

#line 268
  mov r7.z, l(0)  // r7.z <- i
  mov r9.xyz, r6.xyzx  // r9.x <- nearest_mtl.emissive_color.x; r9.y <- nearest_mtl.emissive_color.y; r9.z <- nearest_mtl.emissive_color.z
  mov r7.w, r0.x  // r7.w <- nearest_dist
  mov r8.w, r4.w  // r8.w <- nearest_index
  mov r9.w, r5.w  // r9.w <- nearest_type
  mov r10.x, r6.w  // r10.x <- nearest_mtl.ior
  mov r10.y, r7.x  // r10.y <- nearest_mtl.gloss_angle
  mov r10.z, r7.y  // r10.z <- nearest_mtl.surface_type
  mov r10.w, r7.z  // r10.w <- i
  loop 
    ult r11.x, r10.w, r1.w
    breakc_z r11.x
    nop 
    imul null, r11.x, r10.w, l(8)
    mov r11.yzw, x0[r11.x + 5].xxyz
    mov r11.x, x0[r11.x + 7].x
    mov r11.yzw, r11.yyzw  // r11.y <- sph.center.x; r11.z <- sph.center.y; r11.w <- sph.center.z
    mov r11.x, r11.x  // r11.x <- sph.radiusSq
    mov r12.xyz, r2.xyzx  // r12.x <- rayorig.x; r12.y <- rayorig.y; r12.z <- rayorig.z
    mov r13.xyz, r3.xyzx  // r13.x <- raydir.x; r13.y <- raydir.y; r13.z <- raydir.z

#line 92
    mov r12.xyz, -r12.xyzx
    add r11.yzw, r11.yyzw, r12.xxyz  // r11.y <- l.x; r11.z <- l.y; r11.w <- l.z

#line 95
    dp3 r12.x, r11.yzwy, r13.xyzx  // r12.x <- tca
    itof r12.y, l(0)
    lt r12.y, r12.x, r12.y
    if_nz r12.y
      nop 
      mov r12.z, l(0)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
      itof r12.w, l(0)  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
      mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
      mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
      mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
      mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 98
      mov r12.zw, r12.zzzw  // r12.z <- <sphereGetIntersect return value>.intersection; r12.w <- <sphereGetIntersect return value>.dist
    endif 

#line 102
    if_z r12.y
      dp3 r11.y, r11.yzwy, r11.yzwy
      mul r11.z, r12.x, r12.x
      mov r11.z, -r11.z
      add r11.y, r11.z, r11.y  // r11.y <- d2
      lt r11.z, r11.x, r11.y
      if_nz r11.z
        nop 
        mov r12.z, l(0)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
        itof r12.w, l(0)  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
        mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
        mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
        mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
        mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 105
        mov r12.zw, r12.zzzw
      endif 

#line 109
      if_z r11.z
        mov r11.y, -r11.y
        add r11.x, r11.y, r11.x
        sqrt r11.x, r11.x  // r11.x <- thc
        mov r11.y, -r11.x
        add r12.w, r11.y, r12.x  // r12.w <- d
        itof r11.y, l(0)
        lt r11.y, r12.w, r11.y
        if_nz r11.y
          add r12.w, r11.x, r12.x
        endif 
        nop 
        mov r12.z, l(-1)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
        mov r12.w, r12.w  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
        mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
        mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
        mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
        mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 116
        mov r12.zw, r12.zzzw  // r12.w <- <sphereGetIntersect return value>.dist
      endif 
    endif 

#line 270
    mov r12.w, r12.w  // r12.w <- curIntersect.dist
    if_nz r12.z
      lt r11.x, r12.w, r7.w
      if_nz r11.x
        mov r7.w, r12.w
        mov r8.w, r10.w
        mov r9.w, l(1)
        imul null, r11.x, r10.w, l(8)
        mov r9.xyz, x0[r11.x + 1].xyzx
        mov r10.x, x0[r11.x + 2].x
        mov r10.y, x0[r11.x + 3].x
        mov r10.z, x0[r11.x + 4].x
      endif 
    endif 

#line 281
    iadd r10.w, r10.w, l(1)
  endloop 
  mov r4.w, l(0)  // r4.w <- j
  mov r6.xyz, r9.xyzx  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z
  mov r5.w, r7.w  // r5.w <- nearest_dist
  mov r6.w, r8.w  // r6.w <- nearest_index
  mov r7.x, r9.w  // r7.x <- nearest_type
  mov r7.y, r10.x  // r7.y <- nearest_mtl.ior
  mov r7.z, r10.y  // r7.z <- nearest_mtl.gloss_angle
  mov r10.w, r10.z  // r10.w <- nearest_mtl.surface_type
  mov r11.x, r4.w  // r11.x <- j
  loop 
    ult r11.y, r11.x, r2.w
    breakc_z r11.y
    nop 
    imul null, r11.y, r11.x, l(9)
    mov r12.xyz, x1[r11.y + 5].xyzx
    mov r11.yzw, x1[r11.y + 6].xxyz
    mov r12.xyz, r12.xyzx  // r12.x <- pln.normal.x; r12.y <- pln.normal.y; r12.z <- pln.normal.z
    mov r11.yzw, r11.yyzw  // r11.y <- pln.pnt.x; r11.z <- pln.pnt.y; r11.w <- pln.pnt.z
    mov r13.xyz, r2.xyzx  // r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
    mov r14.xyz, r3.xyzx  // r14.x <- raydir.x; r14.y <- raydir.y; r14.z <- raydir.z

#line 154
    dp3 r12.w, r12.xyzx, r14.xyzx  // r12.w <- denom
    lt r13.w, l(0.000001), r12.w
    if_nz r13.w
      mov r13.xyz, -r13.xyzx
      add r11.yzw, r11.yyzw, r13.xxyz  // r11.y <- origintopoint.x; r11.z <- origintopoint.y; r11.w <- origintopoint.z
      dp3 r11.y, r11.yzwy, r12.xyzx
      div r12.y, r11.y, r12.w  // r12.y <- d
      itof r11.y, l(0)
      ge r11.y, r12.y, r11.y
      if_nz r11.y
        nop 
        mov r12.x, l(-1)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
        mov r12.y, r12.y  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
        mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
        mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
        mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
        mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 159
        mov r12.xy, r12.xyxx  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
      endif 
    else   // Prior locations: r12.x <- pln.normal.x; r12.y <- pln.normal.y; r11.y <- pln.pnt.x; r11.z <- pln.pnt.y; r11.w <- pln.pnt.z; r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
      mov r11.y, l(0)
    endif 
    if_z r11.y  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
      nop 
      mov r12.x, l(0)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
      itof r12.y, l(0)  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
      mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
      mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
      mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
      mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 162
      mov r12.xy, r12.xyxx
    endif 

#line 284
    mov r12.y, r12.y  // r12.y <- curIntersect.dist
    if_nz r12.x
      lt r11.y, r12.y, r5.w
      if_nz r11.y
        mov r5.w, r12.y
        mov r6.w, r11.x
        mov r7.x, l(2)
        imul null, r11.y, r11.x, l(9)
        mov r6.xyz, x1[r11.y + 1].xyzx
        mov r7.y, x1[r11.y + 2].x
        mov r7.z, x1[r11.y + 3].x
        mov r10.w, x1[r11.y + 4].x
      endif 
    endif 

#line 295
    iadd r11.x, r11.x, l(1)
  endloop 

#line 298
  mov r4.w, l(0)
  ieq r9.xy, r4.wwww, r7.xxxx
  if_z r7.x
    mov r8.xyz, r0.yzwy
  endif 
  not r4.w, r9.y
  not r7.w, r9.x
  and r4.w, r4.w, r7.w
  not r7.w, r4.w
  if_nz r4.w
    mov r8.w, l(4)
    ieq r8.w, r8.w, r10.w
    if_nz r8.w
      mul r5.xyz, r5.xyzx, r6.xyzx
    endif 

#line 310
    not r6.x, r8.w
    not r6.x, r6.x
    if_z r8.w
      mul r10.xyz, r3.xyzx, r5.wwww
      add r10.xyz, r2.xyzx, r10.xyzx  // r10.x <- phit.x; r10.y <- phit.y; r10.z <- phit.z
      mov r5.w, l(1)
      ieq r5.w, r5.w, r7.x
      nop 
      imul null, r6.y, r6.w, l(8)
      mov r11.xyz, x0[r6.y + 0].xyzx  // r11.x <- sph.mtl.surface_color.x; r11.y <- sph.mtl.surface_color.y; r11.z <- sph.mtl.surface_color.z

#line 87
      mov r11.xyz, r11.xyzx  // r11.x <- <sphereGetSurfaceColor return value>.x; r11.y <- <sphereGetSurfaceColor return value>.y; r11.z <- <sphereGetSurfaceColor return value>.z

#line 311
      nop 
      imul null, r6.y, r6.w, l(9)
      mov r12.xyz, x1[r6.y + 0].xyzx  // r12.x <- pln.mtl.surface_color.x; r12.y <- pln.mtl.surface_color.y; r12.z <- pln.mtl.surface_color.z

#line 149
      mov r12.xyz, r12.xyzx  // r12.x <- <planeGetSurfaceColor return value>.x; r12.y <- <planeGetSurfaceColor return value>.y; r12.z <- <planeGetSurfaceColor return value>.z

#line 311
      movc r11.xyz, r5.wwww, r11.xyzx, r12.xyzx  // r11.x <- chit.x; r11.y <- chit.y; r11.z <- chit.z
      mul r5.xyz, r5.xyzx, r11.xyzx
      mov r5.w, l(1)
      ieq r5.w, r5.w, r7.x
      nop 
      imul null, r6.y, r6.w, l(8)
      mov r11.xyz, x0[r6.y + 5].xyzx  // r11.x <- sph.center.x; r11.y <- sph.center.y; r11.z <- sph.center.z
      mov r10.xyz, r10.xyzx  // r10.x <- p.x; r10.y <- p.y; r10.z <- p.z

#line 82
      mov r11.xyz, -r11.xyzx
      add r11.xyz, r10.xyzx, r11.xyzx  // r11.x <- <sphereGetNormal return value>.x; r11.y <- <sphereGetNormal return value>.y; r11.z <- <sphereGetNormal return value>.z

#line 314
      nop 
      imul null, r6.y, r6.w, l(9)
      mov r6.yzw, x1[r6.y + 5].xxyz  // r6.y <- pln.normal.x; r6.z <- pln.normal.y; r6.w <- pln.normal.z

#line 144
      mov r6.yzw, r6.yyzw  // r6.y <- <planeGetNormal return value>.x; r6.z <- <planeGetNormal return value>.y; r6.w <- <planeGetNormal return value>.z

#line 314
      movc r6.yzw, r5.wwww, r11.xxyz, r6.yyzw  // r6.y <- nhit.x; r6.z <- nhit.y; r6.w <- nhit.z

#line 317
      dp3 r5.w, r3.xyzx, r6.yzwy
      itof r7.x, l(0)
      lt r5.w, r7.x, r5.w  // r5.w <- inside
      if_nz r5.w
        mov r6.yzw, -r6.yyzw
      endif 

#line 320
      mov r7.x, l(1)
      ieq r7.x, r7.x, r10.w
      if_nz r7.x
        mul r11.xyz, r1.yyyy, r6.yzwy
        add r2.xyz, r10.xyzx, r11.xyzx
        nop 
        mov r11.xyz, r6.yzwy  // r11.x <- n.x; r11.y <- n.y; r11.z <- n.z
        mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y
        mov r1.z, r1.z  // r1.z <- c

#line 209
        nop 
        itof r9.zw, r1.zzzz
        mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
        dp2 r9.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
        sincos r9.z, null, r9.z
        mul r9.z, r9.z, l(43758.546875)
        frc r9.z, r9.z  // r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>

#line 209
        mul r9.z, r9.z, l(6.283185)  // r9.z <- r1
        iadd r9.w, r1.z, l(1)  // r9.w <- c
        nop 
        itof r12.xy, r9.wwww
        mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
        dp2 r11.w, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
        sincos r11.w, null, r11.w
        mul r11.w, r11.w, l(43758.546875)
        frc r11.w, r11.w  // r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>

#line 210
        mov r11.w, r11.w  // r11.w <- r2
        iadd r1.z, r9.w, l(1)  // r1.z <- c
        sqrt r9.w, r11.w  // r9.w <- r2s
        mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
        mov r12.x, -r11.x
        max r12.x, r11.x, r12.x
        lt r12.x, l(0.100000), r12.x
        itof r12.yzw, l(0, 0, 0, 1)
        itof r13.xyz, l(0, 1, 0, 0)
        movc r12.xyz, r12.xxxx, r12.yzwy, r13.xyzx
        mul r13.xyz, r11.zxyz, r12.zxyz
        mul r12.xyz, r11.yzxy, r12.xyzx
        mov r12.xyz, -r12.xyzx
        add r12.xyz, r12.xyzx, r13.xyzx
        dp3 r12.w, r12.xyzx, r12.xyzx
        rsq r12.w, r12.w
        mul r12.xyz, r12.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
        mul r13.xyz, r11.yzxy, r12.zxyz
        mul r14.xyz, r11.zxyz, r12.yzxy
        mov r14.xyz, -r14.xyzx
        add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
        sincos null, r12.w, r9.z
        mul r12.xyz, r12.wwww, r12.xyzx
        mul r12.xyz, r9.wwww, r12.xyzx
        sincos r9.z, null, r9.z
        mul r13.xyz, r9.zzzz, r13.xyzx
        mul r13.xyz, r9.wwww, r13.xyzx
        add r12.xyz, r12.xyzx, r13.xyzx
        itof r9.z, l(1)
        mov r9.w, -r11.w
        add r9.z, r9.w, r9.z
        sqrt r9.z, r9.z
        mul r11.xyz, r9.zzzz, r11.xyzx
        add r11.xyz, r11.xyzx, r12.xyzx
        dp3 r9.z, r11.xyzx, r11.xyzx
        rsq r9.z, r9.z
        mul r3.xyz, r9.zzzz, r11.xyzx  // r3.x <- <randomHemisphereDirection return value>.x; r3.y <- <randomHemisphereDirection return value>.y; r3.z <- <randomHemisphereDirection return value>.z

#line 323
        mov r1.z, r1.z  // r1.z <- rand_counter
        mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
      endif 
      if_z r7.x
        mov r7.x, l(2)
        ieq r7.x, r7.x, r10.w
        if_nz r7.x
          mul r11.xyz, r1.yyyy, r6.yzwy
          add r2.xyz, r10.xyzx, r11.xyzx
          dp3 r9.z, r3.xyzx, r6.yzwy
          add r9.z, r9.z, r9.z
          mov r9.z, -r9.z
          mul r11.xyz, r6.yzwy, r9.zzzz
          add r11.xyz, r3.xyzx, r11.xyzx
          dp3 r9.z, r11.xyzx, r11.xyzx
          rsq r9.z, r9.z
          mul r3.xyz, r9.zzzz, r11.xyzx
        endif 

#line 334
        if_z r7.x
          mov r7.x, l(3)
          ieq r7.x, r7.x, r10.w
          if_nz r7.x
            mul r11.xyz, r1.yyyy, r6.yzwy
            add r2.xyz, r10.xyzx, r11.xyzx
            nop 
            dp3 r9.z, r3.xyzx, r6.yzwy
            add r9.z, r9.z, r9.z
            mov r9.z, -r9.z
            mul r11.xyz, r6.yzwy, r9.zzzz
            add r11.xyz, r3.xyzx, r11.xyzx
            dp3 r9.z, r11.xyzx, r11.xyzx
            rsq r9.z, r9.z
            mul r11.xyz, r9.zzzz, r11.xyzx  // r11.x <- r.x; r11.y <- r.y; r11.z <- r.z; r11.x <- r.x; r11.y <- r.y; r11.z <- r.z
            mov r7.z, r7.z  // r7.z <- theta; r7.z <- theta
            mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
            mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
            nop 
            itof r9.zw, r1.zzzz
            mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
            dp2 r9.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
            sincos r9.z, null, r9.z
            mul r9.z, r9.z, l(43758.546875)
            frc r9.z, r9.z  // r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>

#line 222
            mul r9.z, r9.z, l(6.283185)  // r9.z <- r1; r9.z <- r1
            iadd r9.w, r1.z, l(1)  // r9.w <- c; r9.w <- c
            sincos r11.w, null, r7.z
            sincos r12.x, null, r7.z
            mul r11.w, r11.w, r12.x
            nop 
            itof r12.xy, r9.wwww
            mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
            dp2 r12.x, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
            sincos r12.x, null, r12.x
            mul r12.x, r12.x, l(43758.546875)
            frc r12.x, r12.x  // r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>

#line 223
            mul r11.w, r11.w, r12.x  // r11.w <- r2; r11.w <- r2
            iadd r1.z, r9.w, l(1)  // r1.z <- c; r1.z <- c
            sqrt r9.w, r11.w  // r9.w <- r2s; r9.w <- r2s
            mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z; r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
            mov r12.x, -r11.x
            max r12.x, r11.x, r12.x
            lt r12.x, l(0.100000), r12.x
            itof r12.yzw, l(0, 0, 0, 1)
            itof r13.xyz, l(0, 1, 0, 0)
            movc r12.xyz, r12.xxxx, r12.yzwy, r13.xyzx
            mul r13.xyz, r11.zxyz, r12.zxyz
            mul r12.xyz, r11.yzxy, r12.xyzx
            mov r12.xyz, -r12.xyzx
            add r12.xyz, r12.xyzx, r13.xyzx
            dp3 r12.w, r12.xyzx, r12.xyzx
            rsq r12.w, r12.w
            mul r12.xyz, r12.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z; r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
            mul r13.xyz, r11.yzxy, r12.zxyz
            mul r14.xyz, r11.zxyz, r12.yzxy
            mov r14.xyz, -r14.xyzx
            add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z; r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
            sincos null, r12.w, r9.z
            mul r12.xyz, r12.wwww, r12.xyzx
            mul r12.xyz, r9.wwww, r12.xyzx
            sincos r9.z, null, r9.z
            mul r13.xyz, r9.zzzz, r13.xyzx
            mul r13.xyz, r9.wwww, r13.xyzx
            add r12.xyz, r12.xyzx, r13.xyzx
            itof r9.z, l(1)
            mov r9.w, -r11.w
            add r9.z, r9.w, r9.z
            sqrt r9.z, r9.z
            mul r11.xyz, r9.zzzz, r11.xyzx
            add r11.xyz, r11.xyzx, r12.xyzx
            dp3 r9.z, r11.xyzx, r11.xyzx
            rsq r9.z, r9.z
            mul r3.xyz, r9.zzzz, r11.xyzx  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 337
            mov r1.z, r1.z  // r1.z <- rand_counter
            mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
          endif 
          if_z r7.x
            mov r7.x, l(5)
            ieq r7.x, r7.x, r10.w
            if_nz r7.x
              itof r9.z, l(1)
              div r9.z, r9.z, r7.y
              movc r9.z, r5.w, r7.y, r9.z  // r9.z <- n
              mul r11.xyz, r1.yyyy, r6.yzwy
              mov r11.xyz, -r11.xyzx
              add r2.xyz, r10.xyzx, r11.xyzx
              dp3 r9.w, r3.xyzx, r6.yzwy
              mul r11.x, r9.w, r9.w
              mul r11.y, r9.z, r9.z
              mov r11.x, -r11.x
              add r11.x, r11.x, l(1.000000)
              mul r11.x, r11.x, r11.y
              mov r11.x, -r11.x
              add r11.x, r11.x, l(1.000000)
              sqrt r11.y, r11.x
              mul r9.w, r9.w, r9.z
              add r9.w, r11.y, r9.w
              ge r11.x, r11.x, l(0.000000)
              mul r11.yzw, r3.xxyz, r9.zzzz
              mul r12.xyz, r6.yzwy, r9.wwww
              mov r12.xyz, -r12.xyzx
              add r11.yzw, r11.yyzw, r12.xxyz
              movc r11.xyz, r11.xxxx, r11.yzwy, l(0,0,0,0)
              dp3 r9.z, r11.xyzx, r11.xyzx
              rsq r9.z, r9.z
              mul r3.xyz, r9.zzzz, r11.xyzx
            endif 

#line 349
            if_z r7.x
              mov r7.x, l(6)
              ieq r7.x, r7.x, r10.w
              if_nz r7.x
                itof r7.x, l(1)
                div r7.x, r7.x, r7.y
                movc r5.w, r5.w, r7.y, r7.x  // r5.w <- n
                mul r11.xyz, r1.yyyy, r6.yzwy
                mov r11.xyz, -r11.xyzx
                add r2.xyz, r10.xyzx, r11.xyzx
                nop 
                dp3 r7.x, r3.xyzx, r6.yzwy
                mul r7.y, r7.x, r7.x
                mul r9.z, r5.w, r5.w
                mov r7.y, -r7.y
                add r7.y, r7.y, l(1.000000)
                mul r7.y, r7.y, r9.z
                mov r7.y, -r7.y
                add r7.y, r7.y, l(1.000000)
                sqrt r9.z, r7.y
                mul r7.x, r5.w, r7.x
                add r7.x, r9.z, r7.x
                ge r7.y, r7.y, l(0.000000)
                mul r10.xyz, r3.xyzx, r5.wwww
                mul r6.yzw, r6.yyzw, r7.xxxx
                mov r6.yzw, -r6.yyzw
                add r6.yzw, r6.yyzw, r10.xxyz
                movc r6.yzw, r7.yyyy, r6.yyzw, l(0,0,0,0)
                dp3 r5.w, r6.yzwy, r6.yzwy
                rsq r5.w, r5.w
                mul r6.yzw, r5.wwww, r6.yyzw  // r6.y <- r.x; r6.z <- r.y; r6.w <- r.z; r6.y <- r.x; r6.z <- r.y; r6.w <- r.z
                mov r7.z, r7.z  // r7.z <- theta; r7.z <- theta
                mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
                mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
                nop 
                itof r7.xy, r1.zzzz
                mul r7.xy, r4.xyxx, r7.xyxx  // r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y

#line 203
                dp2 r5.w, r7.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                sincos r5.w, null, r5.w
                mul r5.w, r5.w, l(43758.546875)
                frc r5.w, r5.w  // r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>

#line 222
                mul r5.w, r5.w, l(6.283185)  // r5.w <- r1; r5.w <- r1
                iadd r7.x, r1.z, l(1)  // r7.x <- c; r7.x <- c
                sincos r7.y, null, r7.z
                sincos r7.z, null, r7.z
                mul r7.y, r7.z, r7.y
                nop 
                itof r9.zw, r7.xxxx
                mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
                dp2 r7.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                sincos r7.z, null, r7.z
                mul r7.z, r7.z, l(43758.546875)
                frc r7.z, r7.z  // r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>

#line 223
                mul r7.y, r7.z, r7.y  // r7.y <- r2; r7.y <- r2
                iadd r1.z, r7.x, l(1)  // r1.z <- c; r1.z <- c
                sqrt r7.x, r7.y  // r7.x <- r2s; r7.x <- r2s
                mov r6.yzw, r6.yyzw  // r6.y <- w.x; r6.z <- w.y; r6.w <- w.z; r6.y <- w.x; r6.z <- w.y; r6.w <- w.z
                mov r7.z, -r6.y
                max r7.z, r6.y, r7.z
                lt r7.z, l(0.100000), r7.z
                itof r10.xyz, l(0, 0, 1, 0)
                itof r11.xyz, l(0, 1, 0, 0)
                movc r10.xyz, r7.zzzz, r10.xyzx, r11.xyzx
                mul r11.xyz, r6.wyzw, r10.zxyz
                mul r10.xyz, r6.zwyz, r10.xyzx
                mov r10.xyz, -r10.xyzx
                add r10.xyz, r10.xyzx, r11.xyzx
                dp3 r7.z, r10.xyzx, r10.xyzx
                rsq r7.z, r7.z
                mul r10.xyz, r7.zzzz, r10.xyzx  // r10.x <- u.x; r10.y <- u.y; r10.z <- u.z; r10.x <- u.x; r10.y <- u.y; r10.z <- u.z
                mul r11.xyz, r6.zwyz, r10.zxyz
                mul r12.xyz, r6.wyzw, r10.yzxy
                mov r12.xyz, -r12.xyzx
                add r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- v.x; r11.y <- v.y; r11.z <- v.z; r11.x <- v.x; r11.y <- v.y; r11.z <- v.z
                sincos null, r7.z, r5.w
                mul r10.xyz, r7.zzzz, r10.xyzx
                mul r10.xyz, r7.xxxx, r10.xyzx
                sincos r5.w, null, r5.w
                mul r11.xyz, r5.wwww, r11.xyzx
                mul r11.xyz, r7.xxxx, r11.xyzx
                add r10.xyz, r10.xyzx, r11.xyzx
                itof r5.w, l(1)
                mov r7.x, -r7.y
                add r5.w, r5.w, r7.x
                sqrt r5.w, r5.w
                mul r6.yzw, r5.wwww, r6.yyzw
                add r6.yzw, r6.yyzw, r10.xxyz
                dp3 r5.w, r6.yzwy, r6.yzwy
                rsq r5.w, r5.w
                mul r3.xyz, r5.wwww, r6.yzwy  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 353
                mov r1.z, r1.z  // r1.z <- rand_counter
                mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
              endif 
            endif 
          endif 
        endif 
      endif 
    endif 
    or r5.w, r8.w, r6.x
  else   // Prior locations: r5.w <- nearest_dist; r6.w <- nearest_index; r7.x <- nearest_type; r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r7.y <- nearest_mtl.ior; r7.z <- nearest_mtl.gloss_angle; r11.x <- j
    mov r5.w, l(-1)
  endif 
  and r5.w, r4.w, r5.w
  or r5.w, r9.y, r5.w
  and r4.w, r4.w, r7.w
  or r3.w, r9.x, r4.w
else 
  mov r5.w, l(-1)
endif 

#line 260
not r4.w, r5.w
not r5.w, r3.w
and r4.w, r4.w, r5.w
and r4.z, r4.w, r4.z
max r4.w, r5.y, r5.x
max r4.w, r5.z, r4.w
lt r4.w, r1.x, r4.w
and r4.z, r4.w, r4.z
if_nz r4.z

#line 263
  mov r4.w, l(0)  // r4.w <- nearest_index
  mov r5.w, l(0)  // r5.w <- nearest_type
  itof r6.xyzw, l(0, 0, 0, 0)  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r6.w <- nearest_mtl.ior
  itof r7.x, l(0)  // r7.x <- nearest_mtl.gloss_angle
  mov r7.y, l(0)  // r7.y <- nearest_mtl.surface_type

#line 268
  mov r7.z, l(0)  // r7.z <- i
  mov r9.xyz, r6.xyzx  // r9.x <- nearest_mtl.emissive_color.x; r9.y <- nearest_mtl.emissive_color.y; r9.z <- nearest_mtl.emissive_color.z
  mov r7.w, r0.x  // r7.w <- nearest_dist
  mov r8.w, r4.w  // r8.w <- nearest_index
  mov r9.w, r5.w  // r9.w <- nearest_type
  mov r10.x, r6.w  // r10.x <- nearest_mtl.ior
  mov r10.y, r7.x  // r10.y <- nearest_mtl.gloss_angle
  mov r10.z, r7.y  // r10.z <- nearest_mtl.surface_type
  mov r10.w, r7.z  // r10.w <- i
  loop 
    ult r11.x, r10.w, r1.w
    breakc_z r11.x
    nop 
    imul null, r11.x, r10.w, l(8)
    mov r11.yzw, x0[r11.x + 5].xxyz
    mov r11.x, x0[r11.x + 7].x
    mov r11.yzw, r11.yyzw  // r11.y <- sph.center.x; r11.z <- sph.center.y; r11.w <- sph.center.z
    mov r11.x, r11.x  // r11.x <- sph.radiusSq
    mov r12.xyz, r2.xyzx  // r12.x <- rayorig.x; r12.y <- rayorig.y; r12.z <- rayorig.z
    mov r13.xyz, r3.xyzx  // r13.x <- raydir.x; r13.y <- raydir.y; r13.z <- raydir.z

#line 92
    mov r12.xyz, -r12.xyzx
    add r11.yzw, r11.yyzw, r12.xxyz  // r11.y <- l.x; r11.z <- l.y; r11.w <- l.z

#line 95
    dp3 r12.x, r11.yzwy, r13.xyzx  // r12.x <- tca
    itof r12.y, l(0)
    lt r12.y, r12.x, r12.y
    if_nz r12.y
      nop 
      mov r12.z, l(0)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
      itof r12.w, l(0)  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
      mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
      mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
      mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
      mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 98
      mov r12.zw, r12.zzzw  // r12.z <- <sphereGetIntersect return value>.intersection; r12.w <- <sphereGetIntersect return value>.dist
    endif 

#line 102
    if_z r12.y
      dp3 r11.y, r11.yzwy, r11.yzwy
      mul r11.z, r12.x, r12.x
      mov r11.z, -r11.z
      add r11.y, r11.z, r11.y  // r11.y <- d2
      lt r11.z, r11.x, r11.y
      if_nz r11.z
        nop 
        mov r12.z, l(0)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
        itof r12.w, l(0)  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
        mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
        mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
        mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
        mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 105
        mov r12.zw, r12.zzzw
      endif 

#line 109
      if_z r11.z
        mov r11.y, -r11.y
        add r11.x, r11.y, r11.x
        sqrt r11.x, r11.x  // r11.x <- thc
        mov r11.y, -r11.x
        add r12.w, r11.y, r12.x  // r12.w <- d
        itof r11.y, l(0)
        lt r11.y, r12.w, r11.y
        if_nz r11.y
          add r12.w, r11.x, r12.x
        endif 
        nop 
        mov r12.z, l(-1)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
        mov r12.w, r12.w  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
        mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
        mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
        mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
        mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 116
        mov r12.zw, r12.zzzw  // r12.w <- <sphereGetIntersect return value>.dist
      endif 
    endif 

#line 270
    mov r12.w, r12.w  // r12.w <- curIntersect.dist
    if_nz r12.z
      lt r11.x, r12.w, r7.w
      if_nz r11.x
        mov r7.w, r12.w
        mov r8.w, r10.w
        mov r9.w, l(1)
        imul null, r11.x, r10.w, l(8)
        mov r9.xyz, x0[r11.x + 1].xyzx
        mov r10.x, x0[r11.x + 2].x
        mov r10.y, x0[r11.x + 3].x
        mov r10.z, x0[r11.x + 4].x
      endif 
    endif 

#line 281
    iadd r10.w, r10.w, l(1)
  endloop 
  mov r4.w, l(0)  // r4.w <- j
  mov r6.xyz, r9.xyzx  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z
  mov r5.w, r7.w  // r5.w <- nearest_dist
  mov r6.w, r8.w  // r6.w <- nearest_index
  mov r7.x, r9.w  // r7.x <- nearest_type
  mov r7.y, r10.x  // r7.y <- nearest_mtl.ior
  mov r7.z, r10.y  // r7.z <- nearest_mtl.gloss_angle
  mov r10.w, r10.z  // r10.w <- nearest_mtl.surface_type
  mov r11.x, r4.w  // r11.x <- j
  loop 
    ult r11.y, r11.x, r2.w
    breakc_z r11.y
    nop 
    imul null, r11.y, r11.x, l(9)
    mov r12.xyz, x1[r11.y + 5].xyzx
    mov r11.yzw, x1[r11.y + 6].xxyz
    mov r12.xyz, r12.xyzx  // r12.x <- pln.normal.x; r12.y <- pln.normal.y; r12.z <- pln.normal.z
    mov r11.yzw, r11.yyzw  // r11.y <- pln.pnt.x; r11.z <- pln.pnt.y; r11.w <- pln.pnt.z
    mov r13.xyz, r2.xyzx  // r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
    mov r14.xyz, r3.xyzx  // r14.x <- raydir.x; r14.y <- raydir.y; r14.z <- raydir.z

#line 154
    dp3 r12.w, r12.xyzx, r14.xyzx  // r12.w <- denom
    lt r13.w, l(0.000001), r12.w
    if_nz r13.w
      mov r13.xyz, -r13.xyzx
      add r11.yzw, r11.yyzw, r13.xxyz  // r11.y <- origintopoint.x; r11.z <- origintopoint.y; r11.w <- origintopoint.z
      dp3 r11.y, r11.yzwy, r12.xyzx
      div r12.y, r11.y, r12.w  // r12.y <- d
      itof r11.y, l(0)
      ge r11.y, r12.y, r11.y
      if_nz r11.y
        nop 
        mov r12.x, l(-1)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
        mov r12.y, r12.y  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
        mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
        mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
        mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
        mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 159
        mov r12.xy, r12.xyxx  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
      endif 
    else   // Prior locations: r12.x <- pln.normal.x; r12.y <- pln.normal.y; r11.y <- pln.pnt.x; r11.z <- pln.pnt.y; r11.w <- pln.pnt.z; r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
      mov r11.y, l(0)
    endif 
    if_z r11.y  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
      nop 
      mov r12.x, l(0)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
      itof r12.y, l(0)  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
      mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
      mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
      mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
      mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 162
      mov r12.xy, r12.xyxx
    endif 

#line 284
    mov r12.y, r12.y  // r12.y <- curIntersect.dist
    if_nz r12.x
      lt r11.y, r12.y, r5.w
      if_nz r11.y
        mov r5.w, r12.y
        mov r6.w, r11.x
        mov r7.x, l(2)
        imul null, r11.y, r11.x, l(9)
        mov r6.xyz, x1[r11.y + 1].xyzx
        mov r7.y, x1[r11.y + 2].x
        mov r7.z, x1[r11.y + 3].x
        mov r10.w, x1[r11.y + 4].x
      endif 
    endif 

#line 295
    iadd r11.x, r11.x, l(1)
  endloop 

#line 298
  mov r4.w, l(0)
  ieq r9.xy, r4.wwww, r7.xxxx
  if_z r7.x
    mov r8.xyz, r0.yzwy
  endif 
  not r4.w, r9.y
  not r7.w, r9.x
  and r4.w, r4.w, r7.w
  not r7.w, r4.w
  if_nz r4.w
    mov r8.w, l(4)
    ieq r8.w, r8.w, r10.w
    if_nz r8.w
      mul r5.xyz, r5.xyzx, r6.xyzx
    endif 

#line 310
    not r6.x, r8.w
    not r6.x, r6.x
    if_z r8.w
      mul r10.xyz, r3.xyzx, r5.wwww
      add r10.xyz, r2.xyzx, r10.xyzx  // r10.x <- phit.x; r10.y <- phit.y; r10.z <- phit.z
      mov r5.w, l(1)
      ieq r5.w, r5.w, r7.x
      nop 
      imul null, r6.y, r6.w, l(8)
      mov r11.xyz, x0[r6.y + 0].xyzx  // r11.x <- sph.mtl.surface_color.x; r11.y <- sph.mtl.surface_color.y; r11.z <- sph.mtl.surface_color.z

#line 87
      mov r11.xyz, r11.xyzx  // r11.x <- <sphereGetSurfaceColor return value>.x; r11.y <- <sphereGetSurfaceColor return value>.y; r11.z <- <sphereGetSurfaceColor return value>.z

#line 311
      nop 
      imul null, r6.y, r6.w, l(9)
      mov r12.xyz, x1[r6.y + 0].xyzx  // r12.x <- pln.mtl.surface_color.x; r12.y <- pln.mtl.surface_color.y; r12.z <- pln.mtl.surface_color.z

#line 149
      mov r12.xyz, r12.xyzx  // r12.x <- <planeGetSurfaceColor return value>.x; r12.y <- <planeGetSurfaceColor return value>.y; r12.z <- <planeGetSurfaceColor return value>.z

#line 311
      movc r11.xyz, r5.wwww, r11.xyzx, r12.xyzx  // r11.x <- chit.x; r11.y <- chit.y; r11.z <- chit.z
      mul r5.xyz, r5.xyzx, r11.xyzx
      mov r5.w, l(1)
      ieq r5.w, r5.w, r7.x
      nop 
      imul null, r6.y, r6.w, l(8)
      mov r11.xyz, x0[r6.y + 5].xyzx  // r11.x <- sph.center.x; r11.y <- sph.center.y; r11.z <- sph.center.z
      mov r10.xyz, r10.xyzx  // r10.x <- p.x; r10.y <- p.y; r10.z <- p.z

#line 82
      mov r11.xyz, -r11.xyzx
      add r11.xyz, r10.xyzx, r11.xyzx  // r11.x <- <sphereGetNormal return value>.x; r11.y <- <sphereGetNormal return value>.y; r11.z <- <sphereGetNormal return value>.z

#line 314
      nop 
      imul null, r6.y, r6.w, l(9)
      mov r6.yzw, x1[r6.y + 5].xxyz  // r6.y <- pln.normal.x; r6.z <- pln.normal.y; r6.w <- pln.normal.z

#line 144
      mov r6.yzw, r6.yyzw  // r6.y <- <planeGetNormal return value>.x; r6.z <- <planeGetNormal return value>.y; r6.w <- <planeGetNormal return value>.z

#line 314
      movc r6.yzw, r5.wwww, r11.xxyz, r6.yyzw  // r6.y <- nhit.x; r6.z <- nhit.y; r6.w <- nhit.z

#line 317
      dp3 r5.w, r3.xyzx, r6.yzwy
      itof r7.x, l(0)
      lt r5.w, r7.x, r5.w  // r5.w <- inside
      if_nz r5.w
        mov r6.yzw, -r6.yyzw
      endif 

#line 320
      mov r7.x, l(1)
      ieq r7.x, r7.x, r10.w
      if_nz r7.x
        mul r11.xyz, r1.yyyy, r6.yzwy
        add r2.xyz, r10.xyzx, r11.xyzx
        nop 
        mov r11.xyz, r6.yzwy  // r11.x <- n.x; r11.y <- n.y; r11.z <- n.z
        mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y
        mov r1.z, r1.z  // r1.z <- c

#line 209
        nop 
        itof r9.zw, r1.zzzz
        mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
        dp2 r9.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
        sincos r9.z, null, r9.z
        mul r9.z, r9.z, l(43758.546875)
        frc r9.z, r9.z  // r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>

#line 209
        mul r9.z, r9.z, l(6.283185)  // r9.z <- r1
        iadd r9.w, r1.z, l(1)  // r9.w <- c
        nop 
        itof r12.xy, r9.wwww
        mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
        dp2 r11.w, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
        sincos r11.w, null, r11.w
        mul r11.w, r11.w, l(43758.546875)
        frc r11.w, r11.w  // r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>

#line 210
        mov r11.w, r11.w  // r11.w <- r2
        iadd r1.z, r9.w, l(1)  // r1.z <- c
        sqrt r9.w, r11.w  // r9.w <- r2s
        mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
        mov r12.x, -r11.x
        max r12.x, r11.x, r12.x
        lt r12.x, l(0.100000), r12.x
        itof r12.yzw, l(0, 0, 0, 1)
        itof r13.xyz, l(0, 1, 0, 0)
        movc r12.xyz, r12.xxxx, r12.yzwy, r13.xyzx
        mul r13.xyz, r11.zxyz, r12.zxyz
        mul r12.xyz, r11.yzxy, r12.xyzx
        mov r12.xyz, -r12.xyzx
        add r12.xyz, r12.xyzx, r13.xyzx
        dp3 r12.w, r12.xyzx, r12.xyzx
        rsq r12.w, r12.w
        mul r12.xyz, r12.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
        mul r13.xyz, r11.yzxy, r12.zxyz
        mul r14.xyz, r11.zxyz, r12.yzxy
        mov r14.xyz, -r14.xyzx
        add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
        sincos null, r12.w, r9.z
        mul r12.xyz, r12.wwww, r12.xyzx
        mul r12.xyz, r9.wwww, r12.xyzx
        sincos r9.z, null, r9.z
        mul r13.xyz, r9.zzzz, r13.xyzx
        mul r13.xyz, r9.wwww, r13.xyzx
        add r12.xyz, r12.xyzx, r13.xyzx
        itof r9.z, l(1)
        mov r9.w, -r11.w
        add r9.z, r9.w, r9.z
        sqrt r9.z, r9.z
        mul r11.xyz, r9.zzzz, r11.xyzx
        add r11.xyz, r11.xyzx, r12.xyzx
        dp3 r9.z, r11.xyzx, r11.xyzx
        rsq r9.z, r9.z
        mul r3.xyz, r9.zzzz, r11.xyzx  // r3.x <- <randomHemisphereDirection return value>.x; r3.y <- <randomHemisphereDirection return value>.y; r3.z <- <randomHemisphereDirection return value>.z

#line 323
        mov r1.z, r1.z  // r1.z <- rand_counter
        mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
      endif 
      if_z r7.x
        mov r7.x, l(2)
        ieq r7.x, r7.x, r10.w
        if_nz r7.x
          mul r11.xyz, r1.yyyy, r6.yzwy
          add r2.xyz, r10.xyzx, r11.xyzx
          dp3 r9.z, r3.xyzx, r6.yzwy
          add r9.z, r9.z, r9.z
          mov r9.z, -r9.z
          mul r11.xyz, r6.yzwy, r9.zzzz
          add r11.xyz, r3.xyzx, r11.xyzx
          dp3 r9.z, r11.xyzx, r11.xyzx
          rsq r9.z, r9.z
          mul r3.xyz, r9.zzzz, r11.xyzx
        endif 

#line 334
        if_z r7.x
          mov r7.x, l(3)
          ieq r7.x, r7.x, r10.w
          if_nz r7.x
            mul r11.xyz, r1.yyyy, r6.yzwy
            add r2.xyz, r10.xyzx, r11.xyzx
            nop 
            dp3 r9.z, r3.xyzx, r6.yzwy
            add r9.z, r9.z, r9.z
            mov r9.z, -r9.z
            mul r11.xyz, r6.yzwy, r9.zzzz
            add r11.xyz, r3.xyzx, r11.xyzx
            dp3 r9.z, r11.xyzx, r11.xyzx
            rsq r9.z, r9.z
            mul r11.xyz, r9.zzzz, r11.xyzx  // r11.x <- r.x; r11.y <- r.y; r11.z <- r.z; r11.x <- r.x; r11.y <- r.y; r11.z <- r.z
            mov r7.z, r7.z  // r7.z <- theta; r7.z <- theta
            mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
            mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
            nop 
            itof r9.zw, r1.zzzz
            mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
            dp2 r9.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
            sincos r9.z, null, r9.z
            mul r9.z, r9.z, l(43758.546875)
            frc r9.z, r9.z  // r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>

#line 222
            mul r9.z, r9.z, l(6.283185)  // r9.z <- r1; r9.z <- r1
            iadd r9.w, r1.z, l(1)  // r9.w <- c; r9.w <- c
            sincos r11.w, null, r7.z
            sincos r12.x, null, r7.z
            mul r11.w, r11.w, r12.x
            nop 
            itof r12.xy, r9.wwww
            mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
            dp2 r12.x, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
            sincos r12.x, null, r12.x
            mul r12.x, r12.x, l(43758.546875)
            frc r12.x, r12.x  // r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>

#line 223
            mul r11.w, r11.w, r12.x  // r11.w <- r2; r11.w <- r2
            iadd r1.z, r9.w, l(1)  // r1.z <- c; r1.z <- c
            sqrt r9.w, r11.w  // r9.w <- r2s; r9.w <- r2s
            mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z; r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
            mov r12.x, -r11.x
            max r12.x, r11.x, r12.x
            lt r12.x, l(0.100000), r12.x
            itof r12.yzw, l(0, 0, 0, 1)
            itof r13.xyz, l(0, 1, 0, 0)
            movc r12.xyz, r12.xxxx, r12.yzwy, r13.xyzx
            mul r13.xyz, r11.zxyz, r12.zxyz
            mul r12.xyz, r11.yzxy, r12.xyzx
            mov r12.xyz, -r12.xyzx
            add r12.xyz, r12.xyzx, r13.xyzx
            dp3 r12.w, r12.xyzx, r12.xyzx
            rsq r12.w, r12.w
            mul r12.xyz, r12.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z; r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
            mul r13.xyz, r11.yzxy, r12.zxyz
            mul r14.xyz, r11.zxyz, r12.yzxy
            mov r14.xyz, -r14.xyzx
            add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z; r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
            sincos null, r12.w, r9.z
            mul r12.xyz, r12.wwww, r12.xyzx
            mul r12.xyz, r9.wwww, r12.xyzx
            sincos r9.z, null, r9.z
            mul r13.xyz, r9.zzzz, r13.xyzx
            mul r13.xyz, r9.wwww, r13.xyzx
            add r12.xyz, r12.xyzx, r13.xyzx
            itof r9.z, l(1)
            mov r9.w, -r11.w
            add r9.z, r9.w, r9.z
            sqrt r9.z, r9.z
            mul r11.xyz, r9.zzzz, r11.xyzx
            add r11.xyz, r11.xyzx, r12.xyzx
            dp3 r9.z, r11.xyzx, r11.xyzx
            rsq r9.z, r9.z
            mul r3.xyz, r9.zzzz, r11.xyzx  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 337
            mov r1.z, r1.z  // r1.z <- rand_counter
            mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
          endif 
          if_z r7.x
            mov r7.x, l(5)
            ieq r7.x, r7.x, r10.w
            if_nz r7.x
              itof r9.z, l(1)
              div r9.z, r9.z, r7.y
              movc r9.z, r5.w, r7.y, r9.z  // r9.z <- n
              mul r11.xyz, r1.yyyy, r6.yzwy
              mov r11.xyz, -r11.xyzx
              add r2.xyz, r10.xyzx, r11.xyzx
              dp3 r9.w, r3.xyzx, r6.yzwy
              mul r11.x, r9.w, r9.w
              mul r11.y, r9.z, r9.z
              mov r11.x, -r11.x
              add r11.x, r11.x, l(1.000000)
              mul r11.x, r11.x, r11.y
              mov r11.x, -r11.x
              add r11.x, r11.x, l(1.000000)
              sqrt r11.y, r11.x
              mul r9.w, r9.w, r9.z
              add r9.w, r11.y, r9.w
              ge r11.x, r11.x, l(0.000000)
              mul r11.yzw, r3.xxyz, r9.zzzz
              mul r12.xyz, r6.yzwy, r9.wwww
              mov r12.xyz, -r12.xyzx
              add r11.yzw, r11.yyzw, r12.xxyz
              movc r11.xyz, r11.xxxx, r11.yzwy, l(0,0,0,0)
              dp3 r9.z, r11.xyzx, r11.xyzx
              rsq r9.z, r9.z
              mul r3.xyz, r9.zzzz, r11.xyzx
            endif 

#line 349
            if_z r7.x
              mov r7.x, l(6)
              ieq r7.x, r7.x, r10.w
              if_nz r7.x
                itof r7.x, l(1)
                div r7.x, r7.x, r7.y
                movc r5.w, r5.w, r7.y, r7.x  // r5.w <- n
                mul r11.xyz, r1.yyyy, r6.yzwy
                mov r11.xyz, -r11.xyzx
                add r2.xyz, r10.xyzx, r11.xyzx
                nop 
                dp3 r7.x, r3.xyzx, r6.yzwy
                mul r7.y, r7.x, r7.x
                mul r9.z, r5.w, r5.w
                mov r7.y, -r7.y
                add r7.y, r7.y, l(1.000000)
                mul r7.y, r7.y, r9.z
                mov r7.y, -r7.y
                add r7.y, r7.y, l(1.000000)
                sqrt r9.z, r7.y
                mul r7.x, r5.w, r7.x
                add r7.x, r9.z, r7.x
                ge r7.y, r7.y, l(0.000000)
                mul r10.xyz, r3.xyzx, r5.wwww
                mul r6.yzw, r6.yyzw, r7.xxxx
                mov r6.yzw, -r6.yyzw
                add r6.yzw, r6.yyzw, r10.xxyz
                movc r6.yzw, r7.yyyy, r6.yyzw, l(0,0,0,0)
                dp3 r5.w, r6.yzwy, r6.yzwy
                rsq r5.w, r5.w
                mul r6.yzw, r5.wwww, r6.yyzw  // r6.y <- r.x; r6.z <- r.y; r6.w <- r.z; r6.y <- r.x; r6.z <- r.y; r6.w <- r.z
                mov r7.z, r7.z  // r7.z <- theta; r7.z <- theta
                mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
                mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
                nop 
                itof r7.xy, r1.zzzz
                mul r7.xy, r4.xyxx, r7.xyxx  // r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y

#line 203
                dp2 r5.w, r7.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                sincos r5.w, null, r5.w
                mul r5.w, r5.w, l(43758.546875)
                frc r5.w, r5.w  // r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>

#line 222
                mul r5.w, r5.w, l(6.283185)  // r5.w <- r1; r5.w <- r1
                iadd r7.x, r1.z, l(1)  // r7.x <- c; r7.x <- c
                sincos r7.y, null, r7.z
                sincos r7.z, null, r7.z
                mul r7.y, r7.z, r7.y
                nop 
                itof r9.zw, r7.xxxx
                mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
                dp2 r7.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                sincos r7.z, null, r7.z
                mul r7.z, r7.z, l(43758.546875)
                frc r7.z, r7.z  // r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>

#line 223
                mul r7.y, r7.z, r7.y  // r7.y <- r2; r7.y <- r2
                iadd r1.z, r7.x, l(1)  // r1.z <- c; r1.z <- c
                sqrt r7.x, r7.y  // r7.x <- r2s; r7.x <- r2s
                mov r6.yzw, r6.yyzw  // r6.y <- w.x; r6.z <- w.y; r6.w <- w.z; r6.y <- w.x; r6.z <- w.y; r6.w <- w.z
                mov r7.z, -r6.y
                max r7.z, r6.y, r7.z
                lt r7.z, l(0.100000), r7.z
                itof r10.xyz, l(0, 0, 1, 0)
                itof r11.xyz, l(0, 1, 0, 0)
                movc r10.xyz, r7.zzzz, r10.xyzx, r11.xyzx
                mul r11.xyz, r6.wyzw, r10.zxyz
                mul r10.xyz, r6.zwyz, r10.xyzx
                mov r10.xyz, -r10.xyzx
                add r10.xyz, r10.xyzx, r11.xyzx
                dp3 r7.z, r10.xyzx, r10.xyzx
                rsq r7.z, r7.z
                mul r10.xyz, r7.zzzz, r10.xyzx  // r10.x <- u.x; r10.y <- u.y; r10.z <- u.z; r10.x <- u.x; r10.y <- u.y; r10.z <- u.z
                mul r11.xyz, r6.zwyz, r10.zxyz
                mul r12.xyz, r6.wyzw, r10.yzxy
                mov r12.xyz, -r12.xyzx
                add r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- v.x; r11.y <- v.y; r11.z <- v.z; r11.x <- v.x; r11.y <- v.y; r11.z <- v.z
                sincos null, r7.z, r5.w
                mul r10.xyz, r7.zzzz, r10.xyzx
                mul r10.xyz, r7.xxxx, r10.xyzx
                sincos r5.w, null, r5.w
                mul r11.xyz, r5.wwww, r11.xyzx
                mul r11.xyz, r7.xxxx, r11.xyzx
                add r10.xyz, r10.xyzx, r11.xyzx
                itof r5.w, l(1)
                mov r7.x, -r7.y
                add r5.w, r5.w, r7.x
                sqrt r5.w, r5.w
                mul r6.yzw, r5.wwww, r6.yyzw
                add r6.yzw, r6.yyzw, r10.xxyz
                dp3 r5.w, r6.yzwy, r6.yzwy
                rsq r5.w, r5.w
                mul r3.xyz, r5.wwww, r6.yzwy  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 353
                mov r1.z, r1.z  // r1.z <- rand_counter
                mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
              endif 
            endif 
          endif 
        endif 
      endif 
    endif 
    or r5.w, r8.w, r6.x
  else   // Prior locations: r5.w <- nearest_dist; r6.w <- nearest_index; r7.x <- nearest_type; r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r7.y <- nearest_mtl.ior; r7.z <- nearest_mtl.gloss_angle; r11.x <- j
    mov r5.w, l(-1)
  endif 
  and r5.w, r4.w, r5.w
  or r5.w, r9.y, r5.w
  and r4.w, r4.w, r7.w
  or r3.w, r9.x, r4.w
else 
  mov r5.w, l(-1)
endif 

#line 260
not r4.w, r5.w
not r5.w, r3.w
and r4.w, r4.w, r5.w
and r4.z, r4.w, r4.z
max r4.w, r5.y, r5.x
max r4.w, r5.z, r4.w
lt r4.w, r1.x, r4.w
and r4.z, r4.w, r4.z
if_nz r4.z

#line 263
  mov r4.w, l(0)  // r4.w <- nearest_index
  mov r5.w, l(0)  // r5.w <- nearest_type
  itof r6.xyzw, l(0, 0, 0, 0)  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r6.w <- nearest_mtl.ior
  itof r7.x, l(0)  // r7.x <- nearest_mtl.gloss_angle
  mov r7.y, l(0)  // r7.y <- nearest_mtl.surface_type

#line 268
  mov r7.z, l(0)  // r7.z <- i
  mov r9.xyz, r6.xyzx  // r9.x <- nearest_mtl.emissive_color.x; r9.y <- nearest_mtl.emissive_color.y; r9.z <- nearest_mtl.emissive_color.z
  mov r7.w, r0.x  // r7.w <- nearest_dist
  mov r8.w, r4.w  // r8.w <- nearest_index
  mov r9.w, r5.w  // r9.w <- nearest_type
  mov r10.x, r6.w  // r10.x <- nearest_mtl.ior
  mov r10.y, r7.x  // r10.y <- nearest_mtl.gloss_angle
  mov r10.z, r7.y  // r10.z <- nearest_mtl.surface_type
  mov r10.w, r7.z  // r10.w <- i
  loop 
    ult r11.x, r10.w, r1.w
    breakc_z r11.x
    nop 
    imul null, r11.x, r10.w, l(8)
    mov r11.yzw, x0[r11.x + 5].xxyz
    mov r11.x, x0[r11.x + 7].x
    mov r11.yzw, r11.yyzw  // r11.y <- sph.center.x; r11.z <- sph.center.y; r11.w <- sph.center.z
    mov r11.x, r11.x  // r11.x <- sph.radiusSq
    mov r12.xyz, r2.xyzx  // r12.x <- rayorig.x; r12.y <- rayorig.y; r12.z <- rayorig.z
    mov r13.xyz, r3.xyzx  // r13.x <- raydir.x; r13.y <- raydir.y; r13.z <- raydir.z

#line 92
    mov r12.xyz, -r12.xyzx
    add r11.yzw, r11.yyzw, r12.xxyz  // r11.y <- l.x; r11.z <- l.y; r11.w <- l.z

#line 95
    dp3 r12.x, r11.yzwy, r13.xyzx  // r12.x <- tca
    itof r12.y, l(0)
    lt r12.y, r12.x, r12.y
    if_nz r12.y
      nop 
      mov r12.z, l(0)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
      itof r12.w, l(0)  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
      mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
      mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
      mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
      mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 98
      mov r12.zw, r12.zzzw  // r12.z <- <sphereGetIntersect return value>.intersection; r12.w <- <sphereGetIntersect return value>.dist
    endif 

#line 102
    if_z r12.y
      dp3 r11.y, r11.yzwy, r11.yzwy
      mul r11.z, r12.x, r12.x
      mov r11.z, -r11.z
      add r11.y, r11.z, r11.y  // r11.y <- d2
      lt r11.z, r11.x, r11.y
      if_nz r11.z
        nop 
        mov r12.z, l(0)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
        itof r12.w, l(0)  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
        mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
        mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
        mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
        mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 105
        mov r12.zw, r12.zzzw
      endif 

#line 109
      if_z r11.z
        mov r11.y, -r11.y
        add r11.x, r11.y, r11.x
        sqrt r11.x, r11.x  // r11.x <- thc
        mov r11.y, -r11.x
        add r12.w, r11.y, r12.x  // r12.w <- d
        itof r11.y, l(0)
        lt r11.y, r12.w, r11.y
        if_nz r11.y
          add r12.w, r11.x, r12.x
        endif 
        nop 
        mov r12.z, l(-1)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
        mov r12.w, r12.w  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
        mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
        mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
        mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
        mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 116
        mov r12.zw, r12.zzzw  // r12.w <- <sphereGetIntersect return value>.dist
      endif 
    endif 

#line 270
    mov r12.w, r12.w  // r12.w <- curIntersect.dist
    if_nz r12.z
      lt r11.x, r12.w, r7.w
      if_nz r11.x
        mov r7.w, r12.w
        mov r8.w, r10.w
        mov r9.w, l(1)
        imul null, r11.x, r10.w, l(8)
        mov r9.xyz, x0[r11.x + 1].xyzx
        mov r10.x, x0[r11.x + 2].x
        mov r10.y, x0[r11.x + 3].x
        mov r10.z, x0[r11.x + 4].x
      endif 
    endif 

#line 281
    iadd r10.w, r10.w, l(1)
  endloop 
  mov r4.w, l(0)  // r4.w <- j
  mov r6.xyz, r9.xyzx  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z
  mov r5.w, r7.w  // r5.w <- nearest_dist
  mov r6.w, r8.w  // r6.w <- nearest_index
  mov r7.x, r9.w  // r7.x <- nearest_type
  mov r7.y, r10.x  // r7.y <- nearest_mtl.ior
  mov r7.z, r10.y  // r7.z <- nearest_mtl.gloss_angle
  mov r10.w, r10.z  // r10.w <- nearest_mtl.surface_type
  mov r11.x, r4.w  // r11.x <- j
  loop 
    ult r11.y, r11.x, r2.w
    breakc_z r11.y
    nop 
    imul null, r11.y, r11.x, l(9)
    mov r12.xyz, x1[r11.y + 5].xyzx
    mov r11.yzw, x1[r11.y + 6].xxyz
    mov r12.xyz, r12.xyzx  // r12.x <- pln.normal.x; r12.y <- pln.normal.y; r12.z <- pln.normal.z
    mov r11.yzw, r11.yyzw  // r11.y <- pln.pnt.x; r11.z <- pln.pnt.y; r11.w <- pln.pnt.z
    mov r13.xyz, r2.xyzx  // r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
    mov r14.xyz, r3.xyzx  // r14.x <- raydir.x; r14.y <- raydir.y; r14.z <- raydir.z

#line 154
    dp3 r12.w, r12.xyzx, r14.xyzx  // r12.w <- denom
    lt r13.w, l(0.000001), r12.w
    if_nz r13.w
      mov r13.xyz, -r13.xyzx
      add r11.yzw, r11.yyzw, r13.xxyz  // r11.y <- origintopoint.x; r11.z <- origintopoint.y; r11.w <- origintopoint.z
      dp3 r11.y, r11.yzwy, r12.xyzx
      div r12.y, r11.y, r12.w  // r12.y <- d
      itof r11.y, l(0)
      ge r11.y, r12.y, r11.y
      if_nz r11.y
        nop 
        mov r12.x, l(-1)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
        mov r12.y, r12.y  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
        mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
        mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
        mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
        mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 159
        mov r12.xy, r12.xyxx  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
      endif 
    else   // Prior locations: r12.x <- pln.normal.x; r12.y <- pln.normal.y; r11.y <- pln.pnt.x; r11.z <- pln.pnt.y; r11.w <- pln.pnt.z; r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
      mov r11.y, l(0)
    endif 
    if_z r11.y  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
      nop 
      mov r12.x, l(0)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
      itof r12.y, l(0)  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
      mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
      mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
      mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
      mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 162
      mov r12.xy, r12.xyxx
    endif 

#line 284
    mov r12.y, r12.y  // r12.y <- curIntersect.dist
    if_nz r12.x
      lt r11.y, r12.y, r5.w
      if_nz r11.y
        mov r5.w, r12.y
        mov r6.w, r11.x
        mov r7.x, l(2)
        imul null, r11.y, r11.x, l(9)
        mov r6.xyz, x1[r11.y + 1].xyzx
        mov r7.y, x1[r11.y + 2].x
        mov r7.z, x1[r11.y + 3].x
        mov r10.w, x1[r11.y + 4].x
      endif 
    endif 

#line 295
    iadd r11.x, r11.x, l(1)
  endloop 

#line 298
  mov r4.w, l(0)
  ieq r9.xy, r4.wwww, r7.xxxx
  if_z r7.x
    mov r8.xyz, r0.yzwy
  endif 
  not r4.w, r9.y
  not r7.w, r9.x
  and r4.w, r4.w, r7.w
  not r7.w, r4.w
  if_nz r4.w
    mov r8.w, l(4)
    ieq r8.w, r8.w, r10.w
    if_nz r8.w
      mul r5.xyz, r5.xyzx, r6.xyzx
    endif 

#line 310
    not r6.x, r8.w
    not r6.x, r6.x
    if_z r8.w
      mul r10.xyz, r3.xyzx, r5.wwww
      add r10.xyz, r2.xyzx, r10.xyzx  // r10.x <- phit.x; r10.y <- phit.y; r10.z <- phit.z
      mov r5.w, l(1)
      ieq r5.w, r5.w, r7.x
      nop 
      imul null, r6.y, r6.w, l(8)
      mov r11.xyz, x0[r6.y + 0].xyzx  // r11.x <- sph.mtl.surface_color.x; r11.y <- sph.mtl.surface_color.y; r11.z <- sph.mtl.surface_color.z

#line 87
      mov r11.xyz, r11.xyzx  // r11.x <- <sphereGetSurfaceColor return value>.x; r11.y <- <sphereGetSurfaceColor return value>.y; r11.z <- <sphereGetSurfaceColor return value>.z

#line 311
      nop 
      imul null, r6.y, r6.w, l(9)
      mov r12.xyz, x1[r6.y + 0].xyzx  // r12.x <- pln.mtl.surface_color.x; r12.y <- pln.mtl.surface_color.y; r12.z <- pln.mtl.surface_color.z

#line 149
      mov r12.xyz, r12.xyzx  // r12.x <- <planeGetSurfaceColor return value>.x; r12.y <- <planeGetSurfaceColor return value>.y; r12.z <- <planeGetSurfaceColor return value>.z

#line 311
      movc r11.xyz, r5.wwww, r11.xyzx, r12.xyzx  // r11.x <- chit.x; r11.y <- chit.y; r11.z <- chit.z
      mul r5.xyz, r5.xyzx, r11.xyzx
      mov r5.w, l(1)
      ieq r5.w, r5.w, r7.x
      nop 
      imul null, r6.y, r6.w, l(8)
      mov r11.xyz, x0[r6.y + 5].xyzx  // r11.x <- sph.center.x; r11.y <- sph.center.y; r11.z <- sph.center.z
      mov r10.xyz, r10.xyzx  // r10.x <- p.x; r10.y <- p.y; r10.z <- p.z

#line 82
      mov r11.xyz, -r11.xyzx
      add r11.xyz, r10.xyzx, r11.xyzx  // r11.x <- <sphereGetNormal return value>.x; r11.y <- <sphereGetNormal return value>.y; r11.z <- <sphereGetNormal return value>.z

#line 314
      nop 
      imul null, r6.y, r6.w, l(9)
      mov r6.yzw, x1[r6.y + 5].xxyz  // r6.y <- pln.normal.x; r6.z <- pln.normal.y; r6.w <- pln.normal.z

#line 144
      mov r6.yzw, r6.yyzw  // r6.y <- <planeGetNormal return value>.x; r6.z <- <planeGetNormal return value>.y; r6.w <- <planeGetNormal return value>.z

#line 314
      movc r6.yzw, r5.wwww, r11.xxyz, r6.yyzw  // r6.y <- nhit.x; r6.z <- nhit.y; r6.w <- nhit.z

#line 317
      dp3 r5.w, r3.xyzx, r6.yzwy
      itof r7.x, l(0)
      lt r5.w, r7.x, r5.w  // r5.w <- inside
      if_nz r5.w
        mov r6.yzw, -r6.yyzw
      endif 

#line 320
      mov r7.x, l(1)
      ieq r7.x, r7.x, r10.w
      if_nz r7.x
        mul r11.xyz, r1.yyyy, r6.yzwy
        add r2.xyz, r10.xyzx, r11.xyzx
        nop 
        mov r11.xyz, r6.yzwy  // r11.x <- n.x; r11.y <- n.y; r11.z <- n.z
        mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y
        mov r1.z, r1.z  // r1.z <- c

#line 209
        nop 
        itof r9.zw, r1.zzzz
        mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
        dp2 r9.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
        sincos r9.z, null, r9.z
        mul r9.z, r9.z, l(43758.546875)
        frc r9.z, r9.z  // r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>

#line 209
        mul r9.z, r9.z, l(6.283185)  // r9.z <- r1
        iadd r9.w, r1.z, l(1)  // r9.w <- c
        nop 
        itof r12.xy, r9.wwww
        mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
        dp2 r11.w, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
        sincos r11.w, null, r11.w
        mul r11.w, r11.w, l(43758.546875)
        frc r11.w, r11.w  // r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>

#line 210
        mov r11.w, r11.w  // r11.w <- r2
        iadd r1.z, r9.w, l(1)  // r1.z <- c
        sqrt r9.w, r11.w  // r9.w <- r2s
        mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
        mov r12.x, -r11.x
        max r12.x, r11.x, r12.x
        lt r12.x, l(0.100000), r12.x
        itof r12.yzw, l(0, 0, 0, 1)
        itof r13.xyz, l(0, 1, 0, 0)
        movc r12.xyz, r12.xxxx, r12.yzwy, r13.xyzx
        mul r13.xyz, r11.zxyz, r12.zxyz
        mul r12.xyz, r11.yzxy, r12.xyzx
        mov r12.xyz, -r12.xyzx
        add r12.xyz, r12.xyzx, r13.xyzx
        dp3 r12.w, r12.xyzx, r12.xyzx
        rsq r12.w, r12.w
        mul r12.xyz, r12.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
        mul r13.xyz, r11.yzxy, r12.zxyz
        mul r14.xyz, r11.zxyz, r12.yzxy
        mov r14.xyz, -r14.xyzx
        add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
        sincos null, r12.w, r9.z
        mul r12.xyz, r12.wwww, r12.xyzx
        mul r12.xyz, r9.wwww, r12.xyzx
        sincos r9.z, null, r9.z
        mul r13.xyz, r9.zzzz, r13.xyzx
        mul r13.xyz, r9.wwww, r13.xyzx
        add r12.xyz, r12.xyzx, r13.xyzx
        itof r9.z, l(1)
        mov r9.w, -r11.w
        add r9.z, r9.w, r9.z
        sqrt r9.z, r9.z
        mul r11.xyz, r9.zzzz, r11.xyzx
        add r11.xyz, r11.xyzx, r12.xyzx
        dp3 r9.z, r11.xyzx, r11.xyzx
        rsq r9.z, r9.z
        mul r3.xyz, r9.zzzz, r11.xyzx  // r3.x <- <randomHemisphereDirection return value>.x; r3.y <- <randomHemisphereDirection return value>.y; r3.z <- <randomHemisphereDirection return value>.z

#line 323
        mov r1.z, r1.z  // r1.z <- rand_counter
        mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
      endif 
      if_z r7.x
        mov r7.x, l(2)
        ieq r7.x, r7.x, r10.w
        if_nz r7.x
          mul r11.xyz, r1.yyyy, r6.yzwy
          add r2.xyz, r10.xyzx, r11.xyzx
          dp3 r9.z, r3.xyzx, r6.yzwy
          add r9.z, r9.z, r9.z
          mov r9.z, -r9.z
          mul r11.xyz, r6.yzwy, r9.zzzz
          add r11.xyz, r3.xyzx, r11.xyzx
          dp3 r9.z, r11.xyzx, r11.xyzx
          rsq r9.z, r9.z
          mul r3.xyz, r9.zzzz, r11.xyzx
        endif 

#line 334
        if_z r7.x
          mov r7.x, l(3)
          ieq r7.x, r7.x, r10.w
          if_nz r7.x
            mul r11.xyz, r1.yyyy, r6.yzwy
            add r2.xyz, r10.xyzx, r11.xyzx
            nop 
            dp3 r9.z, r3.xyzx, r6.yzwy
            add r9.z, r9.z, r9.z
            mov r9.z, -r9.z
            mul r11.xyz, r6.yzwy, r9.zzzz
            add r11.xyz, r3.xyzx, r11.xyzx
            dp3 r9.z, r11.xyzx, r11.xyzx
            rsq r9.z, r9.z
            mul r11.xyz, r9.zzzz, r11.xyzx  // r11.x <- r.x; r11.y <- r.y; r11.z <- r.z; r11.x <- r.x; r11.y <- r.y; r11.z <- r.z
            mov r7.z, r7.z  // r7.z <- theta; r7.z <- theta
            mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
            mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
            nop 
            itof r9.zw, r1.zzzz
            mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
            dp2 r9.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
            sincos r9.z, null, r9.z
            mul r9.z, r9.z, l(43758.546875)
            frc r9.z, r9.z  // r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>

#line 222
            mul r9.z, r9.z, l(6.283185)  // r9.z <- r1; r9.z <- r1
            iadd r9.w, r1.z, l(1)  // r9.w <- c; r9.w <- c
            sincos r11.w, null, r7.z
            sincos r12.x, null, r7.z
            mul r11.w, r11.w, r12.x
            nop 
            itof r12.xy, r9.wwww
            mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
            dp2 r12.x, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
            sincos r12.x, null, r12.x
            mul r12.x, r12.x, l(43758.546875)
            frc r12.x, r12.x  // r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>

#line 223
            mul r11.w, r11.w, r12.x  // r11.w <- r2; r11.w <- r2
            iadd r1.z, r9.w, l(1)  // r1.z <- c; r1.z <- c
            sqrt r9.w, r11.w  // v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; v1.x <- input.Tex.x; v1.y <- input.Tex.y; o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w; r9.w <- r2s; r9.w <- r2s
            mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z; r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
            mov r12.x, -r11.x  // r0.y <- bg_color.x; r0.z <- bg_color.y; r0.w <- bg_color.z
            max r12.x, r11.x, r12.x  // r1.x <- cutoff
            lt r12.x, l(0.100000), r12.x  // r1.y <- bias
            itof r12.yzw, l(0, 0, 0, 1)
            itof r13.xyz, l(0, 1, 0, 0)
            movc r12.xyz, r12.xxxx, r12.yzwy, r13.xyzx
            mul r13.xyz, r11.zxyz, r12.zxyz
            mul r12.xyz, r11.yzxy, r12.xyzx
            mov r12.xyz, -r12.xyzx
            add r12.xyz, r12.xyzx, r13.xyzx
            dp3 r12.w, r12.xyzx, r12.xyzx
            rsq r12.w, r12.w
            mul r12.xyz, r12.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z; r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
            mul r13.xyz, r11.yzxy, r12.zxyz
            mul r14.xyz, r11.zxyz, r12.yzxy
            mov r14.xyz, -r14.xyzx
            add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z; r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
            sincos null, r12.w, r9.z
            mul r12.xyz, r12.wwww, r12.xyzx
            mul r12.xyz, r9.wwww, r12.xyzx
            sincos r9.z, null, r9.z
            mul r13.xyz, r9.zzzz, r13.xyzx
            mul r13.xyz, r9.wwww, r13.xyzx
            add r12.xyz, r12.xyzx, r13.xyzx
            itof r9.z, l(1)
            mov r9.w, -r11.w
            add r9.z, r9.w, r9.z
            sqrt r9.z, r9.z
            mul r11.xyz, r9.zzzz, r11.xyzx
            add r11.xyz, r11.xyzx, r12.xyzx
            dp3 r9.z, r11.xyzx, r11.xyzx
            rsq r9.z, r9.z
            mul r3.xyz, r9.zzzz, r11.xyzx  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 337
            mov r1.z, r1.z  // r1.z <- rand_counter
            mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
          endif 
          if_z r7.x
            mov r7.x, l(5)
            ieq r7.x, r7.x, r10.w
            if_nz r7.x
              itof r9.z, l(1)  // r1.w <- SPHERES_NUM
              div r9.z, r9.z, r7.y
              movc r9.z, r5.w, r7.y, r9.z  // r9.z <- n
              mul r11.xyz, r1.yyyy, r6.yzwy
              mov r11.xyz, -r11.xyzx
              add r2.xyz, r10.xyzx, r11.xyzx
              dp3 r9.w, r3.xyzx, r6.yzwy
              mul r11.x, r9.w, r9.w
              mul r11.y, r9.z, r9.z
              mov r11.x, -r11.x
              add r11.x, r11.x, l(1.000000)
              mul r11.x, r11.x, r11.y
              mov r11.x, -r11.x
              add r11.x, r11.x, l(1.000000)
              sqrt r11.y, r11.x
              mul r9.w, r9.w, r9.z
              add r9.w, r11.y, r9.w
              ge r11.x, r11.x, l(0.000000)
              mul r11.yzw, r3.xxyz, r9.zzzz
              mul r12.xyz, r6.yzwy, r9.wwww
              mov r12.xyz, -r12.xyzx
              add r11.yzw, r11.yyzw, r12.xxyz
              movc r11.xyz, r11.xxxx, r11.yzwy, l(0,0,0,0)
              dp3 r9.z, r11.xyzx, r11.xyzx
              rsq r9.z, r9.z
              mul r3.xyz, r9.zzzz, r11.xyzx
            endif 

#line 349
            if_z r7.x
              mov r7.x, l(6)
              ieq r7.x, r7.x, r10.w
              if_nz r7.x
                itof r7.x, l(1)
                div r7.x, r7.x, r7.y
                movc r5.w, r5.w, r7.y, r7.x  // r5.w <- n
                mul r11.xyz, r1.yyyy, r6.yzwy
                mov r11.xyz, -r11.xyzx
                add r2.xyz, r10.xyzx, r11.xyzx
                nop 
                dp3 r7.x, r3.xyzx, r6.yzwy
                mul r7.y, r7.x, r7.x
                mul r9.z, r5.w, r5.w
                mov r7.y, -r7.y
                add r7.y, r7.y, l(1.000000)
                mul r7.y, r7.y, r9.z
                mov r7.y, -r7.y
                add r7.y, r7.y, l(1.000000)
                sqrt r9.z, r7.y
                mul r7.x, r5.w, r7.x
                add r7.x, r9.z, r7.x
                ge r7.y, r7.y, l(0.000000)
                mul r10.xyz, r3.xyzx, r5.wwww
                mul r6.yzw, r6.yyzw, r7.xxxx
                mov r6.yzw, -r6.yyzw
                add r6.yzw, r6.yyzw, r10.xxyz
                movc r6.yzw, r7.yyyy, r6.yyzw, l(0,0,0,0)
                dp3 r5.w, r6.yzwy, r6.yzwy
                rsq r5.w, r5.w
                mul r6.yzw, r5.wwww, r6.yyzw  // r6.y <- r.x; r6.z <- r.y; r6.w <- r.z; r6.y <- r.x; r6.z <- r.y; r6.w <- r.z
                mov r7.z, r7.z  // r7.z <- theta; r7.z <- theta
                mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
                mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
                nop 
                itof r7.xy, r1.zzzz
                mul r7.xy, r4.xyxx, r7.xyxx  // r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y

#line 203
                dp2 r5.w, r7.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                sincos r5.w, null, r5.w
                mul r5.w, r5.w, l(43758.546875)
                frc r5.w, r5.w  // r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>

#line 222
                mul r5.w, r5.w, l(6.283185)  // r5.w <- r1; r5.w <- r1
                iadd r7.x, r1.z, l(1)  // r7.x <- c; r7.x <- c
                sincos r7.y, null, r7.z
                sincos r7.z, null, r7.z
                mul r7.y, r7.z, r7.y
                nop 
                itof r9.zw, r7.xxxx
                mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
                dp2 r7.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                sincos r7.z, null, r7.z
                mul r7.z, r7.z, l(43758.546875)
                frc r7.z, r7.z  // r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>

#line 223
                mul r7.y, r7.z, r7.y  // r7.y <- r2; r7.y <- r2
                iadd r1.z, r7.x, l(1)  // r1.z <- c; r1.z <- c
                sqrt r7.x, r7.y  // r7.x <- r2s; r7.x <- r2s
                mov r6.yzw, r6.yyzw  // r6.y <- w.x; r6.z <- w.y; r6.w <- w.z; r6.y <- w.x; r6.z <- w.y; r6.w <- w.z
                mov r7.z, -r6.y
                max r7.z, r6.y, r7.z
                lt r7.z, l(0.100000), r7.z
                itof r10.xyz, l(0, 0, 1, 0)
                itof r11.xyz, l(0, 1, 0, 0)
                movc r10.xyz, r7.zzzz, r10.xyzx, r11.xyzx
                mul r11.xyz, r6.wyzw, r10.zxyz
                mul r10.xyz, r6.zwyz, r10.xyzx
                mov r10.xyz, -r10.xyzx
                add r10.xyz, r10.xyzx, r11.xyzx
                dp3 r7.z, r10.xyzx, r10.xyzx
                rsq r7.z, r7.z
                mul r10.xyz, r7.zzzz, r10.xyzx  // r10.x <- u.x; r10.y <- u.y; r10.z <- u.z; r10.x <- u.x; r10.y <- u.y; r10.z <- u.z
                mul r11.xyz, r6.zwyz, r10.zxyz
                mul r12.xyz, r6.wyzw, r10.yzxy
                mov r12.xyz, -r12.xyzx
                add r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- v.x; r11.y <- v.y; r11.z <- v.z; r11.x <- v.x; r11.y <- v.y; r11.z <- v.z
                sincos null, r7.z, r5.w
                mul r10.xyz, r7.zzzz, r10.xyzx
                mul r10.xyz, r7.xxxx, r10.xyzx
                sincos r5.w, null, r5.w
                mul r11.xyz, r5.wwww, r11.xyzx
                mul r11.xyz, r7.xxxx, r11.xyzx
                add r10.xyz, r10.xyzx, r11.xyzx
                itof r5.w, l(1)
                mov r7.x, -r7.y
                add r5.w, r5.w, r7.x
                sqrt r5.w, r5.w
                mul r6.yzw, r5.wwww, r6.yyzw
                add r6.yzw, r6.yyzw, r10.xxyz
                dp3 r5.w, r6.yzwy, r6.yzwy
                rsq r5.w, r5.w
                mul r3.xyz, r5.wwww, r6.yzwy  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 353
                mov r1.z, r1.z  // r1.z <- rand_counter
                mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
              endif 
            endif 
          endif 
        endif 
      endif 
    endif 
    or r5.w, r8.w, r6.x
  else   // Prior locations: r5.w <- nearest_dist; r6.w <- nearest_index; r7.x <- nearest_type; r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r7.y <- nearest_mtl.ior; r7.z <- nearest_mtl.gloss_angle; r11.x <- j
    mov r5.w, l(-1)
  endif 
  and r5.w, r4.w, r5.w
  or r5.w, r9.y, r5.w
  and r4.w, r4.w, r7.w
  or r3.w, r9.x, r4.w
else 
  mov r5.w, l(-1)
endif 

#line 260
not r4.w, r5.w
not r5.w, r3.w
and r4.w, r4.w, r5.w  // r2.w <- PLANES_NUM
and r4.z, r4.w, r4.z
max r4.w, r5.y, r5.x
max r4.w, r5.z, r4.w
lt r4.w, r1.x, r4.w
and r4.z, r4.w, r4.z
if_nz r4.z

#line 263
  mov r4.w, l(0)  // r4.w <- nearest_index
  mov r5.w, l(0)  // r5.w <- nearest_type
  itof r6.xyzw, l(0, 0, 0, 0)  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r6.w <- nearest_mtl.ior
  itof r7.x, l(0)  // r7.x <- nearest_mtl.gloss_angle
  mov r7.y, l(0)  // r7.y <- nearest_mtl.surface_type

#line 268
  mov r7.z, l(0)  // r7.z <- i
  mov r9.xyz, r6.xyzx  // r9.x <- nearest_mtl.emissive_color.x; r9.y <- nearest_mtl.emissive_color.y; r9.z <- nearest_mtl.emissive_color.z
  mov r7.w, r0.x  // r7.w <- nearest_dist
  mov r8.w, r4.w  // r8.w <- nearest_index
  mov r9.w, r5.w  // r9.w <- nearest_type
  mov r10.x, r6.w  // r10.x <- nearest_mtl.ior
  mov r10.y, r7.x  // r10.y <- nearest_mtl.gloss_angle
  mov r10.z, r7.y  // r10.z <- nearest_mtl.surface_type
  mov r10.w, r7.z  // r10.w <- i
  loop 
    ult r11.x, r10.w, r1.w
    breakc_z r11.x
    nop 
    imul null, r11.x, r10.w, l(8)
    mov r11.yzw, x0[r11.x + 5].xxyz
    mov r11.x, x0[r11.x + 7].x
    mov r11.yzw, r11.yyzw  // r11.y <- sph.center.x; r11.z <- sph.center.y; r11.w <- sph.center.z
    mov r11.x, r11.x  // r11.x <- sph.radiusSq
    mov r12.xyz, r2.xyzx  // r12.x <- rayorig.x; r12.y <- rayorig.y; r12.z <- rayorig.z
    mov r13.xyz, r3.xyzx  // r13.x <- raydir.x; r13.y <- raydir.y; r13.z <- raydir.z

#line 92
    mov r12.xyz, -r12.xyzx
    add r11.yzw, r11.yyzw, r12.xxyz  // r11.y <- l.x; r11.z <- l.y; r11.w <- l.z

#line 95
    dp3 r12.x, r11.yzwy, r13.xyzx  // r12.x <- tca
    itof r12.y, l(0)
    lt r12.y, r12.x, r12.y
    if_nz r12.y
      nop 
      mov r12.z, l(0)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
      itof r12.w, l(0)  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
      mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
      mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
      mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
      mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 98
      mov r12.zw, r12.zzzw  // r12.z <- <sphereGetIntersect return value>.intersection; r12.w <- <sphereGetIntersect return value>.dist
    endif 

#line 102
    if_z r12.y
      dp3 r11.y, r11.yzwy, r11.yzwy
      mul r11.z, r12.x, r12.x
      mov r11.z, -r11.z
      add r11.y, r11.z, r11.y  // r11.y <- d2
      lt r11.z, r11.x, r11.y
      if_nz r11.z
        nop 
        mov r12.z, l(0)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
        itof r12.w, l(0)  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
        mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
        mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
        mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
        mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 105
        mov r12.zw, r12.zzzw
      endif 

#line 109
      if_z r11.z
        mov r11.y, -r11.y
        add r11.x, r11.y, r11.x
        sqrt r11.x, r11.x  // r11.x <- thc
        mov r11.y, -r11.x
        add r12.w, r11.y, r12.x  // r12.w <- d
        itof r11.y, l(0)
        lt r11.y, r12.w, r11.y
        if_nz r11.y
          add r12.w, r11.x, r12.x
        endif 
        nop 
        mov r12.z, l(-1)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
        mov r12.w, r12.w  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
        mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
        mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
        mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
        mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 116
        mov r12.zw, r12.zzzw  // r12.w <- <sphereGetIntersect return value>.dist
      endif 
    endif 

#line 270
    mov r12.w, r12.w  // r12.w <- curIntersect.dist
    if_nz r12.z
      lt r11.x, r12.w, r7.w
      if_nz r11.x
        mov r7.w, r12.w
        mov r8.w, r10.w
        mov r9.w, l(1)
        imul null, r11.x, r10.w, l(8)
        mov r9.xyz, x0[r11.x + 1].xyzx
        mov r10.x, x0[r11.x + 2].x
        mov r10.y, x0[r11.x + 3].x
        mov r10.z, x0[r11.x + 4].x
      endif 
    endif 

#line 281
    iadd r10.w, r10.w, l(1)
  endloop 
  mov r4.w, l(0)  // r4.w <- j
  mov r6.xyz, r9.xyzx  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z
  mov r5.w, r7.w  // r5.w <- nearest_dist
  mov r6.w, r8.w  // r6.w <- nearest_index
  mov r7.x, r9.w  // r7.x <- nearest_type
  mov r7.y, r10.x  // r7.y <- nearest_mtl.ior
  mov r7.z, r10.y  // r7.z <- nearest_mtl.gloss_angle
  mov r10.w, r10.z  // r10.w <- nearest_mtl.surface_type
  mov r11.x, r4.w  // r11.x <- j
  loop 
    ult r11.y, r11.x, r2.w
    breakc_z r11.y
    nop 
    imul null, r11.y, r11.x, l(9)
    mov r12.xyz, x1[r11.y + 5].xyzx
    mov r11.yzw, x1[r11.y + 6].xxyz
    mov r12.xyz, r12.xyzx  // r12.x <- pln.normal.x; r12.y <- pln.normal.y; r12.z <- pln.normal.z
    mov r11.yzw, r11.yyzw  // r11.y <- pln.pnt.x; r11.z <- pln.pnt.y; r11.w <- pln.pnt.z
    mov r13.xyz, r2.xyzx  // r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
    mov r14.xyz, r3.xyzx  // r14.x <- raydir.x; r14.y <- raydir.y; r14.z <- raydir.z

#line 154
    dp3 r12.w, r12.xyzx, r14.xyzx  // r12.w <- denom
    lt r13.w, l(0.000001), r12.w
    if_nz r13.w
      mov r13.xyz, -r13.xyzx
      add r11.yzw, r11.yyzw, r13.xxyz  // r11.y <- origintopoint.x; r11.z <- origintopoint.y; r11.w <- origintopoint.z
      dp3 r11.y, r11.yzwy, r12.xyzx
      div r12.y, r11.y, r12.w  // r12.y <- d
      itof r11.y, l(0)
      ge r11.y, r12.y, r11.y
      if_nz r11.y
        nop 
        mov r12.x, l(-1)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
        mov r12.y, r12.y  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
        mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
        mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
        mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
        mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 159
        mov r12.xy, r12.xyxx  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
      endif 
    else   // Prior locations: r12.x <- pln.normal.x; r12.y <- pln.normal.y; r11.y <- pln.pnt.x; r11.z <- pln.pnt.y; r11.w <- pln.pnt.z; r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
      mov r11.y, l(0)
    endif 
    if_z r11.y  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
      nop 
      mov r12.x, l(0)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
      itof r12.y, l(0)  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
      mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
      mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
      mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
      mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 162
      mov r12.xy, r12.xyxx
    endif 

#line 284
    mov r12.y, r12.y  // r12.y <- curIntersect.dist
    if_nz r12.x
      lt r11.y, r12.y, r5.w
      if_nz r11.y
        mov r5.w, r12.y
        mov r6.w, r11.x
        mov r7.x, l(2)
        imul null, r11.y, r11.x, l(9)
        mov r6.xyz, x1[r11.y + 1].xyzx
        mov r7.y, x1[r11.y + 2].x
        mov r7.z, x1[r11.y + 3].x
        mov r10.w, x1[r11.y + 4].x
      endif 
    endif 

#line 295
    iadd r11.x, r11.x, l(1)
  endloop 

#line 298
  mov r4.w, l(0)
  ieq r9.xy, r4.wwww, r7.xxxx
  if_z r7.x
    mov r8.xyz, r0.yzwy
  endif 
  not r4.w, r9.y
  not r7.w, r9.x
  and r4.w, r4.w, r7.w
  not r7.w, r4.w
  if_nz r4.w
    mov r8.w, l(4)
    ieq r8.w, r8.w, r10.w
    if_nz r8.w
      mul r5.xyz, r5.xyzx, r6.xyzx
    endif 

#line 310
    not r6.x, r8.w
    not r6.x, r6.x
    if_z r8.w
      mul r10.xyz, r3.xyzx, r5.wwww
      add r10.xyz, r2.xyzx, r10.xyzx  // r10.x <- phit.x; r10.y <- phit.y; r10.z <- phit.z
      mov r5.w, l(1)
      ieq r5.w, r5.w, r7.x
      nop 
      imul null, r6.y, r6.w, l(8)
      mov r11.xyz, x0[r6.y + 0].xyzx  // r11.x <- sph.mtl.surface_color.x; r11.y <- sph.mtl.surface_color.y; r11.z <- sph.mtl.surface_color.z

#line 87
      mov r11.xyz, r11.xyzx  // r11.x <- <sphereGetSurfaceColor return value>.x; r11.y <- <sphereGetSurfaceColor return value>.y; r11.z <- <sphereGetSurfaceColor return value>.z

#line 311
      nop 
      imul null, r6.y, r6.w, l(9)
      mov r12.xyz, x1[r6.y + 0].xyzx  // r12.x <- pln.mtl.surface_color.x; r12.y <- pln.mtl.surface_color.y; r12.z <- pln.mtl.surface_color.z

#line 149
      mov r12.xyz, r12.xyzx  // r12.x <- <planeGetSurfaceColor return value>.x; r12.y <- <planeGetSurfaceColor return value>.y; r12.z <- <planeGetSurfaceColor return value>.z

#line 311
      movc r11.xyz, r5.wwww, r11.xyzx, r12.xyzx  // r11.x <- chit.x; r11.y <- chit.y; r11.z <- chit.z
      mul r5.xyz, r5.xyzx, r11.xyzx
      mov r5.w, l(1)
      ieq r5.w, r5.w, r7.x
      nop 
      imul null, r6.y, r6.w, l(8)
      mov r11.xyz, x0[r6.y + 5].xyzx  // r11.x <- sph.center.x; r11.y <- sph.center.y; r11.z <- sph.center.z
      mov r10.xyz, r10.xyzx  // r10.x <- p.x; r10.y <- p.y; r10.z <- p.z

#line 82
      mov r11.xyz, -r11.xyzx
      add r11.xyz, r10.xyzx, r11.xyzx  // r11.x <- <sphereGetNormal return value>.x; r11.y <- <sphereGetNormal return value>.y; r11.z <- <sphereGetNormal return value>.z

#line 314
      nop 
      imul null, r6.y, r6.w, l(9)
      mov r6.yzw, x1[r6.y + 5].xxyz  // r6.y <- pln.normal.x; r6.z <- pln.normal.y; r6.w <- pln.normal.z

#line 144
      mov r6.yzw, r6.yyzw  // r6.y <- <planeGetNormal return value>.x; r6.z <- <planeGetNormal return value>.y; r6.w <- <planeGetNormal return value>.z

#line 314
      movc r6.yzw, r5.wwww, r11.xxyz, r6.yyzw  // r6.y <- nhit.x; r6.z <- nhit.y; r6.w <- nhit.z

#line 317
      dp3 r5.w, r3.xyzx, r6.yzwy
      itof r7.x, l(0)
      lt r5.w, r7.x, r5.w  // r5.w <- inside
      if_nz r5.w
        mov r6.yzw, -r6.yyzw
      endif 

#line 320
      mov r7.x, l(1)
      ieq r7.x, r7.x, r10.w
      if_nz r7.x
        mul r11.xyz, r1.yyyy, r6.yzwy
        add r2.xyz, r10.xyzx, r11.xyzx
        nop 
        mov r11.xyz, r6.yzwy  // r11.x <- n.x; r11.y <- n.y; r11.z <- n.z
        mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y
        mov r1.z, r1.z  // r1.z <- c

#line 209
        nop 
        itof r9.zw, r1.zzzz
        mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
        dp2 r9.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
        sincos r9.z, null, r9.z
        mul r9.z, r9.z, l(43758.546875)
        frc r9.z, r9.z  // r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>

#line 209
        mul r9.z, r9.z, l(6.283185)  // r9.z <- r1
        iadd r9.w, r1.z, l(1)  // r9.w <- c
        nop 
        itof r12.xy, r9.wwww
        mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
        dp2 r11.w, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
        sincos r11.w, null, r11.w
        mul r11.w, r11.w, l(43758.546875)
        frc r11.w, r11.w  // r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>

#line 210
        mov r11.w, r11.w  // r11.w <- r2
        iadd r1.z, r9.w, l(1)  // r1.z <- c
        sqrt r9.w, r11.w  // r9.w <- r2s
        mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
        mov r12.x, -r11.x
        max r12.x, r11.x, r12.x
        lt r12.x, l(0.100000), r12.x
        itof r12.yzw, l(0, 0, 0, 1)
        itof r13.xyz, l(0, 1, 0, 0)
        movc r12.xyz, r12.xxxx, r12.yzwy, r13.xyzx
        mul r13.xyz, r11.zxyz, r12.zxyz
        mul r12.xyz, r11.yzxy, r12.xyzx
        mov r12.xyz, -r12.xyzx
        add r12.xyz, r12.xyzx, r13.xyzx
        dp3 r12.w, r12.xyzx, r12.xyzx
        rsq r12.w, r12.w
        mul r12.xyz, r12.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
        mul r13.xyz, r11.yzxy, r12.zxyz
        mul r14.xyz, r11.zxyz, r12.yzxy
        mov r14.xyz, -r14.xyzx
        add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
        sincos null, r12.w, r9.z
        mul r12.xyz, r12.wwww, r12.xyzx
        mul r12.xyz, r9.wwww, r12.xyzx
        sincos r9.z, null, r9.z
        mul r13.xyz, r9.zzzz, r13.xyzx
        mul r13.xyz, r9.wwww, r13.xyzx
        add r12.xyz, r12.xyzx, r13.xyzx
        itof r9.z, l(1)
        mov r9.w, -r11.w
        add r9.z, r9.w, r9.z
        sqrt r9.z, r9.z
        mul r11.xyz, r9.zzzz, r11.xyzx
        add r11.xyz, r11.xyzx, r12.xyzx
        dp3 r9.z, r11.xyzx, r11.xyzx
        rsq r9.z, r9.z
        mul r3.xyz, r9.zzzz, r11.xyzx  // r3.x <- <randomHemisphereDirection return value>.x; r3.y <- <randomHemisphereDirection return value>.y; r3.z <- <randomHemisphereDirection return value>.z

#line 323
        mov r1.z, r1.z  // r1.z <- rand_counter
        mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
      endif 
      if_z r7.x
        mov r7.x, l(2)
        ieq r7.x, r7.x, r10.w
        if_nz r7.x
          mul r11.xyz, r1.yyyy, r6.yzwy
          add r2.xyz, r10.xyzx, r11.xyzx
          dp3 r9.z, r3.xyzx, r6.yzwy
          add r9.z, r9.z, r9.z
          mov r9.z, -r9.z
          mul r11.xyz, r6.yzwy, r9.zzzz
          add r11.xyz, r3.xyzx, r11.xyzx
          dp3 r9.z, r11.xyzx, r11.xyzx
          rsq r9.z, r9.z
          mul r3.xyz, r9.zzzz, r11.xyzx
        endif 

#line 334
        if_z r7.x
          mov r7.x, l(3)
          ieq r7.x, r7.x, r10.w
          if_nz r7.x
            mul r11.xyz, r1.yyyy, r6.yzwy
            add r2.xyz, r10.xyzx, r11.xyzx
            nop 
            dp3 r9.z, r3.xyzx, r6.yzwy
            add r9.z, r9.z, r9.z
            mov r9.z, -r9.z
            mul r11.xyz, r6.yzwy, r9.zzzz
            add r11.xyz, r3.xyzx, r11.xyzx
            dp3 r9.z, r11.xyzx, r11.xyzx
            rsq r9.z, r9.z
            mul r11.xyz, r9.zzzz, r11.xyzx  // r11.x <- r.x; r11.y <- r.y; r11.z <- r.z; r11.x <- r.x; r11.y <- r.y; r11.z <- r.z
            mov r7.z, r7.z  // r7.z <- theta; r7.z <- theta
            mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
            mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
            nop 
            itof r9.zw, r1.zzzz
            mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
            dp2 r9.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
            sincos r9.z, null, r9.z
            mul r9.z, r9.z, l(43758.546875)
            frc r9.z, r9.z  // r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>

#line 222
            mul r9.z, r9.z, l(6.283185)  // r9.z <- r1; r9.z <- r1
            iadd r9.w, r1.z, l(1)  // r9.w <- c; r9.w <- c
            sincos r11.w, null, r7.z
            sincos r12.x, null, r7.z
            mul r11.w, r11.w, r12.x
            nop 
            itof r12.xy, r9.wwww
            mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
            dp2 r12.x, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
            sincos r12.x, null, r12.x
            mul r12.x, r12.x, l(43758.546875)
            frc r12.x, r12.x  // r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>

#line 223
            mul r11.w, r11.w, r12.x  // r11.w <- r2; r11.w <- r2
            iadd r1.z, r9.w, l(1)  // r1.z <- c; r1.z <- c
            sqrt r9.w, r11.w  // r9.w <- r2s; r9.w <- r2s
            mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z; r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
            mov r12.x, -r11.x
            max r12.x, r11.x, r12.x
            lt r12.x, l(0.100000), r12.x
            itof r12.yzw, l(0, 0, 0, 1)
            itof r13.xyz, l(0, 1, 0, 0)  // r2.x <- rayorig.x; r2.y <- rayorig.y; r2.z <- rayorig.z; r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z; r1.w <- SPHERES_NUM; r2.w <- PLANES_NUM; r0.y <- bg_color.x; r0.z <- bg_color.y; r0.w <- bg_color.z; r1.y <- bias; r1.x <- cutoff
            movc r12.xyz, r12.xxxx, r12.yzwy, r13.xyzx  // r5.x <- ray_color.x; r5.y <- ray_color.y; r5.z <- ray_color.z
            mul r13.xyz, r11.zxyz, r12.zxyz
            mul r12.xyz, r11.yzxy, r12.xyzx
            mov r12.xyz, -r12.xyzx
            add r12.xyz, r12.xyzx, r13.xyzx
            dp3 r12.w, r12.xyzx, r12.xyzx
            rsq r12.w, r12.w
            mul r12.xyz, r12.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z; r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
            mul r13.xyz, r11.yzxy, r12.zxyz
            mul r14.xyz, r11.zxyz, r12.yzxy
            mov r14.xyz, -r14.xyzx
            add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z; r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
            sincos null, r12.w, r9.z
            mul r12.xyz, r12.wwww, r12.xyzx
            mul r12.xyz, r9.wwww, r12.xyzx
            sincos r9.z, null, r9.z
            mul r13.xyz, r9.zzzz, r13.xyzx
            mul r13.xyz, r9.wwww, r13.xyzx
            add r12.xyz, r12.xyzx, r13.xyzx
            itof r9.z, l(1)
            mov r9.w, -r11.w
            add r9.z, r9.w, r9.z
            sqrt r9.z, r9.z
            mul r11.xyz, r9.zzzz, r11.xyzx
            add r11.xyz, r11.xyzx, r12.xyzx
            dp3 r9.z, r11.xyzx, r11.xyzx
            rsq r9.z, r9.z
            mul r3.xyz, r9.zzzz, r11.xyzx  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 337
            mov r1.z, r1.z  // r1.z <- rand_counter
            mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
          endif 
          if_z r7.x
            mov r7.x, l(5)
            ieq r7.x, r7.x, r10.w
            if_nz r7.x
              itof r9.z, l(1)
              div r9.z, r9.z, r7.y
              movc r9.z, r5.w, r7.y, r9.z  // r9.z <- n
              mul r11.xyz, r1.yyyy, r6.yzwy
              mov r11.xyz, -r11.xyzx
              add r2.xyz, r10.xyzx, r11.xyzx
              dp3 r9.w, r3.xyzx, r6.yzwy
              mul r11.x, r9.w, r9.w
              mul r11.y, r9.z, r9.z
              mov r11.x, -r11.x
              add r11.x, r11.x, l(1.000000)
              mul r11.x, r11.x, r11.y
              mov r11.x, -r11.x
              add r11.x, r11.x, l(1.000000)
              sqrt r11.y, r11.x
              mul r9.w, r9.w, r9.z
              add r9.w, r11.y, r9.w
              ge r11.x, r11.x, l(0.000000)
              mul r11.yzw, r3.xxyz, r9.zzzz
              mul r12.xyz, r6.yzwy, r9.wwww
              mov r12.xyz, -r12.xyzx
              add r11.yzw, r11.yyzw, r12.xxyz
              movc r11.xyz, r11.xxxx, r11.yzwy, l(0,0,0,0)
              dp3 r9.z, r11.xyzx, r11.xyzx
              rsq r9.z, r9.z
              mul r3.xyz, r9.zzzz, r11.xyzx
            endif 

#line 349
            if_z r7.x
              mov r7.x, l(6)
              ieq r7.x, r7.x, r10.w
              if_nz r7.x
                itof r7.x, l(1)
                div r7.x, r7.x, r7.y
                movc r5.w, r5.w, r7.y, r7.x  // r5.w <- n
                mul r11.xyz, r1.yyyy, r6.yzwy
                mov r11.xyz, -r11.xyzx
                add r2.xyz, r10.xyzx, r11.xyzx
                nop 
                dp3 r7.x, r3.xyzx, r6.yzwy
                mul r7.y, r7.x, r7.x
                mul r9.z, r5.w, r5.w
                mov r7.y, -r7.y
                add r7.y, r7.y, l(1.000000)
                mul r7.y, r7.y, r9.z
                mov r7.y, -r7.y
                add r7.y, r7.y, l(1.000000)
                sqrt r9.z, r7.y
                mul r7.x, r5.w, r7.x
                add r7.x, r9.z, r7.x
                ge r7.y, r7.y, l(0.000000)
                mul r10.xyz, r3.xyzx, r5.wwww
                mul r6.yzw, r6.yyzw, r7.xxxx
                mov r6.yzw, -r6.yyzw
                add r6.yzw, r6.yyzw, r10.xxyz
                movc r6.yzw, r7.yyyy, r6.yyzw, l(0,0,0,0)
                dp3 r5.w, r6.yzwy, r6.yzwy
                rsq r5.w, r5.w
                mul r6.yzw, r5.wwww, r6.yyzw  // r6.y <- r.x; r6.z <- r.y; r6.w <- r.z; r6.y <- r.x; r6.z <- r.y; r6.w <- r.z
                mov r7.z, r7.z  // r7.z <- theta; r7.z <- theta
                mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
                mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
                nop 
                itof r7.xy, r1.zzzz
                mul r7.xy, r4.xyxx, r7.xyxx  // r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y

#line 203
                dp2 r5.w, r7.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                sincos r5.w, null, r5.w
                mul r5.w, r5.w, l(43758.546875)
                frc r5.w, r5.w  // r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>

#line 222
                mul r5.w, r5.w, l(6.283185)  // r5.w <- r1; r5.w <- r1
                iadd r7.x, r1.z, l(1)  // r7.x <- c; r7.x <- c
                sincos r7.y, null, r7.z
                sincos r7.z, null, r7.z
                mul r7.y, r7.z, r7.y
                nop 
                itof r9.zw, r7.xxxx
                mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
                dp2 r7.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                sincos r7.z, null, r7.z
                mul r7.z, r7.z, l(43758.546875)
                frc r7.z, r7.z  // r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>

#line 223
                mul r7.y, r7.z, r7.y  // r7.y <- r2; r7.y <- r2
                iadd r1.z, r7.x, l(1)  // r1.z <- c; r1.z <- c
                sqrt r7.x, r7.y  // r7.x <- r2s; r7.x <- r2s
                mov r6.yzw, r6.yyzw  // r6.y <- w.x; r6.z <- w.y; r6.w <- w.z; r6.y <- w.x; r6.z <- w.y; r6.w <- w.z
                mov r7.z, -r6.y
                max r7.z, r6.y, r7.z
                lt r7.z, l(0.100000), r7.z
                itof r10.xyz, l(0, 0, 1, 0)
                itof r11.xyz, l(0, 1, 0, 0)
                movc r10.xyz, r7.zzzz, r10.xyzx, r11.xyzx
                mul r11.xyz, r6.wyzw, r10.zxyz
                mul r10.xyz, r6.zwyz, r10.xyzx
                mov r10.xyz, -r10.xyzx
                add r10.xyz, r10.xyzx, r11.xyzx
                dp3 r7.z, r10.xyzx, r10.xyzx  // r8.x <- <trace return value>.x; r8.y <- <trace return value>.y; r8.z <- <trace return value>.z
                rsq r7.z, r7.z
                mul r10.xyz, r7.zzzz, r10.xyzx  // r10.x <- u.x; r10.y <- u.y; r10.z <- u.z; r10.x <- u.x; r10.y <- u.y; r10.z <- u.z
                mul r11.xyz, r6.zwyz, r10.zxyz
                mul r12.xyz, r6.wyzw, r10.yzxy
                mov r12.xyz, -r12.xyzx
                add r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- v.x; r11.y <- v.y; r11.z <- v.z; r11.x <- v.x; r11.y <- v.y; r11.z <- v.z
                sincos null, r7.z, r5.w
                mul r10.xyz, r7.zzzz, r10.xyzx
                mul r10.xyz, r7.xxxx, r10.xyzx
                sincos r5.w, null, r5.w
                mul r11.xyz, r5.wwww, r11.xyzx
                mul r11.xyz, r7.xxxx, r11.xyzx
                add r10.xyz, r10.xyzx, r11.xyzx
                itof r5.w, l(1)
                mov r7.x, -r7.y
                add r5.w, r5.w, r7.x
                sqrt r5.w, r5.w
                mul r6.yzw, r5.wwww, r6.yyzw
                add r6.yzw, r6.yyzw, r10.xxyz
                dp3 r5.w, r6.yzwy, r6.yzwy
                rsq r5.w, r5.w
                mul r3.xyz, r5.wwww, r6.yzwy  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 353
                mov r1.z, r1.z
                mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
              endif 
            endif 
          endif 
        endif 
      endif 
    endif 
    or r5.w, r8.w, r6.x
  else   // Prior locations: r5.w <- nearest_dist; r6.w <- nearest_index; r7.x <- nearest_type; r7.y <- nearest_mtl.ior; r7.z <- nearest_mtl.gloss_angle; r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r11.x <- j
    mov r5.w, l(-1)
  endif 
  and r5.w, r4.w, r5.w
  or r5.w, r9.y, r5.w
  and r4.w, r4.w, r7.w
  or r3.w, r9.x, r4.w
else 
  mov r5.w, l(-1)
endif 

#line 260
not r4.w, r5.w
not r5.w, r3.w
and r4.w, r4.w, r5.w
and r4.z, r4.w, r4.z
max r4.w, r5.y, r5.x
max r4.w, r5.z, r4.w
lt r4.w, r1.x, r4.w
and r4.z, r4.w, r4.z
if_nz r4.z

#line 263
  mov r4.w, l(0)  // r4.w <- nearest_index
  mov r5.w, l(0)  // r5.w <- nearest_type
  itof r6.xyzw, l(0, 0, 0, 0)  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r6.w <- nearest_mtl.ior
  itof r7.x, l(0)  // r7.x <- nearest_mtl.gloss_angle
  mov r7.y, l(0)  // r7.y <- nearest_mtl.surface_type

#line 268
  mov r7.z, l(0)  // r7.z <- i
  mov r9.xyz, r6.xyzx  // r9.x <- nearest_mtl.emissive_color.x; r9.y <- nearest_mtl.emissive_color.y; r9.z <- nearest_mtl.emissive_color.z
  mov r7.w, r0.x  // r7.w <- nearest_dist
  mov r8.w, r4.w  // r8.w <- nearest_index
  mov r9.w, r5.w  // r9.w <- nearest_type
  mov r10.x, r6.w  // r10.x <- nearest_mtl.ior
  mov r10.y, r7.x  // r10.y <- nearest_mtl.gloss_angle
  mov r10.z, r7.y  // r10.z <- nearest_mtl.surface_type
  mov r10.w, r7.z  // r10.w <- i
  loop 
    ult r11.x, r10.w, r1.w
    breakc_z r11.x
    nop 
    imul null, r11.x, r10.w, l(8)
    mov r11.yzw, x0[r11.x + 5].xxyz
    mov r11.x, x0[r11.x + 7].x
    mov r11.yzw, r11.yyzw  // r11.y <- sph.center.x; r11.z <- sph.center.y; r11.w <- sph.center.z
    mov r11.x, r11.x  // r11.x <- sph.radiusSq
    mov r12.xyz, r2.xyzx  // r12.x <- rayorig.x; r12.y <- rayorig.y; r12.z <- rayorig.z
    mov r13.xyz, r3.xyzx  // r13.x <- raydir.x; r13.y <- raydir.y; r13.z <- raydir.z

#line 92
    mov r12.xyz, -r12.xyzx
    add r11.yzw, r11.yyzw, r12.xxyz  // r11.y <- l.x; r11.z <- l.y; r11.w <- l.z

#line 95
    dp3 r12.x, r11.yzwy, r13.xyzx  // r12.x <- tca
    itof r12.y, l(0)
    lt r12.y, r12.x, r12.y
    if_nz r12.y
      nop 
      mov r12.z, l(0)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
      itof r12.w, l(0)  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
      mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
      mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
      mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
      mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 98
      mov r12.zw, r12.zzzw  // r12.z <- <sphereGetIntersect return value>.intersection; r12.w <- <sphereGetIntersect return value>.dist
    endif 

#line 102
    if_z r12.y
      dp3 r11.y, r11.yzwy, r11.yzwy
      mul r11.z, r12.x, r12.x
      mov r11.z, -r11.z
      add r11.y, r11.z, r11.y  // r11.y <- d2
      lt r11.z, r11.x, r11.y
      if_nz r11.z
        nop 
        mov r12.z, l(0)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
        itof r12.w, l(0)  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
        mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
        mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
        mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
        mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 105
        mov r12.zw, r12.zzzw
      endif 

#line 109
      if_z r11.z
        mov r11.y, -r11.y
        add r11.x, r11.y, r11.x
        sqrt r11.x, r11.x  // r11.x <- thc
        mov r11.y, -r11.x
        add r12.w, r11.y, r12.x  // r12.w <- d
        itof r11.y, l(0)
        lt r11.y, r12.w, r11.y
        if_nz r11.y
          add r12.w, r11.x, r12.x
        endif 
        nop 
        mov r12.z, l(-1)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
        mov r12.w, r12.w  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
        mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
        mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
        mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
        mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 116
        mov r12.zw, r12.zzzw  // r12.w <- <sphereGetIntersect return value>.dist
      endif 
    endif 

#line 270
    mov r12.w, r12.w  // r12.w <- curIntersect.dist
    if_nz r12.z
      lt r11.x, r12.w, r7.w
      if_nz r11.x
        mov r7.w, r12.w
        mov r8.w, r10.w
        mov r9.w, l(1)
        imul null, r11.x, r10.w, l(8)
        mov r9.xyz, x0[r11.x + 1].xyzx
        mov r10.x, x0[r11.x + 2].x
        mov r10.y, x0[r11.x + 3].x
        mov r10.z, x0[r11.x + 4].x
      endif 
    endif 

#line 281
    iadd r10.w, r10.w, l(1)
  endloop 
  mov r4.w, l(0)  // r4.w <- j
  mov r6.xyz, r9.xyzx  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z
  mov r5.w, r7.w  // r5.w <- nearest_dist
  mov r6.w, r8.w  // r6.w <- nearest_index
  mov r7.x, r9.w  // r7.x <- nearest_type
  mov r7.y, r10.x  // r7.y <- nearest_mtl.ior
  mov r7.z, r10.y  // r7.z <- nearest_mtl.gloss_angle
  mov r10.w, r10.z  // r10.w <- nearest_mtl.surface_type
  mov r11.x, r4.w  // r11.x <- j
  loop 
    ult r11.y, r11.x, r2.w
    breakc_z r11.y
    nop 
    imul null, r11.y, r11.x, l(9)
    mov r12.xyz, x1[r11.y + 5].xyzx
    mov r11.yzw, x1[r11.y + 6].xxyz
    mov r12.xyz, r12.xyzx  // r12.x <- pln.normal.x; r12.y <- pln.normal.y; r12.z <- pln.normal.z
    mov r11.yzw, r11.yyzw  // r11.y <- pln.pnt.x; r11.z <- pln.pnt.y; r11.w <- pln.pnt.z
    mov r13.xyz, r2.xyzx  // r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
    mov r14.xyz, r3.xyzx  // r14.x <- raydir.x; r14.y <- raydir.y; r14.z <- raydir.z

#line 154
    dp3 r12.w, r12.xyzx, r14.xyzx  // r12.w <- denom
    lt r13.w, l(0.000001), r12.w
    if_nz r13.w
      mov r13.xyz, -r13.xyzx
      add r11.yzw, r11.yyzw, r13.xxyz  // r11.y <- origintopoint.x; r11.z <- origintopoint.y; r11.w <- origintopoint.z
      dp3 r11.y, r11.yzwy, r12.xyzx
      div r12.y, r11.y, r12.w  // r12.y <- d
      itof r11.y, l(0)
      ge r11.y, r12.y, r11.y
      if_nz r11.y
        nop 
        mov r12.x, l(-1)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
        mov r12.y, r12.y  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
        mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
        mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
        mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
        mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 159
        mov r12.xy, r12.xyxx  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
      endif 
    else   // Prior locations: r12.x <- pln.normal.x; r12.y <- pln.normal.y; r11.y <- pln.pnt.x; r11.z <- pln.pnt.y; r11.w <- pln.pnt.z; r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
      mov r11.y, l(0)
    endif 
    if_z r11.y  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
      nop 
      mov r12.x, l(0)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
      itof r12.y, l(0)  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
      mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
      mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
      mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
      mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 162
      mov r12.xy, r12.xyxx
    endif 

#line 284
    mov r12.y, r12.y  // r12.y <- curIntersect.dist
    if_nz r12.x
      lt r11.y, r12.y, r5.w
      if_nz r11.y
        mov r5.w, r12.y
        mov r6.w, r11.x
        mov r7.x, l(2)
        imul null, r11.y, r11.x, l(9)
        mov r6.xyz, x1[r11.y + 1].xyzx
        mov r7.y, x1[r11.y + 2].x
        mov r7.z, x1[r11.y + 3].x
        mov r10.w, x1[r11.y + 4].x
      endif 
    endif 

#line 295
    iadd r11.x, r11.x, l(1)
  endloop 

#line 298
  mov r4.w, l(0)
  ieq r9.xy, r4.wwww, r7.xxxx
  if_z r7.x
    mov r8.xyz, r0.yzwy
  endif 
  not r4.w, r9.y
  not r7.w, r9.x
  and r4.w, r4.w, r7.w
  not r7.w, r4.w
  if_nz r4.w
    mov r8.w, l(4)
    ieq r8.w, r8.w, r10.w
    if_nz r8.w
      mul r5.xyz, r5.xyzx, r6.xyzx
    endif 

#line 310
    not r6.x, r8.w
    not r6.x, r6.x
    if_z r8.w
      mul r10.xyz, r3.xyzx, r5.wwww
      add r10.xyz, r2.xyzx, r10.xyzx  // r10.x <- phit.x; r10.y <- phit.y; r10.z <- phit.z
      mov r5.w, l(1)
      ieq r5.w, r5.w, r7.x
      nop 
      imul null, r6.y, r6.w, l(8)
      mov r11.xyz, x0[r6.y + 0].xyzx  // r11.x <- sph.mtl.surface_color.x; r11.y <- sph.mtl.surface_color.y; r11.z <- sph.mtl.surface_color.z

#line 87
      mov r11.xyz, r11.xyzx  // r11.x <- <sphereGetSurfaceColor return value>.x; r11.y <- <sphereGetSurfaceColor return value>.y; r11.z <- <sphereGetSurfaceColor return value>.z

#line 311
      nop 
      imul null, r6.y, r6.w, l(9)
      mov r12.xyz, x1[r6.y + 0].xyzx  // r12.x <- pln.mtl.surface_color.x; r12.y <- pln.mtl.surface_color.y; r12.z <- pln.mtl.surface_color.z

#line 149
      mov r12.xyz, r12.xyzx  // r12.x <- <planeGetSurfaceColor return value>.x; r12.y <- <planeGetSurfaceColor return value>.y; r12.z <- <planeGetSurfaceColor return value>.z

#line 311
      movc r11.xyz, r5.wwww, r11.xyzx, r12.xyzx  // r11.x <- chit.x; r11.y <- chit.y; r11.z <- chit.z
      mul r5.xyz, r5.xyzx, r11.xyzx
      mov r5.w, l(1)
      ieq r5.w, r5.w, r7.x
      nop 
      imul null, r6.y, r6.w, l(8)
      mov r11.xyz, x0[r6.y + 5].xyzx  // r11.x <- sph.center.x; r11.y <- sph.center.y; r11.z <- sph.center.z
      mov r10.xyz, r10.xyzx  // r10.x <- p.x; r10.y <- p.y; r10.z <- p.z

#line 82
      mov r11.xyz, -r11.xyzx
      add r11.xyz, r10.xyzx, r11.xyzx  // r11.x <- <sphereGetNormal return value>.x; r11.y <- <sphereGetNormal return value>.y; r11.z <- <sphereGetNormal return value>.z

#line 314
      nop 
      imul null, r6.y, r6.w, l(9)
      mov r6.yzw, x1[r6.y + 5].xxyz  // r6.y <- pln.normal.x; r6.z <- pln.normal.y; r6.w <- pln.normal.z

#line 144
      mov r6.yzw, r6.yyzw  // r6.y <- <planeGetNormal return value>.x; r6.z <- <planeGetNormal return value>.y; r6.w <- <planeGetNormal return value>.z

#line 314
      movc r6.yzw, r5.wwww, r11.xxyz, r6.yyzw  // r6.y <- nhit.x; r6.z <- nhit.y; r6.w <- nhit.z

#line 317
      dp3 r5.w, r3.xyzx, r6.yzwy
      itof r7.x, l(0)
      lt r5.w, r7.x, r5.w  // r5.w <- inside
      if_nz r5.w
        mov r6.yzw, -r6.yyzw
      endif 

#line 320
      mov r7.x, l(1)
      ieq r7.x, r7.x, r10.w
      if_nz r7.x
        mul r11.xyz, r1.yyyy, r6.yzwy
        add r2.xyz, r10.xyzx, r11.xyzx
        nop 
        mov r11.xyz, r6.yzwy  // r11.x <- n.x; r11.y <- n.y; r11.z <- n.z
        mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y
        mov r1.z, r1.z  // r1.z <- c

#line 209
        nop 
        itof r9.zw, r1.zzzz
        mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
        dp2 r9.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
        sincos r9.z, null, r9.z
        mul r9.z, r9.z, l(43758.546875)
        frc r9.z, r9.z  // r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>

#line 209
        mul r9.z, r9.z, l(6.283185)  // r9.z <- r1
        iadd r9.w, r1.z, l(1)  // r9.w <- c
        nop 
        itof r12.xy, r9.wwww
        mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
        dp2 r11.w, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
        sincos r11.w, null, r11.w
        mul r11.w, r11.w, l(43758.546875)
        frc r11.w, r11.w  // r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>

#line 210
        mov r11.w, r11.w  // r11.w <- r2
        iadd r1.z, r9.w, l(1)  // r1.z <- c
        sqrt r9.w, r11.w  // r9.w <- r2s
        mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
        mov r12.x, -r11.x
        max r12.x, r11.x, r12.x
        lt r12.x, l(0.100000), r12.x
        itof r12.yzw, l(0, 0, 0, 1)
        itof r13.xyz, l(0, 1, 0, 0)
        movc r12.xyz, r12.xxxx, r12.yzwy, r13.xyzx
        mul r13.xyz, r11.zxyz, r12.zxyz
        mul r12.xyz, r11.yzxy, r12.xyzx
        mov r12.xyz, -r12.xyzx
        add r12.xyz, r12.xyzx, r13.xyzx
        dp3 r12.w, r12.xyzx, r12.xyzx
        rsq r12.w, r12.w
        mul r12.xyz, r12.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
        mul r13.xyz, r11.yzxy, r12.zxyz
        mul r14.xyz, r11.zxyz, r12.yzxy
        mov r14.xyz, -r14.xyzx
        add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
        sincos null, r12.w, r9.z
        mul r12.xyz, r12.wwww, r12.xyzx
        mul r12.xyz, r9.wwww, r12.xyzx
        sincos r9.z, null, r9.z
        mul r13.xyz, r9.zzzz, r13.xyzx
        mul r13.xyz, r9.wwww, r13.xyzx
        add r12.xyz, r12.xyzx, r13.xyzx
        itof r9.z, l(1)
        mov r9.w, -r11.w
        add r9.z, r9.w, r9.z
        sqrt r9.z, r9.z
        mul r11.xyz, r9.zzzz, r11.xyzx
        add r11.xyz, r11.xyzx, r12.xyzx
        dp3 r9.z, r11.xyzx, r11.xyzx
        rsq r9.z, r9.z
        mul r3.xyz, r9.zzzz, r11.xyzx  // r3.x <- <randomHemisphereDirection return value>.x; r3.y <- <randomHemisphereDirection return value>.y; r3.z <- <randomHemisphereDirection return value>.z

#line 323
        mov r1.z, r1.z  // r1.z <- rand_counter
        mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
      endif 
      if_z r7.x
        mov r7.x, l(2)
        ieq r7.x, r7.x, r10.w
        if_nz r7.x
          mul r11.xyz, r1.yyyy, r6.yzwy
          add r2.xyz, r10.xyzx, r11.xyzx
          dp3 r9.z, r3.xyzx, r6.yzwy
          add r9.z, r9.z, r9.z
          mov r9.z, -r9.z
          mul r11.xyz, r6.yzwy, r9.zzzz
          add r11.xyz, r3.xyzx, r11.xyzx
          dp3 r9.z, r11.xyzx, r11.xyzx
          rsq r9.z, r9.z
          mul r3.xyz, r9.zzzz, r11.xyzx
        endif 

#line 334
        if_z r7.x
          mov r7.x, l(3)
          ieq r7.x, r7.x, r10.w
          if_nz r7.x
            mul r11.xyz, r1.yyyy, r6.yzwy
            add r2.xyz, r10.xyzx, r11.xyzx
            nop 
            dp3 r9.z, r3.xyzx, r6.yzwy
            add r9.z, r9.z, r9.z
            mov r9.z, -r9.z
            mul r11.xyz, r6.yzwy, r9.zzzz
            add r11.xyz, r3.xyzx, r11.xyzx
            dp3 r9.z, r11.xyzx, r11.xyzx
            rsq r9.z, r9.z
            mul r11.xyz, r9.zzzz, r11.xyzx  // r11.x <- r.x; r11.y <- r.y; r11.z <- r.z; r11.x <- r.x; r11.y <- r.y; r11.z <- r.z
            mov r7.z, r7.z  // r7.z <- theta; r7.z <- theta
            mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
            mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
            nop 
            itof r9.zw, r1.zzzz
            mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
            dp2 r9.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
            sincos r9.z, null, r9.z
            mul r9.z, r9.z, l(43758.546875)
            frc r9.z, r9.z  // r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>

#line 222
            mul r9.z, r9.z, l(6.283185)  // r9.z <- r1; r9.z <- r1
            iadd r9.w, r1.z, l(1)  // r9.w <- c; r9.w <- c
            sincos r11.w, null, r7.z
            sincos r12.x, null, r7.z
            mul r11.w, r11.w, r12.x
            nop 
            itof r12.xy, r9.wwww
            mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
            dp2 r12.x, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
            sincos r12.x, null, r12.x
            mul r12.x, r12.x, l(43758.546875)
            frc r12.x, r12.x  // r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>

#line 223
            mul r11.w, r11.w, r12.x  // r11.w <- r2; r11.w <- r2
            iadd r1.z, r9.w, l(1)  // r1.z <- c; r1.z <- c
            sqrt r9.w, r11.w  // r9.w <- r2s; r9.w <- r2s
            mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z; r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
            mov r12.x, -r11.x
            max r12.x, r11.x, r12.x
            lt r12.x, l(0.100000), r12.x
            itof r12.yzw, l(0, 0, 0, 1)
            itof r13.xyz, l(0, 1, 0, 0)
            movc r12.xyz, r12.xxxx, r12.yzwy, r13.xyzx
            mul r13.xyz, r11.zxyz, r12.zxyz
            mul r12.xyz, r11.yzxy, r12.xyzx
            mov r12.xyz, -r12.xyzx
            add r12.xyz, r12.xyzx, r13.xyzx
            dp3 r12.w, r12.xyzx, r12.xyzx
            rsq r12.w, r12.w
            mul r12.xyz, r12.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z; r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
            mul r13.xyz, r11.yzxy, r12.zxyz
            mul r14.xyz, r11.zxyz, r12.yzxy
            mov r14.xyz, -r14.xyzx
            add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z; r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
            sincos null, r12.w, r9.z
            mul r12.xyz, r12.wwww, r12.xyzx
            mul r12.xyz, r9.wwww, r12.xyzx
            sincos r9.z, null, r9.z
            mul r13.xyz, r9.zzzz, r13.xyzx
            mul r13.xyz, r9.wwww, r13.xyzx
            add r12.xyz, r12.xyzx, r13.xyzx
            itof r9.z, l(1)
            mov r9.w, -r11.w
            add r9.z, r9.w, r9.z
            sqrt r9.z, r9.z
            mul r11.xyz, r9.zzzz, r11.xyzx
            add r11.xyz, r11.xyzx, r12.xyzx
            dp3 r9.z, r11.xyzx, r11.xyzx
            rsq r9.z, r9.z
            mul r3.xyz, r9.zzzz, r11.xyzx  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 337
            mov r1.z, r1.z
            mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
          endif 
          if_z r7.x
            mov r7.x, l(5)
            ieq r7.x, r7.x, r10.w
            if_nz r7.x
              itof r9.z, l(1)
              div r9.z, r9.z, r7.y
              movc r9.z, r5.w, r7.y, r9.z  // r9.z <- n
              mul r11.xyz, r1.yyyy, r6.yzwy
              mov r11.xyz, -r11.xyzx
              add r2.xyz, r10.xyzx, r11.xyzx
              dp3 r9.w, r3.xyzx, r6.yzwy
              mul r11.x, r9.w, r9.w
              mul r11.y, r9.z, r9.z
              mov r11.x, -r11.x
              add r11.x, r11.x, l(1.000000)
              mul r11.x, r11.x, r11.y
              mov r11.x, -r11.x
              add r11.x, r11.x, l(1.000000)
              sqrt r11.y, r11.x
              mul r9.w, r9.w, r9.z
              add r9.w, r11.y, r9.w
              ge r11.x, r11.x, l(0.000000)
              mul r11.yzw, r3.xxyz, r9.zzzz
              mul r12.xyz, r6.yzwy, r9.wwww
              mov r12.xyz, -r12.xyzx
              add r11.yzw, r11.yyzw, r12.xxyz
              movc r11.xyz, r11.xxxx, r11.yzwy, l(0,0,0,0)
              dp3 r9.z, r11.xyzx, r11.xyzx
              rsq r9.z, r9.z
              mul r3.xyz, r9.zzzz, r11.xyzx
            endif 

#line 349
            if_z r7.x
              mov r7.x, l(6)
              ieq r7.x, r7.x, r10.w
              if_nz r7.x
                itof r7.x, l(1)
                div r7.x, r7.x, r7.y
                movc r5.w, r5.w, r7.y, r7.x  // r5.w <- n
                mul r11.xyz, r1.yyyy, r6.yzwy
                mov r11.xyz, -r11.xyzx
                add r2.xyz, r10.xyzx, r11.xyzx
                nop 
                dp3 r7.x, r3.xyzx, r6.yzwy
                mul r7.y, r7.x, r7.x
                mul r9.z, r5.w, r5.w
                mov r7.y, -r7.y
                add r7.y, r7.y, l(1.000000)
                mul r7.y, r7.y, r9.z
                mov r7.y, -r7.y
                add r7.y, r7.y, l(1.000000)
                sqrt r9.z, r7.y
                mul r7.x, r5.w, r7.x
                add r7.x, r9.z, r7.x
                ge r7.y, r7.y, l(0.000000)
                mul r10.xyz, r3.xyzx, r5.wwww
                mul r6.yzw, r6.yyzw, r7.xxxx
                mov r6.yzw, -r6.yyzw
                add r6.yzw, r6.yyzw, r10.xxyz
                movc r6.yzw, r7.yyyy, r6.yyzw, l(0,0,0,0)
                dp3 r5.w, r6.yzwy, r6.yzwy
                rsq r5.w, r5.w
                mul r6.yzw, r5.wwww, r6.yyzw  // r6.y <- r.x; r6.z <- r.y; r6.w <- r.z; r6.y <- r.x; r6.z <- r.y; r6.w <- r.z
                mov r7.z, r7.z  // r7.z <- theta; r7.z <- theta
                mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
                mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
                nop 
                itof r7.xy, r1.zzzz
                mul r7.xy, r4.xyxx, r7.xyxx  // r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y

#line 203
                dp2 r5.w, r7.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                sincos r5.w, null, r5.w
                mul r5.w, r5.w, l(43758.546875)
                frc r5.w, r5.w  // r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>

#line 222
                mul r5.w, r5.w, l(6.283185)  // r5.w <- r1; r5.w <- r1
                iadd r7.x, r1.z, l(1)  // r7.x <- c; r7.x <- c
                sincos r7.y, null, r7.z
                sincos r7.z, null, r7.z
                mul r7.y, r7.z, r7.y
                nop 
                itof r9.zw, r7.xxxx
                mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
                dp2 r7.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                sincos r7.z, null, r7.z
                mul r7.z, r7.z, l(43758.546875)
                frc r7.z, r7.z  // r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>

#line 223
                mul r7.y, r7.z, r7.y  // r7.y <- r2; r7.y <- r2
                iadd r1.z, r7.x, l(1)  // r1.z <- c; r1.z <- c
                sqrt r7.x, r7.y  // r7.x <- r2s; r7.x <- r2s
                mov r6.yzw, r6.yyzw  // r6.y <- w.x; r6.z <- w.y; r6.w <- w.z; r6.y <- w.x; r6.z <- w.y; r6.w <- w.z
                mov r7.z, -r6.y
                max r7.z, r6.y, r7.z
                lt r7.z, l(0.100000), r7.z
                itof r10.xyz, l(0, 0, 1, 0)
                itof r11.xyz, l(0, 1, 0, 0)
                movc r10.xyz, r7.zzzz, r10.xyzx, r11.xyzx
                mul r11.xyz, r6.wyzw, r10.zxyz
                mul r10.xyz, r6.zwyz, r10.xyzx
                mov r10.xyz, -r10.xyzx
                add r10.xyz, r10.xyzx, r11.xyzx
                dp3 r7.z, r10.xyzx, r10.xyzx
                rsq r7.z, r7.z
                mul r10.xyz, r7.zzzz, r10.xyzx  // r10.x <- u.x; r10.y <- u.y; r10.z <- u.z; r10.x <- u.x; r10.y <- u.y; r10.z <- u.z
                mul r11.xyz, r6.zwyz, r10.zxyz
                mul r12.xyz, r6.wyzw, r10.yzxy
                mov r12.xyz, -r12.xyzx
                add r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- v.x; r11.y <- v.y; r11.z <- v.z; r11.x <- v.x; r11.y <- v.y; r11.z <- v.z
                sincos null, r7.z, r5.w
                mul r10.xyz, r7.zzzz, r10.xyzx
                mul r10.xyz, r7.xxxx, r10.xyzx
                sincos r5.w, null, r5.w
                mul r11.xyz, r5.wwww, r11.xyzx
                mul r11.xyz, r7.xxxx, r11.xyzx
                add r10.xyz, r10.xyzx, r11.xyzx
                itof r5.w, l(1)
                mov r7.x, -r7.y
                add r5.w, r5.w, r7.x
                sqrt r5.w, r5.w
                mul r6.yzw, r5.wwww, r6.yyzw
                add r6.yzw, r6.yyzw, r10.xxyz
                dp3 r5.w, r6.yzwy, r6.yzwy
                rsq r5.w, r5.w
                mul r3.xyz, r5.wwww, r6.yzwy  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 353
                mov r1.z, r1.z
                mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
              endif 
            endif 
          endif 
        endif 
      endif 
    endif 
    or r5.w, r8.w, r6.x
  else   // Prior locations: r5.w <- nearest_dist; r6.w <- nearest_index; r7.x <- nearest_type; r7.y <- nearest_mtl.ior; r7.z <- nearest_mtl.gloss_angle; r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r11.x <- j
    mov r5.w, l(-1)
  endif 
  and r5.w, r4.w, r5.w
  or r5.w, r9.y, r5.w
  and r4.w, r4.w, r7.w
  or r3.w, r9.x, r4.w
else 
  mov r5.w, l(-1)
endif 

#line 260
not r4.w, r5.w
not r5.w, r3.w
and r4.w, r4.w, r5.w
and r4.z, r4.w, r4.z
max r4.w, r5.y, r5.x
max r4.w, r5.z, r4.w
lt r4.w, r1.x, r4.w
and r4.z, r4.w, r4.z
if_nz r4.z

#line 263
  mov r4.w, l(0)  // r4.w <- nearest_index
  mov r5.w, l(0)  // r5.w <- nearest_type
  itof r6.xyzw, l(0, 0, 0, 0)  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r6.w <- nearest_mtl.ior
  itof r7.x, l(0)  // r7.x <- nearest_mtl.gloss_angle
  mov r7.y, l(0)  // r7.y <- nearest_mtl.surface_type

#line 268
  mov r7.z, l(0)  // r7.z <- i
  mov r9.xyz, r6.xyzx  // r9.x <- nearest_mtl.emissive_color.x; r9.y <- nearest_mtl.emissive_color.y; r9.z <- nearest_mtl.emissive_color.z
  mov r7.w, r0.x  // r7.w <- nearest_dist
  mov r8.w, r4.w  // r8.w <- nearest_index
  mov r9.w, r5.w  // r9.w <- nearest_type
  mov r10.x, r6.w  // r10.x <- nearest_mtl.ior
  mov r10.y, r7.x  // r10.y <- nearest_mtl.gloss_angle
  mov r10.z, r7.y  // r10.z <- nearest_mtl.surface_type
  mov r10.w, r7.z  // r10.w <- i
  loop 
    ult r11.x, r10.w, r1.w
    breakc_z r11.x
    nop 
    imul null, r11.x, r10.w, l(8)
    mov r11.yzw, x0[r11.x + 5].xxyz
    mov r11.x, x0[r11.x + 7].x
    mov r11.yzw, r11.yyzw  // r11.y <- sph.center.x; r11.z <- sph.center.y; r11.w <- sph.center.z
    mov r11.x, r11.x  // r11.x <- sph.radiusSq
    mov r12.xyz, r2.xyzx  // r12.x <- rayorig.x; r12.y <- rayorig.y; r12.z <- rayorig.z
    mov r13.xyz, r3.xyzx  // r13.x <- raydir.x; r13.y <- raydir.y; r13.z <- raydir.z

#line 92
    mov r12.xyz, -r12.xyzx
    add r11.yzw, r11.yyzw, r12.xxyz  // r11.y <- l.x; r11.z <- l.y; r11.w <- l.z

#line 95
    dp3 r12.x, r11.yzwy, r13.xyzx  // r12.x <- tca
    itof r12.y, l(0)
    lt r12.y, r12.x, r12.y
    if_nz r12.y
      nop 
      mov r12.z, l(0)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
      itof r12.w, l(0)  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
      mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
      mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
      mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
      mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 98
      mov r12.zw, r12.zzzw  // r12.z <- <sphereGetIntersect return value>.intersection; r12.w <- <sphereGetIntersect return value>.dist
    endif 

#line 102
    if_z r12.y
      dp3 r11.y, r11.yzwy, r11.yzwy
      mul r11.z, r12.x, r12.x
      mov r11.z, -r11.z
      add r11.y, r11.z, r11.y  // r11.y <- d2
      lt r11.z, r11.x, r11.y
      if_nz r11.z
        nop 
        mov r12.z, l(0)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
        itof r12.w, l(0)  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
        mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
        mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
        mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
        mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 105
        mov r12.zw, r12.zzzw
      endif 

#line 109
      if_z r11.z
        mov r11.y, -r11.y
        add r11.x, r11.y, r11.x
        sqrt r11.x, r11.x  // r11.x <- thc
        mov r11.y, -r11.x
        add r12.w, r11.y, r12.x  // r12.w <- d
        itof r11.y, l(0)
        lt r11.y, r12.w, r11.y
        if_nz r11.y
          add r12.w, r11.x, r12.x
        endif 
        nop 
        mov r12.z, l(-1)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
        mov r12.w, r12.w  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
        mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
        mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
        mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
        mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 116
        mov r12.zw, r12.zzzw  // r12.w <- <sphereGetIntersect return value>.dist
      endif 
    endif 

#line 270
    mov r12.w, r12.w  // r12.w <- curIntersect.dist
    if_nz r12.z
      lt r11.x, r12.w, r7.w
      if_nz r11.x
        mov r7.w, r12.w
        mov r8.w, r10.w
        mov r9.w, l(1)
        imul null, r11.x, r10.w, l(8)
        mov r9.xyz, x0[r11.x + 1].xyzx
        mov r10.x, x0[r11.x + 2].x
        mov r10.y, x0[r11.x + 3].x
        mov r10.z, x0[r11.x + 4].x
      endif 
    endif 

#line 281
    iadd r10.w, r10.w, l(1)
  endloop 
  mov r4.w, l(0)  // r4.w <- j
  mov r6.xyz, r9.xyzx  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z
  mov r5.w, r7.w  // r5.w <- nearest_dist
  mov r6.w, r8.w  // r6.w <- nearest_index
  mov r7.x, r9.w  // r7.x <- nearest_type
  mov r7.y, r10.x  // r7.y <- nearest_mtl.ior
  mov r7.z, r10.y  // r7.z <- nearest_mtl.gloss_angle
  mov r10.w, r10.z  // r10.w <- nearest_mtl.surface_type
  mov r11.x, r4.w  // r11.x <- j
  loop 
    ult r11.y, r11.x, r2.w
    breakc_z r11.y
    nop 
    imul null, r11.y, r11.x, l(9)
    mov r12.xyz, x1[r11.y + 5].xyzx
    mov r11.yzw, x1[r11.y + 6].xxyz
    mov r12.xyz, r12.xyzx  // r12.x <- pln.normal.x; r12.y <- pln.normal.y; r12.z <- pln.normal.z
    mov r11.yzw, r11.yyzw  // r11.y <- pln.pnt.x; r11.z <- pln.pnt.y; r11.w <- pln.pnt.z
    mov r13.xyz, r2.xyzx  // r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
    mov r14.xyz, r3.xyzx  // r14.x <- raydir.x; r14.y <- raydir.y; r14.z <- raydir.z

#line 154
    dp3 r12.w, r12.xyzx, r14.xyzx  // r12.w <- denom
    lt r13.w, l(0.000001), r12.w
    if_nz r13.w
      mov r13.xyz, -r13.xyzx
      add r11.yzw, r11.yyzw, r13.xxyz  // r11.y <- origintopoint.x; r11.z <- origintopoint.y; r11.w <- origintopoint.z
      dp3 r11.y, r11.yzwy, r12.xyzx
      div r12.y, r11.y, r12.w  // r12.y <- d
      itof r11.y, l(0)
      ge r11.y, r12.y, r11.y
      if_nz r11.y
        nop 
        mov r12.x, l(-1)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
        mov r12.y, r12.y  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
        mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
        mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
        mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
        mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 159
        mov r12.xy, r12.xyxx  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
      endif 
    else   // Prior locations: r11.y <- pln.pnt.x; r11.z <- pln.pnt.y; r11.w <- pln.pnt.z; r12.x <- pln.normal.x; r12.y <- pln.normal.y; r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
      mov r11.y, l(0)
    endif 
    if_z r11.y  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
      nop 
      mov r12.x, l(0)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
      itof r12.y, l(0)  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
      mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
      mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
      mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
      mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 162
      mov r12.xy, r12.xyxx
    endif 

#line 284
    mov r12.y, r12.y  // r12.y <- curIntersect.dist
    if_nz r12.x
      lt r11.y, r12.y, r5.w
      if_nz r11.y
        mov r5.w, r12.y
        mov r6.w, r11.x
        mov r7.x, l(2)
        imul null, r11.y, r11.x, l(9)
        mov r6.xyz, x1[r11.y + 1].xyzx
        mov r7.y, x1[r11.y + 2].x
        mov r7.z, x1[r11.y + 3].x
        mov r10.w, x1[r11.y + 4].x
      endif 
    endif 

#line 295
    iadd r11.x, r11.x, l(1)
  endloop 

#line 298
  mov r4.w, l(0)
  ieq r9.xy, r4.wwww, r7.xxxx
  if_z r7.x
    mov r8.xyz, r0.yzwy
  endif 
  not r4.w, r9.y
  not r7.w, r9.x
  and r4.w, r4.w, r7.w
  not r7.w, r4.w
  if_nz r4.w
    mov r8.w, l(4)
    ieq r8.w, r8.w, r10.w
    if_nz r8.w
      mul r5.xyz, r5.xyzx, r6.xyzx
    endif 

#line 310
    not r6.x, r8.w
    not r6.x, r6.x
    if_z r8.w
      mul r10.xyz, r3.xyzx, r5.wwww
      add r10.xyz, r2.xyzx, r10.xyzx  // r10.x <- phit.x; r10.y <- phit.y; r10.z <- phit.z
      mov r5.w, l(1)
      ieq r5.w, r5.w, r7.x
      nop 
      imul null, r6.y, r6.w, l(8)
      mov r11.xyz, x0[r6.y + 0].xyzx  // r11.y <- sph.mtl.surface_color.y; r11.z <- sph.mtl.surface_color.z; r11.x <- sph.mtl.surface_color.x

#line 87
      mov r11.xyz, r11.xyzx  // r11.y <- <sphereGetSurfaceColor return value>.y; r11.z <- <sphereGetSurfaceColor return value>.z; r11.x <- <sphereGetSurfaceColor return value>.x

#line 311
      nop 
      imul null, r6.y, r6.w, l(9)
      mov r12.xyz, x1[r6.y + 0].xyzx  // r12.x <- pln.mtl.surface_color.x; r12.y <- pln.mtl.surface_color.y; r12.z <- pln.mtl.surface_color.z

#line 149
      mov r12.xyz, r12.xyzx  // r12.x <- <planeGetSurfaceColor return value>.x; r12.y <- <planeGetSurfaceColor return value>.y; r12.z <- <planeGetSurfaceColor return value>.z

#line 311
      movc r11.xyz, r5.wwww, r11.xyzx, r12.xyzx  // r11.y <- chit.y; r11.z <- chit.z; r11.x <- chit.x
      mul r5.xyz, r5.xyzx, r11.xyzx
      mov r5.w, l(1)
      ieq r5.w, r5.w, r7.x
      nop 
      imul null, r6.y, r6.w, l(8)
      mov r11.xyz, x0[r6.y + 5].xyzx  // r11.y <- sph.center.y; r11.z <- sph.center.z; r11.x <- sph.center.x
      mov r10.xyz, r10.xyzx  // r10.x <- p.x; r10.y <- p.y; r10.z <- p.z

#line 82
      mov r11.xyz, -r11.xyzx
      add r11.xyz, r10.xyzx, r11.xyzx  // r11.y <- <sphereGetNormal return value>.y; r11.z <- <sphereGetNormal return value>.z; r11.x <- <sphereGetNormal return value>.x

#line 314
      nop 
      imul null, r6.y, r6.w, l(9)
      mov r6.yzw, x1[r6.y + 5].xxyz  // r6.y <- pln.normal.x; r6.z <- pln.normal.y; r6.w <- pln.normal.z

#line 144
      mov r6.yzw, r6.yyzw  // r6.y <- <planeGetNormal return value>.x; r6.z <- <planeGetNormal return value>.y; r6.w <- <planeGetNormal return value>.z

#line 314
      movc r6.yzw, r5.wwww, r11.xxyz, r6.yyzw  // r6.y <- nhit.x; r6.z <- nhit.y; r6.w <- nhit.z

#line 317
      dp3 r5.w, r3.xyzx, r6.yzwy
      itof r7.x, l(0)
      lt r5.w, r7.x, r5.w  // r5.w <- inside
      if_nz r5.w
        mov r6.yzw, -r6.yyzw
      endif 

#line 320
      mov r7.x, l(1)
      ieq r7.x, r7.x, r10.w
      if_nz r7.x
        mul r11.xyz, r1.yyyy, r6.yzwy
        add r2.xyz, r10.xyzx, r11.xyzx
        nop 
        mov r11.xyz, r6.yzwy  // r11.x <- n.x; r11.y <- n.y; r11.z <- n.z
        mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y
        mov r1.z, r1.z  // r1.z <- c

#line 209
        nop 
        itof r9.zw, r1.zzzz
        mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
        dp2 r9.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
        sincos r9.z, null, r9.z
        mul r9.z, r9.z, l(43758.546875)
        frc r9.z, r9.z  // r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>

#line 209
        mul r9.z, r9.z, l(6.283185)  // r9.z <- r1
        iadd r9.w, r1.z, l(1)  // r9.w <- c
        nop 
        itof r12.xy, r9.wwww
        mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
        dp2 r11.w, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
        sincos r11.w, null, r11.w
        mul r11.w, r11.w, l(43758.546875)
        frc r11.w, r11.w  // r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>

#line 210
        mov r11.w, r11.w  // r11.w <- r2
        iadd r1.z, r9.w, l(1)  // r1.z <- c
        sqrt r9.w, r11.w  // r9.w <- r2s
        mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
        mov r12.x, -r11.x
        max r12.x, r11.x, r12.x
        lt r12.x, l(0.100000), r12.x
        itof r12.yzw, l(0, 0, 0, 1)
        itof r13.xyz, l(0, 1, 0, 0)
        movc r12.xyz, r12.xxxx, r12.yzwy, r13.xyzx
        mul r13.xyz, r11.zxyz, r12.zxyz
        mul r12.xyz, r11.yzxy, r12.xyzx
        mov r12.xyz, -r12.xyzx
        add r12.xyz, r12.xyzx, r13.xyzx
        dp3 r12.w, r12.xyzx, r12.xyzx
        rsq r12.w, r12.w
        mul r12.xyz, r12.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
        mul r13.xyz, r11.yzxy, r12.zxyz
        mul r14.xyz, r11.zxyz, r12.yzxy
        mov r14.xyz, -r14.xyzx
        add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
        sincos null, r12.w, r9.z
        mul r12.xyz, r12.wwww, r12.xyzx
        mul r12.xyz, r9.wwww, r12.xyzx
        sincos r9.z, null, r9.z
        mul r13.xyz, r9.zzzz, r13.xyzx
        mul r13.xyz, r9.wwww, r13.xyzx
        add r12.xyz, r12.xyzx, r13.xyzx
        itof r9.z, l(1)
        mov r9.w, -r11.w
        add r9.z, r9.w, r9.z
        sqrt r9.z, r9.z
        mul r11.xyz, r9.zzzz, r11.xyzx
        add r11.xyz, r11.xyzx, r12.xyzx
        dp3 r9.z, r11.xyzx, r11.xyzx
        rsq r9.z, r9.z
        mul r3.xyz, r9.zzzz, r11.xyzx  // r3.x <- <randomHemisphereDirection return value>.x; r3.y <- <randomHemisphereDirection return value>.y; r3.z <- <randomHemisphereDirection return value>.z

#line 323
        mov r1.z, r1.z  // r1.z <- rand_counter
        mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
      endif 
      if_z r7.x
        mov r7.x, l(2)
        ieq r7.x, r7.x, r10.w
        if_nz r7.x
          mul r11.xyz, r1.yyyy, r6.yzwy
          add r2.xyz, r10.xyzx, r11.xyzx
          dp3 r9.z, r3.xyzx, r6.yzwy
          add r9.z, r9.z, r9.z
          mov r9.z, -r9.z
          mul r11.xyz, r6.yzwy, r9.zzzz
          add r11.xyz, r3.xyzx, r11.xyzx
          dp3 r9.z, r11.xyzx, r11.xyzx
          rsq r9.z, r9.z
          mul r3.xyz, r9.zzzz, r11.xyzx
        endif 

#line 334
        if_z r7.x
          mov r7.x, l(3)
          ieq r7.x, r7.x, r10.w
          if_nz r7.x
            mul r11.xyz, r1.yyyy, r6.yzwy
            add r2.xyz, r10.xyzx, r11.xyzx
            nop 
            dp3 r9.z, r3.xyzx, r6.yzwy
            add r9.z, r9.z, r9.z
            mov r9.z, -r9.z
            mul r11.xyz, r6.yzwy, r9.zzzz
            add r11.xyz, r3.xyzx, r11.xyzx
            dp3 r9.z, r11.xyzx, r11.xyzx
            rsq r9.z, r9.z
            mul r11.xyz, r9.zzzz, r11.xyzx  // r11.x <- r.x; r11.y <- r.y; r11.z <- r.z; r11.y <- r.y; r11.z <- r.z; r11.x <- r.x
            mov r7.z, r7.z  // r7.z <- theta; r7.z <- theta
            mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
            mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
            nop 
            itof r9.zw, r1.zzzz
            mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
            dp2 r9.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
            sincos r9.z, null, r9.z
            mul r9.z, r9.z, l(43758.546875)
            frc r9.z, r9.z  // r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>

#line 222
            mul r9.z, r9.z, l(6.283185)  // r9.z <- r1; r9.z <- r1
            iadd r9.w, r1.z, l(1)  // r9.w <- c; r9.w <- c
            sincos r11.w, null, r7.z
            sincos r12.x, null, r7.z
            mul r11.w, r11.w, r12.x
            nop 
            itof r12.xy, r9.wwww
            mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
            dp2 r12.x, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
            sincos r12.x, null, r12.x
            mul r12.x, r12.x, l(43758.546875)
            frc r12.x, r12.x  // r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>

#line 223
            mul r11.w, r11.w, r12.x  // r11.w <- r2; r11.w <- r2
            iadd r1.z, r9.w, l(1)  // r1.z <- c; r1.z <- c
            sqrt r9.w, r11.w  // r9.w <- r2s; r9.w <- r2s
            mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z; r11.y <- w.y; r11.z <- w.z; r11.x <- w.x
            mov r12.x, -r11.x
            max r12.x, r11.x, r12.x
            lt r12.x, l(0.100000), r12.x
            itof r12.yzw, l(0, 0, 0, 1)
            itof r13.xyz, l(0, 1, 0, 0)
            movc r12.xyz, r12.xxxx, r12.yzwy, r13.xyzx
            mul r13.xyz, r11.zxyz, r12.zxyz
            mul r12.xyz, r11.yzxy, r12.xyzx
            mov r12.xyz, -r12.xyzx
            add r12.xyz, r12.xyzx, r13.xyzx
            dp3 r12.w, r12.xyzx, r12.xyzx
            rsq r12.w, r12.w
            mul r12.xyz, r12.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z; r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
            mul r13.xyz, r11.yzxy, r12.zxyz
            mul r14.xyz, r11.zxyz, r12.yzxy
            mov r14.xyz, -r14.xyzx
            add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z; r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
            sincos null, r12.w, r9.z
            mul r12.xyz, r12.wwww, r12.xyzx
            mul r12.xyz, r9.wwww, r12.xyzx
            sincos r9.z, null, r9.z
            mul r13.xyz, r9.zzzz, r13.xyzx
            mul r13.xyz, r9.wwww, r13.xyzx
            add r12.xyz, r12.xyzx, r13.xyzx
            itof r9.z, l(1)
            mov r9.w, -r11.w
            add r9.z, r9.w, r9.z
            sqrt r9.z, r9.z
            mul r11.xyz, r9.zzzz, r11.xyzx
            add r11.xyz, r11.xyzx, r12.xyzx
            dp3 r9.z, r11.xyzx, r11.xyzx
            rsq r9.z, r9.z
            mul r3.xyz, r9.zzzz, r11.xyzx  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 337
            mov r1.z, r1.z
            mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
          endif 
          if_z r7.x
            mov r7.x, l(5)
            ieq r7.x, r7.x, r10.w
            if_nz r7.x
              itof r9.z, l(1)
              div r9.z, r9.z, r7.y
              movc r9.z, r5.w, r7.y, r9.z  // r9.z <- n
              mul r11.xyz, r1.yyyy, r6.yzwy
              mov r11.xyz, -r11.xyzx
              add r2.xyz, r10.xyzx, r11.xyzx
              dp3 r9.w, r3.xyzx, r6.yzwy
              mul r11.x, r9.w, r9.w
              mul r11.y, r9.z, r9.z
              mov r11.x, -r11.x
              add r11.x, r11.x, l(1.000000)
              mul r11.x, r11.x, r11.y
              mov r11.x, -r11.x
              add r11.x, r11.x, l(1.000000)
              sqrt r11.y, r11.x
              mul r9.w, r9.w, r9.z
              add r9.w, r11.y, r9.w
              ge r11.x, r11.x, l(0.000000)
              mul r11.yzw, r3.xxyz, r9.zzzz
              mul r12.xyz, r6.yzwy, r9.wwww
              mov r12.xyz, -r12.xyzx
              add r11.yzw, r11.yyzw, r12.xxyz
              movc r11.xyz, r11.xxxx, r11.yzwy, l(0,0,0,0)
              dp3 r9.z, r11.xyzx, r11.xyzx
              rsq r9.z, r9.z
              mul r3.xyz, r9.zzzz, r11.xyzx
            endif 

#line 349
            if_z r7.x
              mov r7.x, l(6)
              ieq r7.x, r7.x, r10.w
              if_nz r7.x
                itof r7.x, l(1)
                div r7.x, r7.x, r7.y
                movc r5.w, r5.w, r7.y, r7.x  // r5.w <- n
                mul r11.xyz, r1.yyyy, r6.yzwy
                mov r11.xyz, -r11.xyzx
                add r2.xyz, r10.xyzx, r11.xyzx
                nop 
                dp3 r7.x, r3.xyzx, r6.yzwy
                mul r7.y, r7.x, r7.x
                mul r9.z, r5.w, r5.w
                mov r7.y, -r7.y
                add r7.y, r7.y, l(1.000000)
                mul r7.y, r7.y, r9.z
                mov r7.y, -r7.y
                add r7.y, r7.y, l(1.000000)
                sqrt r9.z, r7.y
                mul r7.x, r5.w, r7.x
                add r7.x, r9.z, r7.x
                ge r7.y, r7.y, l(0.000000)
                mul r10.xyz, r3.xyzx, r5.wwww
                mul r6.yzw, r6.yyzw, r7.xxxx
                mov r6.yzw, -r6.yyzw
                add r6.yzw, r6.yyzw, r10.xxyz  // r10.w <- nearest_mtl.surface_type
                movc r6.yzw, r7.yyyy, r6.yyzw, l(0,0,0,0)
                dp3 r5.w, r6.yzwy, r6.yzwy
                rsq r5.w, r5.w
                mul r6.yzw, r5.wwww, r6.yyzw  // r6.y <- r.x; r6.z <- r.y; r6.w <- r.z; r6.y <- r.x; r6.z <- r.y; r6.w <- r.z
                mov r7.z, r7.z  // r7.z <- theta; r7.z <- theta
                mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
                mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
                nop 
                itof r7.xy, r1.zzzz
                mul r7.xy, r4.xyxx, r7.xyxx  // r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y

#line 203
                dp2 r5.w, r7.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                sincos r5.w, null, r5.w
                mul r5.w, r5.w, l(43758.546875)
                frc r5.w, r5.w  // r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>; r5.w <- <random return value>

#line 222
                mul r5.w, r5.w, l(6.283185)  // r5.w <- r1; r5.w <- r1
                iadd r7.x, r1.z, l(1)  // r7.x <- c; r7.x <- c
                sincos r7.y, null, r7.z
                sincos r7.z, null, r7.z
                mul r7.y, r7.z, r7.y
                nop 
                itof r9.zw, r7.xxxx
                mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
                dp2 r7.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                sincos r7.z, null, r7.z
                mul r7.z, r7.z, l(43758.546875)
                frc r7.z, r7.z  // r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>; r7.z <- <random return value>

#line 223
                mul r7.y, r7.z, r7.y  // r7.y <- r2; r7.y <- r2
                iadd r1.z, r7.x, l(1)  // r1.z <- c; r1.z <- c
                sqrt r7.x, r7.y  // r7.x <- r2s; r7.x <- r2s
                mov r6.yzw, r6.yyzw  // r6.y <- w.x; r6.z <- w.y; r6.w <- w.z; r6.y <- w.x; r6.z <- w.y; r6.w <- w.z
                mov r7.z, -r6.y
                max r7.z, r6.y, r7.z
                lt r7.z, l(0.100000), r7.z
                itof r10.xyz, l(0, 0, 1, 0)
                itof r11.xyz, l(0, 1, 0, 0)
                movc r10.xyz, r7.zzzz, r10.xyzx, r11.xyzx
                mul r11.xyz, r6.wyzw, r10.zxyz
                mul r10.xyz, r6.zwyz, r10.xyzx
                mov r10.xyz, -r10.xyzx
                add r10.xyz, r10.xyzx, r11.xyzx
                dp3 r7.z, r10.xyzx, r10.xyzx
                rsq r7.z, r7.z
                mul r10.xyz, r7.zzzz, r10.xyzx  // r10.x <- u.x; r10.y <- u.y; r10.z <- u.z; r10.x <- u.x; r10.y <- u.y; r10.z <- u.z
                mul r11.xyz, r6.zwyz, r10.zxyz
                mul r12.xyz, r6.wyzw, r10.yzxy
                mov r12.xyz, -r12.xyzx
                add r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- v.x; r11.y <- v.y; r11.z <- v.z; r11.x <- v.x; r11.y <- v.y; r11.z <- v.z
                sincos null, r7.z, r5.w
                mul r10.xyz, r7.zzzz, r10.xyzx
                mul r10.xyz, r7.xxxx, r10.xyzx
                sincos r5.w, null, r5.w
                mul r11.xyz, r5.wwww, r11.xyzx
                mul r11.xyz, r7.xxxx, r11.xyzx
                add r10.xyz, r10.xyzx, r11.xyzx
                itof r5.w, l(1)
                mov r7.x, -r7.y
                add r5.w, r5.w, r7.x
                sqrt r5.w, r5.w
                mul r6.yzw, r5.wwww, r6.yyzw
                add r6.yzw, r6.yyzw, r10.xxyz
                dp3 r5.w, r6.yzwy, r6.yzwy
                rsq r5.w, r5.w
                mul r3.xyz, r5.wwww, r6.yzwy  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 353
                mov r1.z, r1.z
                mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
              endif 
            endif 
          endif 
        endif 
      endif 
    endif 
    or r5.w, r8.w, r6.x
  else   // Prior locations: r5.w <- nearest_dist; r6.w <- nearest_index; r7.x <- nearest_type; r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r7.y <- nearest_mtl.ior; r7.z <- nearest_mtl.gloss_angle; r11.x <- j
    mov r5.w, l(-1)
  endif 
  and r5.w, r4.w, r5.w
  or r5.w, r9.y, r5.w
  and r4.w, r4.w, r7.w
  or r3.w, r9.x, r4.w
else 
  mov r5.w, l(-1)
endif 

#line 260
not r4.w, r5.w
not r5.w, r3.w
and r4.w, r4.w, r5.w
and r4.z, r4.w, r4.z
max r4.w, r5.y, r5.x
max r4.w, r5.z, r4.w
lt r4.w, r1.x, r4.w
and r4.z, r4.w, r4.z
if_nz r4.z

#line 263
  mov r4.w, l(0)  // r4.w <- nearest_index
  mov r5.w, l(0)  // r5.w <- nearest_type
  itof r6.xyzw, l(0, 0, 0, 0)  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r6.w <- nearest_mtl.ior
  itof r7.x, l(0)  // r7.x <- nearest_mtl.gloss_angle
  mov r7.y, l(0)  // r7.y <- nearest_mtl.surface_type

#line 268
  mov r7.z, l(0)  // r7.z <- i
  mov r9.xyz, r6.xyzx  // r9.x <- nearest_mtl.emissive_color.x; r9.y <- nearest_mtl.emissive_color.y; r9.z <- nearest_mtl.emissive_color.z
  mov r7.w, r0.x  // r7.w <- nearest_dist
  mov r8.w, r4.w  // r8.w <- nearest_index
  mov r9.w, r5.w  // r9.w <- nearest_type
  mov r10.x, r6.w  // r10.x <- nearest_mtl.ior
  mov r10.y, r7.x  // r10.y <- nearest_mtl.gloss_angle
  mov r10.z, r7.y  // r10.z <- nearest_mtl.surface_type
  mov r10.w, r7.z  // r10.w <- i
  loop 
    ult r11.x, r10.w, r1.w
    breakc_z r11.x
    nop 
    imul null, r11.x, r10.w, l(8)
    mov r11.yzw, x0[r11.x + 5].xxyz
    mov r11.x, x0[r11.x + 7].x
    mov r11.yzw, r11.yyzw  // r11.y <- sph.center.x; r11.z <- sph.center.y; r11.w <- sph.center.z
    mov r11.x, r11.x  // r11.x <- sph.radiusSq
    mov r12.xyz, r2.xyzx  // r12.x <- rayorig.x; r12.y <- rayorig.y; r12.z <- rayorig.z
    mov r13.xyz, r3.xyzx  // r13.x <- raydir.x; r13.y <- raydir.y; r13.z <- raydir.z

#line 92
    mov r12.xyz, -r12.xyzx
    add r11.yzw, r11.yyzw, r12.xxyz  // r11.y <- l.x; r11.z <- l.y; r11.w <- l.z

#line 95
    dp3 r12.x, r11.yzwy, r13.xyzx  // r12.x <- tca
    itof r12.y, l(0)
    lt r12.y, r12.x, r12.y
    if_nz r12.y
      nop 
      mov r12.z, l(0)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
      itof r12.w, l(0)  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
      mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
      mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
      mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
      mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 98
      mov r12.zw, r12.zzzw  // r12.z <- <sphereGetIntersect return value>.intersection; r12.w <- <sphereGetIntersect return value>.dist
    endif 

#line 102
    if_z r12.y
      dp3 r11.y, r11.yzwy, r11.yzwy
      mul r11.z, r12.x, r12.x
      mov r11.z, -r11.z
      add r11.y, r11.z, r11.y  // r11.y <- d2
      lt r11.z, r11.x, r11.y
      if_nz r11.z
        nop 
        mov r12.z, l(0)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
        itof r12.w, l(0)  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
        mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
        mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
        mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
        mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 105
        mov r12.zw, r12.zzzw
      endif 

#line 109
      if_z r11.z
        mov r11.y, -r11.y
        add r11.x, r11.y, r11.x
        sqrt r11.x, r11.x  // r11.x <- thc
        mov r11.y, -r11.x
        add r12.w, r11.y, r12.x  // r12.w <- d
        itof r11.y, l(0)
        lt r11.y, r12.w, r11.y
        if_nz r11.y
          add r12.w, r11.x, r12.x
        endif 
        nop 
        mov r12.z, l(-1)  // r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i; r12.z <- i
        mov r12.w, r12.w  // r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d; r12.w <- d

#line 54
        mov r12.z, r12.z  // r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection; r12.z <- new_intersect.intersection
        mov r12.w, r12.w  // r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist; r12.w <- new_intersect.dist
        mov r12.z, r12.z  // r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection; r12.z <- <createIntersect return value>.intersection
        mov r12.w, r12.w  // r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist; r12.w <- <createIntersect return value>.dist

#line 116
        mov r12.zw, r12.zzzw  // r12.w <- <sphereGetIntersect return value>.dist
      endif 
    endif 

#line 270
    mov r12.w, r12.w  // r12.w <- curIntersect.dist
    if_nz r12.z
      lt r11.x, r12.w, r7.w
      if_nz r11.x
        mov r7.w, r12.w
        mov r8.w, r10.w
        mov r9.w, l(1)
        imul null, r11.x, r10.w, l(8)
        mov r9.xyz, x0[r11.x + 1].xyzx
        mov r10.x, x0[r11.x + 2].x
        mov r10.y, x0[r11.x + 3].x
        mov r10.z, x0[r11.x + 4].x
      endif 
    endif 

#line 281
    iadd r10.w, r10.w, l(1)
  endloop 
  mov r4.w, l(0)  // r4.w <- j
  mov r6.xyz, r9.xyzx  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z
  mov r5.w, r7.w  // r5.w <- nearest_dist
  mov r6.w, r8.w  // r6.w <- nearest_index
  mov r7.x, r9.w  // r7.x <- nearest_type
  mov r7.y, r10.x  // r7.y <- nearest_mtl.ior
  mov r7.z, r10.y  // r7.z <- nearest_mtl.gloss_angle
  mov r10.w, r10.z  // r10.w <- nearest_mtl.surface_type
  mov r11.x, r4.w  // r11.x <- j
  loop 
    ult r11.y, r11.x, r2.w
    breakc_z r11.y
    nop 
    imul null, r11.y, r11.x, l(9)
    mov r12.xyz, x1[r11.y + 5].xyzx
    mov r11.yzw, x1[r11.y + 6].xxyz
    mov r12.xyz, r12.xyzx  // r12.x <- pln.normal.x; r12.y <- pln.normal.y; r12.z <- pln.normal.z
    mov r11.yzw, r11.yyzw  // r11.y <- pln.pnt.x; r11.z <- pln.pnt.y; r11.w <- pln.pnt.z
    mov r13.xyz, r2.xyzx  // r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
    mov r14.xyz, r3.xyzx  // r14.x <- raydir.x; r14.y <- raydir.y; r14.z <- raydir.z

#line 154
    dp3 r12.w, r12.xyzx, r14.xyzx  // r12.w <- denom
    lt r13.w, l(0.000001), r12.w
    if_nz r13.w
      mov r13.xyz, -r13.xyzx
      add r11.yzw, r11.yyzw, r13.xxyz  // r11.y <- origintopoint.x; r11.z <- origintopoint.y; r11.w <- origintopoint.z
      dp3 r11.y, r11.yzwy, r12.xyzx
      div r12.y, r11.y, r12.w  // r12.y <- d
      itof r11.y, l(0)
      ge r11.y, r12.y, r11.y
      if_nz r11.y
        nop 
        mov r12.x, l(-1)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
        mov r12.y, r12.y  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
        mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
        mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
        mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
        mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 159
        mov r12.xy, r12.xyxx  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
      endif 
    else   // Prior locations: r12.x <- pln.normal.x; r12.y <- pln.normal.y; r11.y <- pln.pnt.x; r11.z <- pln.pnt.y; r11.w <- pln.pnt.z; r13.x <- rayorig.x; r13.y <- rayorig.y; r13.z <- rayorig.z
      mov r11.y, l(0)
    endif 
    if_z r11.y  // r12.x <- <planeGetIntersect return value>.intersection; r12.y <- <planeGetIntersect return value>.dist
      nop 
      mov r12.x, l(0)  // r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i; r12.x <- i
      itof r12.y, l(0)  // r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d; r12.y <- d

#line 54
      mov r12.x, r12.x  // r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection; r12.x <- new_intersect.intersection
      mov r12.y, r12.y  // r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist; r12.y <- new_intersect.dist
      mov r12.x, r12.x  // r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection; r12.x <- <createIntersect return value>.intersection
      mov r12.y, r12.y  // r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist; r12.y <- <createIntersect return value>.dist

#line 162
      mov r12.xy, r12.xyxx
    endif 

#line 284
    mov r12.y, r12.y  // r12.y <- curIntersect.dist
    if_nz r12.x
      lt r11.y, r12.y, r5.w
      if_nz r11.y
        mov r5.w, r12.y
        mov r6.w, r11.x
        mov r7.x, l(2)
        imul null, r11.y, r11.x, l(9)
        mov r6.xyz, x1[r11.y + 1].xyzx
        mov r7.y, x1[r11.y + 2].x
        mov r7.z, x1[r11.y + 3].x
        mov r10.w, x1[r11.y + 4].x
      endif 
    endif 

#line 295
    iadd r11.x, r11.x, l(1)
  endloop 

#line 298
  mov r4.w, l(0)
  ieq r9.xy, r4.wwww, r7.xxxx
  if_z r7.x
    mov r8.xyz, r0.yzwy
  endif 
  not r4.w, r9.y
  not r7.w, r9.x
  and r4.w, r4.w, r7.w
  not r7.w, r4.w
  if_nz r4.w
    mov r8.w, l(4)
    ieq r8.w, r8.w, r10.w
    if_nz r8.w
      mul r5.xyz, r5.xyzx, r6.xyzx
    endif 

#line 310
    not r6.x, r8.w
    not r6.x, r6.x
    if_z r8.w
      mul r10.xyz, r3.xyzx, r5.wwww
      add r10.xyz, r2.xyzx, r10.xyzx  // r10.x <- phit.x; r10.y <- phit.y; r10.z <- phit.z
      mov r5.w, l(1)
      ieq r5.w, r5.w, r7.x
      nop 
      imul null, r6.y, r6.w, l(8)
      mov r11.xyz, x0[r6.y + 0].xyzx  // r11.x <- sph.mtl.surface_color.x; r11.y <- sph.mtl.surface_color.y; r11.z <- sph.mtl.surface_color.z

#line 87
      mov r11.xyz, r11.xyzx  // r11.x <- <sphereGetSurfaceColor return value>.x; r11.y <- <sphereGetSurfaceColor return value>.y; r11.z <- <sphereGetSurfaceColor return value>.z

#line 311
      nop 
      imul null, r6.y, r6.w, l(9)
      mov r12.xyz, x1[r6.y + 0].xyzx  // r12.x <- pln.mtl.surface_color.x; r12.y <- pln.mtl.surface_color.y; r12.z <- pln.mtl.surface_color.z

#line 149
      mov r12.xyz, r12.xyzx  // r12.x <- <planeGetSurfaceColor return value>.x; r12.y <- <planeGetSurfaceColor return value>.y; r12.z <- <planeGetSurfaceColor return value>.z

#line 311
      movc r11.xyz, r5.wwww, r11.xyzx, r12.xyzx  // r11.x <- chit.x; r11.y <- chit.y; r11.z <- chit.z
      mul r5.xyz, r5.xyzx, r11.xyzx
      mov r5.w, l(1)
      ieq r5.w, r5.w, r7.x
      nop 
      imul null, r6.y, r6.w, l(8)
      mov r11.xyz, x0[r6.y + 5].xyzx  // r11.x <- sph.center.x; r11.y <- sph.center.y; r11.z <- sph.center.z
      mov r10.xyz, r10.xyzx  // r10.x <- p.x; r10.y <- p.y; r10.z <- p.z

#line 82
      mov r11.xyz, -r11.xyzx
      add r11.xyz, r10.xyzx, r11.xyzx  // r11.x <- <sphereGetNormal return value>.x; r11.y <- <sphereGetNormal return value>.y; r11.z <- <sphereGetNormal return value>.z

#line 314
      nop 
      imul null, r6.y, r6.w, l(9)
      mov r6.yzw, x1[r6.y + 5].xxyz  // r6.y <- pln.normal.x; r6.z <- pln.normal.y; r6.w <- pln.normal.z

#line 144
      mov r6.yzw, r6.yyzw  // r6.y <- <planeGetNormal return value>.x; r6.z <- <planeGetNormal return value>.y; r6.w <- <planeGetNormal return value>.z

#line 314
      movc r6.yzw, r5.wwww, r11.xxyz, r6.yyzw  // r6.y <- nhit.x; r6.z <- nhit.y; r6.w <- nhit.z

#line 317
      dp3 r5.w, r3.xyzx, r6.yzwy
      itof r7.x, l(0)
      lt r5.w, r7.x, r5.w  // r5.w <- inside
      if_nz r5.w
        mov r6.yzw, -r6.yyzw
      endif 

#line 320
      mov r7.x, l(1)
      ieq r7.x, r7.x, r10.w
      if_nz r7.x
        mul r11.xyz, r1.yyyy, r6.yzwy
        add r2.xyz, r10.xyzx, r11.xyzx
        nop 
        mov r11.xyz, r6.yzwy  // r11.x <- n.x; r11.y <- n.y; r11.z <- n.z
        mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y
        mov r1.z, r1.z  // r1.z <- c

#line 209
        nop 
        itof r9.zw, r1.zzzz
        mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
        dp2 r9.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
        sincos r9.z, null, r9.z
        mul r9.z, r9.z, l(43758.546875)
        frc r9.z, r9.z  // r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>

#line 209
        mul r9.z, r9.z, l(6.283185)  // r9.z <- r1
        iadd r9.w, r1.z, l(1)  // r9.w <- c
        nop 
        itof r12.xy, r9.wwww
        mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
        dp2 r11.w, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
        sincos r11.w, null, r11.w
        mul r11.w, r11.w, l(43758.546875)
        frc r11.w, r11.w  // r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>; r11.w <- <random return value>

#line 210
        mov r11.w, r11.w  // r11.w <- r2
        iadd r1.z, r9.w, l(1)  // r1.z <- c
        sqrt r9.w, r11.w  // r9.w <- r2s
        mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
        mov r12.x, -r11.x
        max r12.x, r11.x, r12.x
        lt r12.x, l(0.100000), r12.x
        itof r12.yzw, l(0, 0, 0, 1)
        itof r13.xyz, l(0, 1, 0, 0)
        movc r12.xyz, r12.xxxx, r12.yzwy, r13.xyzx
        mul r13.xyz, r11.zxyz, r12.zxyz
        mul r12.xyz, r11.yzxy, r12.xyzx
        mov r12.xyz, -r12.xyzx
        add r12.xyz, r12.xyzx, r13.xyzx
        dp3 r12.w, r12.xyzx, r12.xyzx
        rsq r12.w, r12.w
        mul r12.xyz, r12.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
        mul r13.xyz, r11.yzxy, r12.zxyz
        mul r14.xyz, r11.zxyz, r12.yzxy
        mov r14.xyz, -r14.xyzx
        add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
        sincos null, r12.w, r9.z
        mul r12.xyz, r12.wwww, r12.xyzx
        mul r12.xyz, r9.wwww, r12.xyzx
        sincos r9.z, null, r9.z
        mul r13.xyz, r9.zzzz, r13.xyzx
        mul r13.xyz, r9.wwww, r13.xyzx
        add r12.xyz, r12.xyzx, r13.xyzx
        itof r9.z, l(1)
        mov r9.w, -r11.w
        add r9.z, r9.w, r9.z
        sqrt r9.z, r9.z
        mul r11.xyz, r9.zzzz, r11.xyzx
        add r11.xyz, r11.xyzx, r12.xyzx
        dp3 r9.z, r11.xyzx, r11.xyzx
        rsq r9.z, r9.z
        mul r3.xyz, r9.zzzz, r11.xyzx  // r3.x <- <randomHemisphereDirection return value>.x; r3.y <- <randomHemisphereDirection return value>.y; r3.z <- <randomHemisphereDirection return value>.z

#line 323
        mov r1.z, r1.z  // r1.z <- rand_counter
        mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
      endif 
      if_z r7.x
        mov r7.x, l(2)
        ieq r7.x, r7.x, r10.w
        if_nz r7.x
          mul r11.xyz, r1.yyyy, r6.yzwy
          add r2.xyz, r10.xyzx, r11.xyzx
          dp3 r9.z, r3.xyzx, r6.yzwy
          add r9.z, r9.z, r9.z
          mov r9.z, -r9.z
          mul r11.xyz, r6.yzwy, r9.zzzz
          add r11.xyz, r3.xyzx, r11.xyzx
          dp3 r9.z, r11.xyzx, r11.xyzx
          rsq r9.z, r9.z
          mul r3.xyz, r9.zzzz, r11.xyzx
        endif 

#line 334
        if_z r7.x
          mov r7.x, l(3)
          ieq r7.x, r7.x, r10.w
          if_nz r7.x
            mul r11.xyz, r1.yyyy, r6.yzwy
            add r2.xyz, r10.xyzx, r11.xyzx
            nop 
            dp3 r9.z, r3.xyzx, r6.yzwy
            add r9.z, r9.z, r9.z
            mov r9.z, -r9.z
            mul r11.xyz, r6.yzwy, r9.zzzz
            add r11.xyz, r3.xyzx, r11.xyzx
            dp3 r9.z, r11.xyzx, r11.xyzx
            rsq r9.z, r9.z
            mul r11.xyz, r9.zzzz, r11.xyzx  // r11.x <- r.x; r11.y <- r.y; r11.z <- r.z; r11.x <- r.x; r11.y <- r.y; r11.z <- r.z
            mov r7.z, r7.z  // r7.z <- theta; r7.z <- theta
            mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
            mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
            nop 
            itof r9.zw, r1.zzzz
            mul r9.zw, r4.xxxy, r9.zzzw  // r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y; r9.z <- uv.x; r9.w <- uv.y

#line 203
            dp2 r9.z, r9.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
            sincos r9.z, null, r9.z
            mul r9.z, r9.z, l(43758.546875)
            frc r9.z, r9.z  // r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>; r9.z <- <random return value>

#line 222
            mul r9.z, r9.z, l(6.283185)  // r9.z <- r1; r9.z <- r1
            iadd r9.w, r1.z, l(1)  // r9.w <- c; r9.w <- c
            sincos r11.w, null, r7.z
            sincos r12.x, null, r7.z
            mul r11.w, r11.w, r12.x
            nop 
            itof r12.xy, r9.wwww
            mul r12.xy, r4.xyxx, r12.xyxx  // r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y; r12.x <- uv.x; r12.y <- uv.y

#line 203
            dp2 r12.x, r12.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
            sincos r12.x, null, r12.x
            mul r12.x, r12.x, l(43758.546875)
            frc r12.x, r12.x  // r12.x <- <random return value>; r12.x <- <random return value>; r12.x <- <random return value>

#line 223
            mul r11.w, r11.w, r12.x  // r11.w <- r2; r11.w <- r2
            iadd r1.z, r9.w, l(1)  // r1.z <- c; r1.z <- c
            sqrt r9.w, r11.w  // r9.w <- r2s; r9.w <- r2s
            mov r11.xyz, r11.xyzx  // r11.x <- w.x; r11.y <- w.y; r11.z <- w.z; r11.x <- w.x; r11.y <- w.y; r11.z <- w.z
            mov r12.x, -r11.x
            max r12.x, r11.x, r12.x
            lt r12.x, l(0.100000), r12.x
            itof r12.yzw, l(0, 0, 0, 1)
            itof r13.xyz, l(0, 1, 0, 0)
            movc r12.xyz, r12.xxxx, r12.yzwy, r13.xyzx
            mul r13.xyz, r11.zxyz, r12.zxyz
            mul r12.xyz, r11.yzxy, r12.xyzx
            mov r12.xyz, -r12.xyzx
            add r12.xyz, r12.xyzx, r13.xyzx
            dp3 r12.w, r12.xyzx, r12.xyzx
            rsq r12.w, r12.w
            mul r12.xyz, r12.wwww, r12.xyzx  // r12.x <- u.x; r12.y <- u.y; r12.z <- u.z; r12.x <- u.x; r12.y <- u.y; r12.z <- u.z
            mul r13.xyz, r11.yzxy, r12.zxyz
            mul r14.xyz, r11.zxyz, r12.yzxy
            mov r14.xyz, -r14.xyzx
            add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- v.x; r13.y <- v.y; r13.z <- v.z; r13.x <- v.x; r13.y <- v.y; r13.z <- v.z
            sincos null, r12.w, r9.z
            mul r12.xyz, r12.wwww, r12.xyzx
            mul r12.xyz, r9.wwww, r12.xyzx
            sincos r9.z, null, r9.z
            mul r13.xyz, r9.zzzz, r13.xyzx
            mul r13.xyz, r9.wwww, r13.xyzx
            add r12.xyz, r12.xyzx, r13.xyzx
            itof r9.z, l(1)
            mov r9.w, -r11.w
            add r9.z, r9.w, r9.z
            sqrt r9.z, r9.z
            mul r11.xyz, r9.zzzz, r11.xyzx
            add r11.xyz, r11.xyzx, r12.xyzx
            dp3 r9.z, r11.xyzx, r11.xyzx
            rsq r9.z, r9.z
            mul r3.xyz, r9.zzzz, r11.xyzx  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 337
            mov r1.z, r1.z
            mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
          endif 
          if_z r7.x
            mov r7.x, l(5)
            ieq r7.x, r7.x, r10.w
            if_nz r7.x
              itof r9.z, l(1)
              div r9.z, r9.z, r7.y
              movc r9.z, r5.w, r7.y, r9.z  // r9.z <- n
              mul r11.xyz, r1.yyyy, r6.yzwy
              mov r11.xyz, -r11.xyzx
              add r2.xyz, r10.xyzx, r11.xyzx
              dp3 r9.w, r3.xyzx, r6.yzwy
              mul r11.x, r9.w, r9.w
              mul r11.y, r9.z, r9.z
              mov r11.x, -r11.x
              add r11.x, r11.x, l(1.000000)
              mul r11.x, r11.x, r11.y
              mov r11.x, -r11.x
              add r11.x, r11.x, l(1.000000)
              sqrt r11.y, r11.x
              mul r9.w, r9.w, r9.z
              add r9.w, r11.y, r9.w
              ge r11.x, r11.x, l(0.000000)
              mul r11.yzw, r3.xxyz, r9.zzzz
              mul r12.xyz, r6.yzwy, r9.wwww
              mov r12.xyz, -r12.xyzx
              add r11.yzw, r11.yyzw, r12.xxyz
              movc r11.xyz, r11.xxxx, r11.yzwy, l(0,0,0,0)
              dp3 r9.z, r11.xyzx, r11.xyzx
              rsq r9.z, r9.z
              mul r3.xyz, r9.zzzz, r11.xyzx
            endif 

#line 349
            if_z r7.x
              mov r7.x, l(6)
              ieq r7.x, r7.x, r10.w
              if_nz r7.x
                itof r7.x, l(1)
                div r7.x, r7.x, r7.y
                movc r5.w, r5.w, r7.y, r7.x  // r5.w <- n
                mul r11.xyz, r1.yyyy, r6.yzwy
                mov r11.xyz, -r11.xyzx
                add r2.xyz, r10.xyzx, r11.xyzx
                nop 
                dp3 r1.y, r3.xyzx, r6.yzwy
                mul r7.x, r1.y, r1.y
                mul r7.y, r5.w, r5.w
                mov r7.x, -r7.x
                add r7.x, r7.x, l(1.000000)
                mul r7.x, r7.x, r7.y
                mov r7.x, -r7.x
                add r7.x, r7.x, l(1.000000)
                sqrt r7.y, r7.x
                mul r1.y, r1.y, r5.w
                add r1.y, r7.y, r1.y
                ge r7.x, r7.x, l(0.000000)
                mul r10.xyz, r3.xyzx, r5.wwww
                mul r6.yzw, r6.yyzw, r1.yyyy
                mov r6.yzw, -r6.yyzw
                add r6.yzw, r6.yyzw, r10.xxyz
                movc r6.yzw, r7.xxxx, r6.yyzw, l(0,0,0,0)
                dp3 r1.y, r6.yzwy, r6.yzwy
                rsq r1.y, r1.y
                mul r6.yzw, r1.yyyy, r6.yyzw  // r6.y <- r.x; r6.z <- r.y; r6.w <- r.z; r6.y <- r.x; r6.z <- r.y; r6.w <- r.z
                mov r7.z, r7.z  // r7.z <- theta; r7.z <- theta
                mov r4.xy, r4.xyxx  // r4.x <- seed.x; r4.y <- seed.y; r4.x <- seed.x; r4.y <- seed.y
                mov r1.z, r1.z  // r1.z <- c; r1.z <- c

#line 222
                nop 
                itof r7.xy, r1.zzzz
                mul r7.xy, r4.xyxx, r7.xyxx  // r7.x <- uv.x; r7.y <- uv.y; r7.x <- uv.x; r7.y <- uv.y

#line 203
                dp2 r1.y, r7.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                sincos r1.y, null, r1.y
                mul r1.y, r1.y, l(43758.546875)
                frc r1.y, r1.y  // r1.y <- <random return value>; r1.y <- <random return value>

#line 222
                mul r1.y, r1.y, l(6.283185)  // r1.y <- r1; r1.y <- r1
                iadd r1.z, r1.z, l(1)
                sincos r5.w, null, r7.z
                sincos r7.x, null, r7.z
                mul r5.w, r5.w, r7.x
                nop 
                itof r7.xy, r1.zzzz
                mul r4.xy, r4.xyxx, r7.xyxx  // r4.x <- uv.x; r4.y <- uv.y

#line 203
                dp2 r1.z, r4.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                sincos r1.z, null, r1.z
                mul r1.z, r1.z, l(43758.546875)
                frc r1.z, r1.z  // r1.z <- <random return value>

#line 223
                mul r1.z, r1.z, r5.w  // r1.z <- r2; r1.z <- r2
                sqrt r4.x, r1.z  // r4.x <- r2s; r4.x <- r2s
                mov r6.yzw, r6.yyzw  // r6.y <- w.x; r6.z <- w.y; r6.w <- w.z; r6.y <- w.x; r6.z <- w.y; r6.w <- w.z
                mov r4.y, -r6.y
                max r4.y, r4.y, r6.y
                lt r4.y, l(0.100000), r4.y
                itof r7.xyz, l(0, 0, 1, 0)
                itof r10.xyz, l(0, 1, 0, 0)
                movc r7.xyz, r4.yyyy, r7.xyzx, r10.xyzx
                mul r10.xyz, r6.wyzw, r7.zxyz
                mul r7.xyz, r6.zwyz, r7.xyzx
                mov r7.xyz, -r7.xyzx
                add r7.xyz, r7.xyzx, r10.xyzx
                dp3 r4.y, r7.xyzx, r7.xyzx
                rsq r4.y, r4.y
                mul r7.xyz, r4.yyyy, r7.xyzx  // r7.x <- u.x; r7.y <- u.y; r7.z <- u.z; r7.x <- u.x; r7.y <- u.y; r7.z <- u.z
                mul r10.xyz, r6.zwyz, r7.zxyz
                mul r11.xyz, r6.wyzw, r7.yzxy
                mov r11.xyz, -r11.xyzx
                add r10.xyz, r10.xyzx, r11.xyzx  // r10.x <- v.x; r10.y <- v.y; r10.z <- v.z; r10.x <- v.x; r10.y <- v.y; r10.z <- v.z
                sincos null, r4.y, r1.y
                mul r7.xyz, r4.yyyy, r7.xyzx
                mul r7.xyz, r4.xxxx, r7.xyzx
                sincos r1.y, null, r1.y
                mul r10.xyz, r1.yyyy, r10.xyzx
                mul r10.xyz, r4.xxxx, r10.xyzx
                add r7.xyz, r7.xyzx, r10.xyzx
                itof r1.y, l(1)
                mov r1.z, -r1.z
                add r1.y, r1.z, r1.y
                sqrt r1.y, r1.y
                mul r6.yzw, r1.yyyy, r6.yyzw
                add r6.yzw, r6.yyzw, r7.xxyz
                dp3 r1.y, r6.yzwy, r6.yzwy
                rsq r1.y, r1.y
                mul r3.xyz, r1.yyyy, r6.yzwy  // r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z; r3.x <- <randomConeDirection return value>.x; r3.y <- <randomConeDirection return value>.y; r3.z <- <randomConeDirection return value>.z

#line 353
                mov r3.xyz, r3.xyzx  // r3.x <- raydir.x; r3.y <- raydir.y; r3.z <- raydir.z
              endif 
            endif 
          endif 
        endif 
      endif 
    endif 
    or r1.y, r8.w, r6.x
  else   // Prior locations: r1.y <- bias; r1.z <- rand_counter; r5.w <- nearest_dist; r6.w <- nearest_index; r7.x <- nearest_type; r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z; r7.y <- nearest_mtl.ior; r7.z <- nearest_mtl.gloss_angle; r11.x <- j; r1.y <- bias
    mov r1.y, l(-1)
  endif 
  and r1.y, r1.y, r4.w
  or r1.y, r9.y, r1.y
  and r1.z, r4.w, r7.w
  or r3.w, r9.x, r1.z
else   // Prior locations: r1.y <- bias; r1.z <- rand_counter; r1.y <- bias
  mov r1.y, l(-1)
endif 

#line 260
not r1.y, r1.y
not r1.z, r3.w
and r1.y, r1.z, r1.y
and r1.y, r1.y, r4.z
max r1.z, r5.y, r5.x
max r1.z, r5.z, r1.z
lt r1.x, r1.x, r1.z
and r1.x, r1.x, r1.y
if_nz r1.x

#line 263
  mov r1.x, l(0)  // r1.x <- nearest_index
  mov r1.y, l(0)  // r1.y <- nearest_type
  itof r4.xyz, l(0, 0, 0, 0)  // r4.x <- nearest_mtl.emissive_color.x; r4.y <- nearest_mtl.emissive_color.y; r4.z <- nearest_mtl.emissive_color.z
  mov r1.z, l(0)  // r1.z <- nearest_mtl.surface_type

#line 268
  mov r4.w, l(0)  // r4.w <- i
  mov r6.xyz, r4.xyzx  // r6.x <- nearest_mtl.emissive_color.x; r6.y <- nearest_mtl.emissive_color.y; r6.z <- nearest_mtl.emissive_color.z
  mov r5.w, r0.x  // r5.w <- nearest_dist
  mov r6.w, r1.x  // r6.w <- nearest_index
  mov r7.x, r1.y  // r7.x <- nearest_type
  mov r7.y, r1.z  // r7.y <- nearest_mtl.surface_type
  mov r7.z, r4.w  // r7.z <- i
  loop 
    ult r7.w, r7.z, r1.w
    breakc_z r7.w
    nop 
    imul null, r7.w, r7.z, l(8)
    mov r9.xyz, x0[r7.w + 5].xyzx
    mov r7.w, x0[r7.w + 7].x
    mov r9.xyz, r9.xyzx  // r9.x <- sph.center.x; r9.y <- sph.center.y; r9.z <- sph.center.z
    mov r7.w, r7.w  // r7.w <- sph.radiusSq
    mov r10.xyz, r2.xyzx  // r10.x <- rayorig.x; r10.y <- rayorig.y; r10.z <- rayorig.z
    mov r11.xyz, r3.xyzx  // r11.x <- raydir.x; r11.y <- raydir.y; r11.z <- raydir.z

#line 92
    mov r10.xyz, -r10.xyzx
    add r9.xyz, r9.xyzx, r10.xyzx  // r9.x <- l.x; r9.y <- l.y; r9.z <- l.z

#line 95
    dp3 r8.w, r9.xyzx, r11.xyzx  // r8.w <- tca
    itof r9.w, l(0)
    lt r9.w, r8.w, r9.w
    if_nz r9.w
      nop 
      mov r10.x, l(0)  // r10.x <- i; r10.x <- i; r10.x <- i; r10.x <- i; r10.x <- i
      itof r10.y, l(0)  // r10.y <- d; r10.y <- d; r10.y <- d; r10.y <- d; r10.y <- d

#line 54
      mov r10.x, r10.x  // r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection
      mov r10.y, r10.y  // r10.y <- new_intersect.dist; r10.y <- new_intersect.dist; r10.y <- new_intersect.dist; r10.y <- new_intersect.dist; r10.y <- new_intersect.dist
      mov r10.x, r10.x  // r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection
      mov r10.y, r10.y  // r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist

#line 98
      mov r10.xy, r10.xyxx  // r10.x <- <sphereGetIntersect return value>.intersection; r10.y <- <sphereGetIntersect return value>.dist
    endif 

#line 102
    if_z r9.w
      dp3 r9.x, r9.xyzx, r9.xyzx
      mul r9.y, r8.w, r8.w
      mov r9.y, -r9.y
      add r9.x, r9.y, r9.x  // r9.x <- d2
      lt r9.y, r7.w, r9.x
      if_nz r9.y
        nop 
        mov r10.x, l(0)  // r10.x <- i; r10.x <- i; r10.x <- i; r10.x <- i
        itof r10.y, l(0)  // r10.y <- d; r10.y <- d; r10.y <- d; r10.y <- d

#line 54
        mov r10.x, r10.x  // r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection
        mov r10.y, r10.y  // r10.y <- new_intersect.dist; r10.y <- new_intersect.dist; r10.y <- new_intersect.dist; r10.y <- new_intersect.dist
        mov r10.x, r10.x  // r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection
        mov r10.y, r10.y  // r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist

#line 105
        mov r10.xy, r10.xyxx
      endif 

#line 109
      if_z r9.y
        mov r9.x, -r9.x
        add r7.w, r7.w, r9.x
        sqrt r7.w, r7.w  // r7.w <- thc
        mov r9.x, -r7.w
        add r10.y, r8.w, r9.x  // r10.y <- d
        itof r9.x, l(0)
        lt r9.x, r10.y, r9.x
        if_nz r9.x
          add r10.y, r7.w, r8.w
        endif 
        nop 
        mov r10.x, l(-1)  // r10.x <- i; r10.x <- i; r10.x <- i
        mov r10.y, r10.y  // r10.y <- d; r10.y <- d; r10.y <- d

#line 54
        mov r10.x, r10.x  // r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection; r10.x <- new_intersect.intersection
        mov r10.y, r10.y  // r10.y <- new_intersect.dist; r10.y <- new_intersect.dist; r10.y <- new_intersect.dist
        mov r10.x, r10.x  // r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection; r10.x <- <createIntersect return value>.intersection
        mov r10.y, r10.y  // r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist; r10.y <- <createIntersect return value>.dist

#line 116
        mov r10.xy, r10.xyxx  // r10.y <- <sphereGetIntersect return value>.dist
      endif 
    endif 

#line 270
    mov r10.y, r10.y  // r10.y <- curIntersect.dist
    if_nz r10.x
      lt r7.w, r10.y, r5.w
      if_nz r7.w
        mov r5.w, r10.y
        mov r6.w, r7.z
        mov r7.x, l(1)
        imul null, r7.w, r7.z, l(8)
        mov r6.xyz, x0[r7.w + 1].xyzx
        mov r7.y, x0[r7.w + 4].x
      endif 
    endif 

#line 281
    iadd r7.z, r7.z, l(1)
  endloop 
  mov r0.x, l(0)  // r0.x <- j
  mov r1.xyz, r6.xyzx  // r1.x <- nearest_mtl.emissive_color.x; r1.y <- nearest_mtl.emissive_color.y; r1.z <- nearest_mtl.emissive_color.z
  mov r1.w, r5.w  // r1.w <- nearest_dist
  mov r4.x, r6.w  // r4.x <- nearest_index
  mov r4.y, r7.x  // r4.y <- nearest_type
  mov r4.z, r7.y  // r4.z <- nearest_mtl.surface_type
  mov r4.w, r0.x  // r4.w <- j
  loop 
    ult r7.z, r4.w, r2.w
    breakc_z r7.z
    nop 
    imul null, r7.z, r4.w, l(9)
    mov r9.xyz, x1[r7.z + 5].xyzx
    mov r10.xyz, x1[r7.z + 6].xyzx
    mov r9.xyz, r9.xyzx  // r9.x <- pln.normal.x; r9.y <- pln.normal.y; r9.z <- pln.normal.z
    mov r10.xyz, r10.xyzx  // r10.x <- pln.pnt.x; r10.y <- pln.pnt.y; r10.z <- pln.pnt.z
    mov r11.xyz, r2.xyzx  // r11.x <- rayorig.x; r11.y <- rayorig.y; r11.z <- rayorig.z
    mov r12.xyz, r3.xyzx  // r12.x <- raydir.x; r12.y <- raydir.y; r12.z <- raydir.z

#line 154
    dp3 r7.z, r9.xyzx, r12.xyzx  // r7.z <- denom
    lt r7.w, l(0.000001), r7.z
    if_nz r7.w
      mov r11.xyz, -r11.xyzx
      add r10.xyz, r10.xyzx, r11.xyzx  // r10.x <- origintopoint.x; r10.y <- origintopoint.y; r10.z <- origintopoint.z
      dp3 r7.w, r10.xyzx, r9.xyzx
      div r9.y, r7.w, r7.z  // r9.y <- d
      itof r7.z, l(0)
      ge r7.z, r9.y, r7.z
      if_nz r7.z
        nop 
        mov r9.x, l(-1)  // r9.x <- i; r9.x <- i
        mov r9.y, r9.y  // r9.y <- d; r9.y <- d

#line 54
        mov r9.x, r9.x  // r9.x <- new_intersect.intersection; r9.x <- new_intersect.intersection
        mov r9.y, r9.y  // r9.y <- new_intersect.dist; r9.y <- new_intersect.dist
        mov r9.x, r9.x  // r9.x <- <createIntersect return value>.intersection; r9.x <- <createIntersect return value>.intersection
        mov r9.y, r9.y  // r9.y <- <createIntersect return value>.dist; r9.y <- <createIntersect return value>.dist

#line 159
        mov r9.xy, r9.xyxx  // r9.x <- <planeGetIntersect return value>.intersection; r9.y <- <planeGetIntersect return value>.dist
      endif 
    else   // Prior locations: r9.x <- pln.normal.x; r9.y <- pln.normal.y; r10.x <- pln.pnt.x; r10.y <- pln.pnt.y; r10.z <- pln.pnt.z; r11.x <- rayorig.x; r11.y <- rayorig.y; r11.z <- rayorig.z; r7.z <- denom
      mov r7.z, l(0)
    endif 
    if_z r7.z  // r9.x <- <planeGetIntersect return value>.intersection; r9.y <- <planeGetIntersect return value>.dist
      nop 
      mov r9.x, l(0)  // r9.x <- i
      itof r9.y, l(0)  // r9.y <- d

#line 54
      mov r9.x, r9.x  // r9.x <- new_intersect.intersection
      mov r9.y, r9.y  // r9.y <- new_intersect.dist
      mov r9.x, r9.x  // r9.x <- <createIntersect return value>.intersection
      mov r9.y, r9.y  // r9.y <- <createIntersect return value>.dist

#line 162
      mov r9.xy, r9.xyxx
    endif 

#line 284
    mov r9.y, r9.y  // r9.y <- curIntersect.dist
    if_nz r9.x
      lt r7.z, r9.y, r1.w
      if_nz r7.z
        mov r1.w, r9.y
        mov r4.x, r4.w
        mov r4.y, l(2)
        imul null, r7.z, r4.w, l(9)
        mov r1.xyz, x1[r7.z + 1].xyzx
        mov r4.z, x1[r7.z + 4].x
      endif 
    endif 

#line 295
    iadd r4.w, r4.w, l(1)
  endloop 

#line 298
  mov r0.x, l(0)
  ieq r2.xy, r0.xxxx, r4.yyyy
  if_z r4.y
    mov r8.xyz, r0.yzwy
  endif 
  not r0.x, r2.y
  not r0.y, r2.x
  and r0.x, r0.x, r0.y
  not r0.y, r0.x
  if_nz r0.x
    mov r0.z, l(4)
    ieq r0.z, r0.z, r4.z
    if_nz r0.z
      mul r5.xyz, r1.xyzx, r5.xyzx
    endif 

#line 310
    if_z r0.z
      mov r0.z, l(1)
      ieq r0.z, r0.z, r4.y
      nop 
      imul null, r0.w, r4.x, l(8)
      mov r1.xyz, x0[r0.w + 0].xyzx  // r1.x <- sph.mtl.surface_color.x; r1.y <- sph.mtl.surface_color.y; r1.z <- sph.mtl.surface_color.z

#line 87
      mov r1.xyz, r1.xyzx  // r1.x <- <sphereGetSurfaceColor return value>.x; r1.y <- <sphereGetSurfaceColor return value>.y; r1.z <- <sphereGetSurfaceColor return value>.z

#line 311
      nop 
      imul null, r0.w, r4.x, l(9)
      mov r2.yzw, x1[r0.w + 0].xxyz  // r2.y <- pln.mtl.surface_color.x; r2.z <- pln.mtl.surface_color.y; r2.w <- pln.mtl.surface_color.z

#line 149
      mov r2.yzw, r2.yyzw  // r2.y <- <planeGetSurfaceColor return value>.x; r2.z <- <planeGetSurfaceColor return value>.y; r2.w <- <planeGetSurfaceColor return value>.z

#line 311
      movc r1.xyz, r0.zzzz, r1.xyzx, r2.yzwy  // r1.x <- chit.x; r1.y <- chit.y; r1.z <- chit.z
      mul r5.xyz, r1.xyzx, r5.xyzx
      nop 
      nop 

#line 320
      mov r0.z, l(1)
      ieq r0.z, r0.z, r4.z
      if_nz r0.z

#line 323
        nop 

#line 209
        nop 
        nop 

#line 325
      endif 
      if_z r0.z
        mov r0.z, l(2)
        ieq r0.z, r0.z, r4.z

#line 334
        if_z r0.z
          mov r0.z, l(3)
          ieq r0.z, r0.z, r4.z
          if_nz r0.z

#line 337
            nop 

#line 222
            nop 
            nop 

#line 339
          endif 
          if_z r0.z
            mov r0.z, l(5)
            ieq r0.z, r0.z, r4.z

#line 349
            if_z r0.z
              mov r0.z, l(6)
              ieq r0.z, r0.z, r4.z
              if_nz r0.z

#line 353
                nop 

#line 222
                nop 
                nop 

#line 355
              endif 
            endif 
          endif 
        endif 
      endif 
    endif 
  endif 
  and r0.x, r0.y, r0.x
  or r3.w, r2.x, r0.x
endif 
if_z r3.w
  mov r8.xyz, r5.xyzx
endif 

#line 11 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\path_tr"
mov r8.xyz, r8.xyzx  // r8.x <- newSample.x; r8.y <- newSample.y; r8.z <- newSample.z
itof r0.xyz, cb2[2].yyyy
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
mul r0.xyz, r0.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, r8.xyzx
iadd r0.w, cb2[2].y, l(1)
itof r1.xyz, r0.wwww
div r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- out_color.x; r0.y <- out_color.y; r0.z <- out_color.z
itof r0.w, l(1)  // r0.w <- out_color.w
mov o0.xyzw, r0.xyzw
ret 
// Approximately 5445 instruction slots used
