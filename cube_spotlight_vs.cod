//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer ObjectUniform
// {
//
//   float4x4 M;                        // Offset:    0 Size:    64
//   float4x4 M_INV;                    // Offset:   64 Size:    64
//   float4x4 M_INV_TRANS;              // Offset:  128 Size:    64 [unused]
//
// }
//
// cbuffer FrameUniform
// {
//
//   float4x4 V;                        // Offset:    0 Size:    64
//   float4x4 V_INV;                    // Offset:   64 Size:    64 [unused]
//   float4x4 P;                        // Offset:  128 Size:    64 [unused]
//   float4x4 P_INV;                    // Offset:  192 Size:    64 [unused]
//   float4x4 VP;                       // Offset:  256 Size:    64
//   float4x4 VP_INV;                   // Offset:  320 Size:    64 [unused]
//   float4x4 V_SHADOW;                 // Offset:  384 Size:    64 [unused]
//   float4x4 V_SHADOW_INV;             // Offset:  448 Size:    64 [unused]
//   float4x4 P_SHADOW;                 // Offset:  512 Size:    64 [unused]
//   float4x4 P_SHADOW_INV;             // Offset:  576 Size:    64 [unused]
//   float4x4 VP_SHADOW;                // Offset:  640 Size:    64 [unused]
//   float4x4 VP_INV_SHADOW;            // Offset:  704 Size:    64 [unused]
//   float3 CAMERA_POS;                 // Offset:  768 Size:    12 [unused]
//   float INTENSITY;                   // Offset:  780 Size:     4 [unused]
//   float3 CAMERA_POS_SHADOW;          // Offset:  784 Size:    12 [unused]
//   uint FRAME_NUM;                    // Offset:  796 Size:     4 [unused]
//   float2 TEXTURE_SIZE;               // Offset:  800 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ObjectUniform                     cbuffer      NA          NA    0        1
// FrameUniform                      cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// MYPOSITION               0   xyz         0     NONE   float   xyz 
// MYNORMAL                 0   xyz         1     NONE   float   xyz 
// MYUV                     0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[20], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- IN.pos.x; v0.y <- IN.pos.y; v0.z <- IN.pos.z; 
//   v1.x <- IN.nor.x; v1.y <- IN.nor.y; v1.z <- IN.nor.z; 
//   v2.x <- IN.uv.x; v2.y <- IN.uv.y; 
//   o4.x <- <main return value>.posEye.x; o4.y <- <main return value>.posEye.y; o4.z <- <main return value>.posEye.z; 
//   o3.x <- <main return value>.norW.x; o3.y <- <main return value>.norW.y; o3.z <- <main return value>.norW.z; 
//   o2.x <- <main return value>.posW.x; o2.y <- <main return value>.posW.y; o2.z <- <main return value>.posW.z; 
//   o1.x <- <main return value>.uv.x; o1.y <- <main return value>.uv.y; 
//   o0.x <- <main return value>.pos.x; o0.y <- <main return value>.pos.y; o0.z <- <main return value>.pos.z; o0.w <- <main return value>.pos.w
//
#line 24 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製作リファクタリング\?E人製作リファクタリング\?E人製?E"
mul r0.xyzw, cb0[0].xxxx, cb1[16].xyzw
mul r1.xyzw, cb0[0].yyyy, cb1[17].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[0].zzzz, cb1[18].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[0].wwww, cb1[19].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[1].xxxx, cb1[16].xyzw
mul r2.xyzw, cb0[1].yyyy, cb1[17].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[1].zzzz, cb1[18].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[1].wwww, cb1[19].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[2].xxxx, cb1[16].xyzw
mul r3.xyzw, cb0[2].yyyy, cb1[17].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[2].zzzz, cb1[18].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[2].wwww, cb1[19].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[3].xxxx, cb1[16].xyzw
mul r4.xyzw, cb0[3].yyyy, cb1[17].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[3].zzzz, cb1[18].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[3].wwww, cb1[19].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r0.xyzw, r0.xyzw, v0.xxxx
mul r1.xyzw, r1.xyzw, v0.yyyy
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r2.xyzw, v0.zzzz
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- o.pos.x; r0.y <- o.pos.y; r0.z <- o.pos.z; r0.w <- o.pos.w
mul r1.xyz, v0.xxxx, cb0[0].xyzx
mul r2.xyz, v0.yyyy, cb0[1].xyzx
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, v0.zzzz, cb0[2].xyzx
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- o.posW.x; r1.y <- o.posW.y; r1.z <- o.posW.z
mul r2.xyz, cb0[0].xxxx, cb1[0].xyzx
mul r3.xyz, cb0[0].yyyy, cb1[1].xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xyz, cb0[0].zzzz, cb1[2].xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xyz, cb0[0].wwww, cb1[3].xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xyz, cb0[1].xxxx, cb1[0].xyzx
mul r4.xyz, cb0[1].yyyy, cb1[1].xyzx
add r3.xyz, r3.xyzx, r4.xyzx
mul r4.xyz, cb0[1].zzzz, cb1[2].xyzx
add r3.xyz, r3.xyzx, r4.xyzx
mul r4.xyz, cb0[1].wwww, cb1[3].xyzx
add r3.xyz, r3.xyzx, r4.xyzx
mul r4.xyz, cb0[2].xxxx, cb1[0].xyzx
mul r5.xyz, cb0[2].yyyy, cb1[1].xyzx
add r4.xyz, r4.xyzx, r5.xyzx
mul r5.xyz, cb0[2].zzzz, cb1[2].xyzx
add r4.xyz, r4.xyzx, r5.xyzx
mul r5.xyz, cb0[2].wwww, cb1[3].xyzx
add r4.xyz, r4.xyzx, r5.xyzx
mul r5.xyz, cb0[3].xxxx, cb1[0].xyzx
mul r6.xyz, cb0[3].yyyy, cb1[1].xyzx
add r5.xyz, r5.xyzx, r6.xyzx
mul r6.xyz, cb0[3].zzzz, cb1[2].xyzx
add r5.xyz, r5.xyzx, r6.xyzx
mul r6.xyz, cb0[3].wwww, cb1[3].xyzx
add r5.xyz, r5.xyzx, r6.xyzx
mul r2.xyz, r2.xyzx, v0.xxxx
mul r3.xyz, r3.xyzx, v0.yyyy
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xyz, r4.xyzx, v0.zzzz
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- o.posEye.x; r2.y <- o.posEye.y; r2.z <- o.posEye.z

#line 35
itof r3.w, l(0)
mov r3.xyz, v1.xyzx
dp4 r4.x, r3.xyzw, cb0[4].xyzw
dp4 r4.y, r3.xyzw, cb0[5].xyzw
dp4 r4.z, r3.xyzw, cb0[6].xyzw
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r4.xyzx  // r3.x <- o.norW.x; r3.y <- o.norW.y; r3.z <- o.norW.z
mov r4.xy, v2.xyxx  // r4.x <- o.uv.x; r4.y <- o.uv.y
mov o0.xyzw, r0.xyzw
mov o2.xyz, r1.xyzx
mov o3.xyz, r3.xyzx
mov o4.xyz, r2.xyzx
mov o1.xy, r4.xyxx
ret 
// Approximately 92 instruction slots used
