//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer ObjectUniform
// {
//
//   float4x4 M;                        // Offset:    0 Size:    64
//   float4x4 M_INV;                    // Offset:   64 Size:    64
//   float4x4 M_INV_TRANS;              // Offset:  128 Size:    64 [unused]
//
// }
//
// cbuffer FrameUniform
// {
//
//   float4x4 V;                        // Offset:    0 Size:    64
//   float4x4 V_INV;                    // Offset:   64 Size:    64
//   float4x4 P;                        // Offset:  128 Size:    64 [unused]
//   float4x4 P_INV;                    // Offset:  192 Size:    64 [unused]
//   float4x4 VP;                       // Offset:  256 Size:    64 [unused]
//   float4x4 VP_INV;                   // Offset:  320 Size:    64 [unused]
//   float4x4 V_SHADOW;                 // Offset:  384 Size:    64 [unused]
//   float4x4 V_SHADOW_INV;             // Offset:  448 Size:    64 [unused]
//   float4x4 P_SHADOW;                 // Offset:  512 Size:    64 [unused]
//   float4x4 P_SHADOW_INV;             // Offset:  576 Size:    64 [unused]
//   float4x4 VP_SHADOW;                // Offset:  640 Size:    64
//   float4x4 VP_INV_SHADOW;            // Offset:  704 Size:    64 [unused]
//   float3 CAMERA_POS;                 // Offset:  768 Size:    12
//   float INTENSITY;                   // Offset:  780 Size:     4
//   float3 CAMERA_POS_SHADOW;          // Offset:  784 Size:    12 [unused]
//   uint FRAME_NUM;                    // Offset:  796 Size:     4
//   float2 TEXTURE_SIZE;               // Offset:  800 Size:     8 [unused]
//
// }
//
// cbuffer SceneUniform
// {
//
//   float4 LIGHT_COL;                  // Offset:    0 Size:    16
//   float3 LIGHT_POS;                  // Offset:   16 Size:    12
//   uint STEP;                         // Offset:   28 Size:     4
//   float3 LIGHT_DIR;                  // Offset:   32 Size:    12
//   float FAR_CLIP;                    // Offset:   44 Size:     4
//   float3 VOLUME_COL;                 // Offset:   48 Size:    12
//   float LIGHT_RADIUS;                // Offset:   60 Size:     4
//   float3 VOLUME_NOISE_SIZE;          // Offset:   64 Size:    12
//   float LIGHT_ANGLE;                 // Offset:   76 Size:     4
//   float3 VOLUME_NOISE_VEL;           // Offset:   80 Size:    12
//   float VOLUME_G;                    // Offset:   92 Size:     4
//   float2 SCREEN_SIZE;                // Offset:   96 Size:     8
//   float VOLUME_NOISE_SCALE;          // Offset:  104 Size:     4
//   float TIME_SCALE;                  // Offset:  108 Size:     4
//   float NEAR_CLIP;                   // Offset:  112 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// SamplerShadowMap                  sampler      NA          NA    1        1
// SamplerScreenDepth                sampler      NA          NA    3        1
// ShadowMap                         texture  float4          2d    1        1
// ScreenDepth                       texture  float4          2d    3        1
// ObjectUniform                     cbuffer      NA          NA    0        1
// FrameUniform                      cbuffer      NA          NA    1        1
// SceneUniform                      cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[50], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 17
//
// Initial variable locations:
//   v0.x <- IN.pos.x; v0.y <- IN.pos.y; v0.z <- IN.pos.z; v0.w <- IN.pos.w; 
//   v1.x <- IN.uv.x; v1.y <- IN.uv.y; 
//   v2.x <- IN.posW.x; v2.y <- IN.posW.y; v2.z <- IN.posW.z; 
//   v3.x <- IN.norW.x; v3.y <- IN.norW.y; v3.z <- IN.norW.z; 
//   v4.x <- IN.posEye.x; v4.y <- IN.posEye.y; v4.z <- IN.posEye.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 5 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製作リファクタリング\?E人製作リファクタリング\?E人製?E"
mov r0.xyz, cb1[48].xyzx  // r0.x <- ori.x; r0.y <- ori.y; r0.z <- ori.z
mov r1.xyz, -r0.xyzx
add r1.xyz, r1.xyzx, v2.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx  // r1.x <- dir.x; r1.y <- dir.y; r1.z <- dir.z
itof r2.xyz, l(0, 0, 0, 0)  // r2.x <- start.x; r2.y <- start.y; r2.z <- start.z
itof r3.xyz, l(0, 0, 0, 0)  // r3.x <- finish.x; r3.y <- finish.y; r3.z <- finish.z
itof r0.w, l(1)
mul r4.xyz, r0.xxxx, cb0[4].xyzx
mul r5.xyz, r0.yyyy, cb0[5].xyzx
add r4.xyz, r4.xyzx, r5.xyzx
mul r0.xyz, r0.zzzz, cb0[6].xyzx
add r0.xyz, r0.xyzx, r4.xyzx
mul r4.xyz, r0.wwww, cb0[7].xyzx
add r0.xyz, r0.xyzx, r4.xyzx  // r0.x <- ori_local.x; r0.y <- ori_local.y; r0.z <- ori_local.z
itof r0.w, l(0)
mul r4.xyz, r1.xxxx, cb0[4].xyzx
mul r5.xyz, r1.yyyy, cb0[5].xyzx
add r4.xyz, r4.xyzx, r5.xyzx
mul r5.xyz, r1.zzzz, cb0[6].xyzx
add r4.xyz, r4.xyzx, r5.xyzx
mul r5.xyz, r0.wwww, cb0[7].xyzx
add r4.xyz, r4.xyzx, r5.xyzx  // r4.x <- dir_local.x; r4.y <- dir_local.y; r4.z <- dir_local.z
nop 
mov r0.xyz, r0.xyzx
mov r4.xyz, r4.xyzx
mov r2.xyz, r2.xyzx
mov r3.xyz, r3.xyzx

#line 318 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作リファクタリング\★個人製作リファクタリング\★"
itof r0.w, l(1000)  // r0.w <- minT
itof r1.w, l(-1000)  // r1.w <- maxT
mov r2.w, l(0)  // r2.w <- result
mov r3.w, l(0)  // r3.w <- potential
mov r4.w, l(0)  // r4.w <- i
mov r5.x, r0.w  // r5.x <- minT
mov r5.y, r1.w  // r5.y <- maxT
mov r5.z, r3.w  // r5.z <- potential
mov r5.w, r4.w  // r5.w <- i
loop 
  mov r6.x, l(6)
  ult r6.x, r5.w, r6.x
  breakc_z r6.x
  itof r6.x, l(0)  // r6.x <- t
  nop 
  mov r6.yzw, r0.xxyz
  mov r7.xyz, r4.xyzx
  mov r6.x, r6.x

#line 247
  itof r8.xyz, l(0, 0, 0, 0)  // r8.x <- nor.x; r8.y <- nor.y; r8.z <- nor.z
  itof r9.xyz, l(0, 0, 0, 0)  // r9.x <- pos.x; r9.y <- pos.y; r9.z <- pos.z

#line 251
  switch r5.w
    case l(0)
    itof r8.xyz, l(0, 0, -1, 0)
    itof r9.xy, l(0, 0, 0, 0)
    mov r9.z, l(-0.500000)
    mov r8.w, l(0)
    break 
    case l(1)
    itof r8.xyz, l(1, 0, 0, 0)
    itof r9.yz, l(0, 0, 0, 0)
    mov r9.x, l(0.500000)
    mov r8.w, l(0)
    break 
    case l(2)

#line 262
    itof r8.xyz, l(0, 0, 1, 0)
    itof r9.xy, l(0, 0, 0, 0)
    mov r9.z, l(0.500000)
    mov r8.w, l(0)
    break 
    case l(3)
    itof r8.xyz, l(-1, 0, 0, 0)
    itof r9.yz, l(0, 0, 0, 0)
    mov r9.x, l(-0.500000)
    mov r8.w, l(0)
    break 
    case l(4)
    itof r8.xyz, l(0, -1, 0, 0)
    itof r9.xz, l(0, 0, 0, 0)
    mov r9.y, l(-0.500000)
    mov r8.w, l(0)
    break 

#line 273
    case l(5)
    itof r8.xyz, l(0, 1, 0, 0)
    itof r9.xz, l(0, 0, 0, 0)
    mov r9.y, l(0.500000)
    mov r8.w, l(0)
    break 
    default 
    mov r7.w, l(0)  // r7.w <- <IntersectCubeFace return value>
    mov r8.w, l(-1)
    break 
  endswitch   // r7.w <- <IntersectCubeFace return value>
  if_z r8.w
    dp3 r8.w, r7.xyzx, r8.xyzx
    itof r9.w, l(0)
    eq r8.w, r8.w, r9.w
    if_nz r8.w
      mov r7.w, l(0)
    endif 

#line 284
    if_z r8.w
      mov r9.xyz, -r9.xyzx
      add r9.xyz, r6.yzwy, r9.xyzx
      dp3 r8.w, r9.xyzx, r8.xyzx
      mov r8.w, -r8.w
      dp3 r8.x, r7.xyzx, r8.xyzx
      div r6.x, r8.w, r8.x
      mul r7.xyz, r7.xyzx, r6.xxxx
      add r6.yzw, r6.yyzw, r7.xxyz  // r6.y <- p.x; r6.z <- p.y; r6.w <- p.z
      switch r5.w
        case l(0)
        case l(2)
        lt r7.y, r6.y, l(-0.500000)
        lt r7.z, l(0.500000), r6.y
        or r7.y, r7.z, r7.y
        lt r7.z, r6.z, l(-0.500000)
        or r7.y, r7.z, r7.y
        lt r7.z, l(0.500000), r6.z
        or r7.y, r7.z, r7.y
        if_nz r7.y
          mov r7.w, l(0)
          mov r7.x, l(-1)
          break 
        endif 
        mov r7.x, l(0)
        break 
        case l(1)

#line 295
        case l(3)
        lt r7.y, r6.w, l(-0.500000)
        lt r7.z, l(0.500000), r6.w
        or r7.y, r7.z, r7.y
        lt r7.z, r6.z, l(-0.500000)
        or r7.y, r7.z, r7.y
        lt r6.z, l(0.500000), r6.z
        or r6.z, r6.z, r7.y
        if_nz r6.z
          mov r7.w, l(0)
          mov r7.x, l(-1)
          break 
        endif 
        mov r7.x, l(0)
        break   // r6.z <- p.y
        case l(4)
        case l(5)
        lt r6.z, r6.y, l(-0.500000)
        lt r6.y, l(0.500000), r6.y
        or r6.y, r6.y, r6.z
        lt r6.z, r6.w, l(-0.500000)
        or r6.y, r6.z, r6.y
        lt r6.z, l(0.500000), r6.w
        or r6.y, r6.z, r6.y
        if_nz r6.y
          mov r7.w, l(0)
          mov r7.x, l(-1)
          break 
        endif 
        mov r7.x, l(0)
        break   // r6.y <- p.x; r6.z <- p.y
        default 
        mov r7.w, l(0)
        mov r7.x, l(-1)
        break 

#line 307
      endswitch 
      if_z r7.x
        mov r7.w, l(-1)
      endif 
    endif 
  endif 

#line 327
  mov r6.x, r6.x  // r6.x <- t
  if_nz r7.w
    lt r6.y, r6.x, r5.x
    if_nz r6.y
      mov r5.x, r6.x
    endif 
    lt r6.y, r5.y, r6.x
    if_nz r6.y
      mov r5.y, r6.x
    endif 
    mov r5.z, l(-1)

#line 338
  endif 
  iadd r5.w, r5.w, l(1)
endloop 
if_nz r5.z
  itof r0.w, l(0)
  ge r2.w, r5.y, r0.w
  if_nz r2.w
    itof r0.w, l(0)
    max r0.w, r5.x, r0.w  // r0.w <- minT
    mul r5.xzw, r4.xxyz, r0.wwww
    add r2.xyz, r0.xyzx, r5.xzwx
    mul r4.xyz, r4.xyzx, r5.yyyy
    add r3.xyz, r0.xyzx, r4.xyzx

#line 349
  endif 
endif 
mov r2.w, r2.w  // r2.w <- <IntersectCube return value>

#line 13 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製作リファクタリング\?E人製作リファクタリング\?E人製?E"
mov r2.xyz, r2.xyzx  // r2.x <- start.x; r2.y <- start.y; r2.z <- start.z
mov r3.xyz, r3.xyzx  // r3.x <- finish.x; r3.y <- finish.y; r3.z <- finish.z
if_z r2.w
  itof o0.xyzw, l(0, 1, 0, 1)
  ret 
endif 
itof r0.x, l(1)
mul r0.yzw, r2.xxxx, cb0[0].xxyz
mul r2.xyw, r2.yyyy, cb0[1].xyxz
add r0.yzw, r0.yyzw, r2.xxyw
mul r2.xyz, r2.zzzz, cb0[2].xyzx
add r0.yzw, r0.yyzw, r2.xxyz
mul r2.xyz, r0.xxxx, cb0[3].xyzx
add r0.xyz, r0.yzwy, r2.xyzx  // r0.x <- start.x; r0.y <- start.y; r0.z <- start.z
itof r0.w, l(1)
mul r2.xyz, r3.xxxx, cb0[0].xyzx
mul r3.xyw, r3.yyyy, cb0[1].xyxz
add r2.xyz, r2.xyzx, r3.xywx
mul r3.xyz, r3.zzzz, cb0[2].xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xyz, r0.wwww, cb0[3].xyzx
add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- finish.x; r2.y <- finish.y; r2.z <- finish.z
nop 
mov r3.xy, v0.xyxx
mov r0.xyz, r0.xyzx
mov r2.xyz, r2.xyzx

#line 213 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作リファクタリング\★個人製作リファクタリング\★"
itof r0.w, l(1)
mul r4.xyz, r0.xxxx, cb1[0].xyzx
mul r5.xyz, r0.yyyy, cb1[1].xyzx
add r4.xyz, r4.xyzx, r5.xyzx
mul r5.xyz, r0.zzzz, cb1[2].xyzx
add r4.xyz, r4.xyzx, r5.xyzx
mul r5.xyz, r0.wwww, cb1[3].xyzx
add r4.xyz, r4.xyzx, r5.xyzx  // r4.x <- startEye.x; r4.y <- startEye.y; r4.z <- startEye.z
itof r0.w, l(1)
mul r5.xyz, r2.xxxx, cb1[0].xyzx
mul r6.xyz, r2.yyyy, cb1[1].xyzx
add r5.xyz, r5.xyzx, r6.xyzx
mul r6.xyz, r2.zzzz, cb1[2].xyzx
add r5.xyz, r5.xyzx, r6.xyzx
mul r6.xyz, r0.wwww, cb1[3].xyzx
add r5.xyz, r5.zxyz, r6.zxyz  // r5.x <- finishEye.z; r5.y <- finishEye.x; r5.z <- finishEye.y
nop 
mov r3.xy, r3.xyxx

#line 185
div r3.xy, r3.xyxx, cb2[6].xyxx  // r3.x <- uv.x; r3.y <- uv.y
itof r0.w, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t3.yzwx, s3, r0.w
mov r0.w, r0.w  // r0.w <- screenDepth
mov r0.w, r0.w  // r0.w <- <SampleScreenDepth return value>

#line 215
mov r0.w, r0.w  // r0.w <- screenDepth
nop 
mov r0.w, r0.w

#line 108
mul r1.w, cb2[2].w, cb2[7].x
mov r2.w, -cb2[7].x
add r2.w, r2.w, cb2[2].w
mul r0.w, r0.w, r2.w
mov r0.w, -r0.w
add r0.w, r0.w, cb2[2].w
div r0.w, r1.w, r0.w  // r0.w <- <ScreenDepthToEyeDepth return value>

#line 216
mov r0.w, r0.w  // r0.w <- eyeDepth
lt r1.w, r0.w, r4.z
if_nz r1.w
  mov r2.w, l(-1)  // r2.w <- <OccludeVolume return value>
else 
  min r5.x, r0.w, r5.x
endif 
if_z r1.w  // r2.w <- <OccludeVolume return value>
  itof r0.w, l(1)
  mul r3.xyz, r4.xxxx, cb1[4].xyzx
  mul r4.xyw, r4.yyyy, cb1[5].xyxz
  add r3.xyz, r3.xyzx, r4.xywx
  mul r4.xyz, r4.zzzz, cb1[6].xyzx
  add r3.xyz, r3.xyzx, r4.xyzx
  mul r4.xyz, r0.wwww, cb1[7].xyzx
  add r0.xyz, r3.xyzx, r4.xyzx
  itof r0.w, l(1)
  mul r3.xyz, r5.yyyy, cb1[4].xyzx
  mul r4.xyz, r5.zzzz, cb1[5].xyzx
  add r3.xyz, r3.xyzx, r4.xyzx
  mul r4.xyz, r5.xxxx, cb1[6].xyzx
  add r3.xyz, r3.xyzx, r4.xyzx
  mul r4.xyz, r0.wwww, cb1[7].xyzx
  add r2.xyz, r3.xyzx, r4.xyzx

#line 227
  mov r2.w, l(0)
endif 

#line 19 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製作リファクタリング\?E人製作リファクタリング\?E人製?E"
mov r0.xyz, r0.xyzx  // r0.x <- start.x; r0.y <- start.y; r0.z <- start.z
mov r2.xyz, r2.xyzx  // r2.x <- finish.x; r2.y <- finish.y; r2.z <- finish.z
if_nz r2.w
  itof o0.xyzw, l(0, 0, 0, 0)  // o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
  ret 
endif 
mov r3.xyz, -r0.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
utof r3.xyz, cb2[1].wwww
div r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- delta.x; r2.y <- delta.y; r2.z <- delta.z
itof r3.xyzw, l(0, 0, 0, 0)  // r3.x <- fogColor.x; r3.y <- fogColor.y; r3.z <- fogColor.z; r3.w <- fogColor.w
mov r0.w, l(0)  // r0.w <- i
mov r4.xyzw, r3.xyzw  // r4.x <- fogColor.x; r4.y <- fogColor.y; r4.z <- fogColor.z; r4.w <- fogColor.w
mov r1.w, r0.w  // r1.w <- i
loop 
  ult r2.w, r1.w, cb2[1].w
  breakc_z r2.w
  itof r5.xyz, r1.wwww
  mul r5.xyz, r2.xyzx, r5.xyzx
  add r5.xyz, r0.xyzx, r5.xyzx  // r5.x <- current.x; r5.y <- current.y; r5.z <- current.z
  nop 
  mov r6.x, cb1[40].x
  mov r6.y, cb1[41].x
  mov r6.z, cb1[42].x
  mov r6.w, cb1[43].x
  mov r7.x, cb1[40].y
  mov r7.y, cb1[41].y
  mov r7.z, cb1[42].y
  mov r7.w, cb1[43].y
  mov r8.x, cb1[40].z
  mov r8.y, cb1[41].z
  mov r8.z, cb1[42].z
  mov r8.w, cb1[43].z
  mov r9.x, cb1[40].w
  mov r9.y, cb1[41].w
  mov r9.z, cb1[42].w
  mov r9.w, cb1[43].w
  mov r5.xyz, r5.xyzx

#line 119 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作リファクタリング\★個人製作リファクタリング\★"
  mov r5.w, l(1.000000)
  dp4 r2.w, r6.xyzw, r5.xyzw  // r2.w <- cpos.x
  dp4 r6.x, r7.xyzw, r5.xyzw  // r6.x <- cpos.y
  dp4 r6.y, r8.xyzw, r5.xyzw  // r6.y <- cpos.z
  dp4 r5.w, r9.xyzw, r5.xyzw  // r5.w <- cpos.w
  itof r6.z, l(0)
  lt r6.z, r5.w, r6.z
  itof r6.w, l(0)
  lt r6.w, r6.y, r6.w
  or r6.z, r6.w, r6.z
  lt r6.y, r5.w, r6.y
  or r6.y, r6.y, r6.z
  lt r6.z, r5.w, r2.w
  or r6.y, r6.z, r6.y
  mov r6.z, -r5.w
  lt r2.w, r2.w, r6.z
  or r2.w, r2.w, r6.y
  lt r6.y, r5.w, r6.x
  or r2.w, r2.w, r6.y
  mov r5.w, -r5.w
  lt r5.w, r6.x, r5.w
  or r2.w, r2.w, r5.w
  not r2.w, r2.w  // r2.w <- <InFrustum return value>

#line 28 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製作リファクタリング\?E人製作リファクタリング\?E人製?E"
  nop 
  mov r5.xyz, r5.xyzx

#line 161 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作リファクタリング\★個人製作リファクタリング\★"
  mul r6.xyzw, r5.xxxx, cb1[40].xyzw
  mul r7.xyzw, r5.yyyy, cb1[41].xyzw
  add r6.xyzw, r6.xyzw, r7.xyzw
  mul r7.xyzw, r5.zzzz, cb1[42].xyzw
  add r6.xyzw, r6.xyzw, r7.xyzw
  mul r7.xyzw, cb1[43].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  add r6.xyzw, r6.xyzw, r7.xyzw  // r6.x <- cpos.x; r6.y <- cpos.y; r6.z <- cpos.z; r6.w <- cpos.w
  div r6.xyz, r6.zxyz, r6.wwww  // r6.x <- ppos.z; r6.y <- ppos.x; r6.z <- ppos.y
  add r6.yz, r6.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
  mul r6.yz, r6.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)  // r6.y <- uv.x; r6.z <- uv.y
  nop 
  mov r6.yz, r6.yyzy

#line 113
  itof r5.w, l(1)
  mov r6.w, -r6.z
  add r6.z, r5.w, r6.w  // r6.z <- <FlipV return value>.y
  mov r6.y, r6.y  // r6.y <- <FlipV return value>.x

#line 164
  itof r5.w, l(0)
  sample_l_indexable(texture2d)(float,float,float,float) r5.w, r6.yzyy, t1.yzwx, s1, r5.w
  mov r5.w, r5.w  // r5.w <- depthShadowMap
  mov r6.x, r6.x  // r6.x <- depth
  add r5.w, r5.w, l(0.000010)
  lt r5.w, r5.w, r6.x  // r5.w <- <InShadow return value>

#line 28 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製作リファクタリング\?E人製作リファクタリング\?E人製?E"
  not r5.w, r5.w
  and r2.w, r2.w, r5.w
  if_nz r2.w
    mov r6.xyz, -r5.xyzx
    add r6.xyz, r6.xyzx, cb2[1].xyzx
    dp3 r2.w, r6.xyzx, r6.xyzx
    rsq r2.w, r2.w
    mul r6.xyz, r2.wwww, r6.xyzx  // r6.x <- dir_light.x; r6.y <- dir_light.y; r6.z <- dir_light.z
    mov r7.xyz, -r1.xyzx
    dp3 r2.w, r7.xyzx, r6.xyzx  // r2.w <- cosTheta
    mul r6.xyz, cb2[5].xyzx, cb2[6].wwww
    utof r7.xyz, cb1[49].wwww
    mul r6.xyz, r6.xyzx, r7.xyzx
    add r6.xyz, r5.xyzx, r6.xyzx
    mul r6.xyz, r6.xyzx, cb2[4].xyzx  // r6.x <- noise_pos.x; r6.y <- noise_pos.y; r6.z <- noise_pos.z
    nop 
    mov r6.xyz, r6.xyzx

#line 379 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作リファクタリング\★個人製作リファクタリング\★"
    round_ni r7.xyz, r6.xyzx  // r7.x <- Pi0.x; r7.y <- Pi0.y; r7.z <- Pi0.z
    add r8.xyz, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r8.x <- Pi1.x; r8.y <- Pi1.y; r8.z <- Pi1.z
    div r7.xyz, r7.xyzx, l(289.000000, 289.000000, 289.000000, 0.000000)
    mov r9.xyz, -r7.xyzx
    max r10.xyz, r7.xyzx, r9.xyzx
    ge r7.xyz, r7.xyzx, r9.xyzx
    frc r9.xyz, r10.xyzx
    mov r10.xyz, -r9.xyzx
    movc r7.xyz, r7.xyzx, r9.xyzx, r10.xyzx
    mul r7.xyz, r7.xyzx, l(289.000000, 289.000000, 289.000000, 0.000000)  // r7.x <- Pi0.x; r7.y <- Pi0.y; r7.z <- Pi0.z
    div r8.xyz, r8.xyzx, l(289.000000, 289.000000, 289.000000, 0.000000)
    mov r9.xyz, -r8.xyzx
    max r10.xyz, r8.xyzx, r9.xyzx
    ge r8.xyz, r8.xyzx, r9.xyzx
    frc r9.xyz, r10.xyzx
    mov r10.xyz, -r9.xyzx
    movc r8.xyz, r8.xyzx, r9.xyzx, r10.xyzx
    mul r8.xyz, r8.xyzx, l(289.000000, 289.000000, 289.000000, 0.000000)  // r8.x <- Pi1.x; r8.y <- Pi1.y; r8.z <- Pi1.z
    frc r6.xyz, r6.xyzx  // r6.x <- Pf0.x; r6.y <- Pf0.y; r6.z <- Pf0.z
    mov r9.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
    add r9.xyz, r6.xyzx, r9.xyzx  // r9.x <- Pf1.x; r9.y <- Pf1.y; r9.z <- Pf1.z
    mov r10.xz, r7.xxxx  // r10.x <- ix.x; r10.z <- ix.z
    mov r10.yw, r8.xxxx  // r10.y <- ix.y; r10.w <- ix.w
    mov r11.xy, r7.yyyy  // r11.x <- iy.x; r11.y <- iy.y
    mov r11.zw, r8.yyyy  // r11.z <- iy.z; r11.w <- iy.w
    mov r7.xyzw, r7.zzzz  // r7.x <- iz0.x; r7.y <- iz0.y; r7.z <- iz0.z; r7.w <- iz0.w
    mov r8.xyzw, r8.zzzz  // r8.x <- iz1.x; r8.y <- iz1.y; r8.z <- iz1.z; r8.w <- iz1.w

#line 390
    nop 
    nop 
    mov r10.xyzw, r10.xyzw

#line 364
    mul r12.xyzw, r10.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000)
    add r12.xyzw, r12.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mul r10.xyzw, r10.xyzw, r12.xyzw
    div r10.xyzw, r10.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
    mov r12.xyzw, -r10.xyzw
    max r13.xyzw, r10.xyzw, r12.xyzw
    ge r10.xyzw, r10.xyzw, r12.xyzw
    frc r12.xyzw, r13.xyzw
    mov r13.xyzw, -r12.xyzw
    movc r10.xyzw, r10.xyzw, r12.xyzw, r13.xyzw
    mul r10.xyzw, r10.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)  // r10.x <- <permute return value>.x; r10.y <- <permute return value>.y; r10.z <- <permute return value>.z; r10.w <- <permute return value>.w

#line 390
    add r10.xyzw, r11.xyzw, r10.xyzw

#line 364
    mul r11.xyzw, r10.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000)
    add r11.xyzw, r11.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mul r10.xyzw, r10.xyzw, r11.xyzw
    div r10.xyzw, r10.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
    mov r11.xyzw, -r10.xyzw
    max r12.xyzw, r10.xyzw, r11.xyzw
    ge r10.xyzw, r10.xyzw, r11.xyzw
    frc r11.xyzw, r12.xyzw
    mov r12.xyzw, -r11.xyzw
    movc r10.xyzw, r10.xyzw, r11.xyzw, r12.xyzw
    mul r10.xyzw, r10.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)  // r10.x <- <permute return value>.x; r10.y <- <permute return value>.y; r10.z <- <permute return value>.z; r10.w <- <permute return value>.w

#line 390
    mov r10.xyzw, r10.xyzw  // r10.x <- ixy.x; r10.y <- ixy.y; r10.z <- ixy.z; r10.w <- ixy.w
    nop 
    add r7.xyzw, r7.xyzw, r10.xyzw

#line 364
    mul r11.xyzw, r7.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000)
    add r11.xyzw, r11.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mul r7.xyzw, r7.xyzw, r11.xyzw
    div r7.xyzw, r7.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
    mov r11.xyzw, -r7.xyzw
    max r12.xyzw, r7.xyzw, r11.xyzw
    ge r7.xyzw, r7.xyzw, r11.xyzw
    frc r11.xyzw, r12.xyzw
    mov r12.xyzw, -r11.xyzw
    movc r7.xyzw, r7.xyzw, r11.xyzw, r12.xyzw
    mul r7.xyzw, r7.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)  // r7.x <- <permute return value>.x; r7.y <- <permute return value>.y; r7.z <- <permute return value>.z; r7.w <- <permute return value>.w

#line 391
    mov r7.xyzw, r7.xyzw  // r7.x <- ixy0.x; r7.y <- ixy0.y; r7.z <- ixy0.z; r7.w <- ixy0.w
    nop 
    add r8.xyzw, r8.xyzw, r10.xyzw

#line 364
    mul r10.xyzw, r8.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000)
    add r10.xyzw, r10.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mul r8.xyzw, r8.xyzw, r10.xyzw
    div r8.xyzw, r8.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
    mov r10.xyzw, -r8.xyzw
    max r11.xyzw, r8.xyzw, r10.xyzw
    ge r8.xyzw, r8.xyzw, r10.xyzw
    frc r10.xyzw, r11.xyzw
    mov r11.xyzw, -r10.xyzw
    movc r8.xyzw, r8.xyzw, r10.xyzw, r11.xyzw
    mul r8.xyzw, r8.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)  // r8.x <- <permute return value>.x; r8.y <- <permute return value>.y; r8.z <- <permute return value>.z; r8.w <- <permute return value>.w

#line 392
    mov r8.xyzw, r8.xyzw  // r8.x <- ixy1.x; r8.y <- ixy1.y; r8.z <- ixy1.z; r8.w <- ixy1.w
    div r7.xyzw, r7.xyzw, l(7.000000, 7.000000, 7.000000, 7.000000)  // r7.x <- gx0.x; r7.y <- gx0.y; r7.z <- gx0.z; r7.w <- gx0.w
    round_ni r10.xyzw, r7.xyzw
    div r10.xyzw, r10.xyzw, l(7.000000, 7.000000, 7.000000, 7.000000)
    frc r10.xyzw, r10.xyzw
    mov r11.xyzw, l(-0.500000,-0.500000,-0.500000,-0.500000)
    add r10.xyzw, r10.xyzw, r11.xyzw  // r10.x <- gy0.x; r10.y <- gy0.y; r10.z <- gy0.z; r10.w <- gy0.w
    frc r7.xyzw, r7.xyzw
    mov r11.xyzw, -r7.xyzw
    max r11.xyzw, r7.xyzw, r11.xyzw
    mov r11.xyzw, -r11.xyzw
    add r11.xyzw, r11.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
    mov r12.xyzw, -r10.xyzw
    max r12.xyzw, r10.xyzw, r12.xyzw
    mov r12.xyzw, -r12.xyzw
    add r11.xyzw, r11.xywz, r12.xywz  // r11.x <- gz0.x; r11.y <- gz0.y; r11.z <- gz0.w; r11.w <- gz0.z
    ge r12.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xywz
    movc r12.xyzw, r12.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)  // r12.x <- sz0.x; r12.y <- sz0.y; r12.z <- sz0.z; r12.w <- sz0.w
    ge r13.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r13.xyzw, r13.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
    mov r14.xyzw, l(-0.500000,-0.500000,-0.500000,-0.500000)
    add r13.xyzw, r13.xyzw, r14.xyzw
    mul r13.xyzw, r12.xyzw, r13.xyzw
    mov r13.xyzw, -r13.xyzw
    add r7.xyzw, r7.xyzw, r13.xyzw
    ge r13.xyzw, r10.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r13.xyzw, r13.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
    mov r14.xyzw, l(-0.500000,-0.500000,-0.500000,-0.500000)
    add r13.xyzw, r13.xyzw, r14.xyzw
    mul r12.xyzw, r12.xyzw, r13.xyzw
    mov r12.xyzw, -r12.xyzw
    add r10.xyzw, r10.xzyw, r12.xzyw  // r10.y <- gy0.z; r10.z <- gy0.y
    div r8.xyzw, r8.xyzw, l(7.000000, 7.000000, 7.000000, 7.000000)  // r8.x <- gx1.x; r8.y <- gx1.y; r8.z <- gx1.z; r8.w <- gx1.w

#line 403
    round_ni r12.xyzw, r8.xyzw
    div r12.xyzw, r12.xyzw, l(7.000000, 7.000000, 7.000000, 7.000000)
    frc r12.xyzw, r12.xyzw
    mov r13.xyzw, l(-0.500000,-0.500000,-0.500000,-0.500000)
    add r12.xyzw, r12.xyzw, r13.xyzw  // r12.x <- gy1.x; r12.y <- gy1.y; r12.z <- gy1.z; r12.w <- gy1.w
    frc r8.xyzw, r8.xyzw
    mov r13.xyzw, -r8.xyzw
    max r13.xyzw, r8.xyzw, r13.xyzw
    mov r13.xyzw, -r13.xyzw
    add r13.xyzw, r13.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
    mov r14.xyzw, -r12.xyzw
    max r14.xyzw, r12.xyzw, r14.xyzw
    mov r14.xyzw, -r14.xyzw
    add r13.xyzw, r13.xywz, r14.xywz  // r13.x <- gz1.x; r13.y <- gz1.y; r13.z <- gz1.w; r13.w <- gz1.z
    ge r14.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r13.xywz
    movc r14.xyzw, r14.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)  // r14.x <- sz1.x; r14.y <- sz1.y; r14.z <- sz1.z; r14.w <- sz1.w
    ge r15.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r15.xyzw, r15.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
    mov r16.xyzw, l(-0.500000,-0.500000,-0.500000,-0.500000)
    add r15.xyzw, r15.xyzw, r16.xyzw
    mul r15.xyzw, r14.xyzw, r15.xyzw
    mov r15.xyzw, -r15.xyzw
    add r8.xyzw, r8.xyzw, r15.xyzw
    ge r15.xyzw, r12.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r15.xyzw, r15.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
    mov r16.xyzw, l(-0.500000,-0.500000,-0.500000,-0.500000)
    add r15.xyzw, r15.xyzw, r16.xyzw
    mul r14.xyzw, r14.xyzw, r15.xyzw
    mov r14.xyzw, -r14.xyzw
    add r12.xyzw, r12.xzyw, r14.xzyw  // r12.y <- gy1.z; r12.z <- gy1.y
    mov r14.x, r7.x  // r14.x <- g000.x
    mov r14.y, r10.x  // r14.y <- g000.y
    mov r14.z, r11.x  // r14.z <- g000.z
    mov r15.x, r7.y  // r15.x <- g100.x
    mov r15.y, r10.z  // r15.y <- g100.y
    mov r15.z, r11.y  // r15.z <- g100.z
    mov r10.x, r7.z  // r10.x <- g010.x
    mov r10.y, r10.y  // r10.y <- g010.y
    mov r10.z, r11.w  // r10.z <- g010.z
    mov r11.x, r7.w  // r11.x <- g110.x
    mov r11.y, r10.w  // r11.y <- g110.y
    mov r11.z, r11.z  // r11.z <- g110.z

#line 414
    mov r7.x, r8.x  // r7.x <- g001.x
    mov r7.y, r12.x  // r7.y <- g001.y
    mov r7.z, r13.x  // r7.z <- g001.z
    mov r16.x, r8.y  // r16.x <- g101.x
    mov r16.y, r12.z  // r16.y <- g101.y
    mov r16.z, r13.y  // r16.z <- g101.z
    mov r12.x, r8.z  // r12.x <- g011.x
    mov r12.y, r12.y  // r12.y <- g011.y
    mov r12.z, r13.w  // r12.z <- g011.z
    mov r13.x, r8.w  // r13.x <- g111.x
    mov r13.y, r12.w  // r13.y <- g111.y
    mov r13.z, r13.z  // r13.z <- g111.z
    nop 
    dp3 r8.x, r14.xyzx, r14.xyzx
    dp3 r8.y, r10.xyzx, r10.xyzx
    dp3 r8.z, r15.xyzx, r15.xyzx
    dp3 r8.w, r11.xyzx, r11.xyzx

#line 369
    mul r8.xyzw, r8.xyzw, l(0.853735, 0.853735, 0.853735, 0.853735)
    mov r8.xyzw, -r8.xyzw
    add r8.xyzw, r8.xyzw, l(1.792843, 1.792843, 1.792843, 1.792843)  // r8.x <- <taylorInvSqrt return value>.x; r8.y <- <taylorInvSqrt return value>.y; r8.z <- <taylorInvSqrt return value>.z; r8.w <- <taylorInvSqrt return value>.w

#line 419
    mov r8.xyzw, r8.xyzw  // r8.x <- norm0.x; r8.y <- norm0.y; r8.z <- norm0.z; r8.w <- norm0.w
    mul r14.xyz, r8.xxxx, r14.xyzx
    mul r10.xyz, r8.yyyy, r10.xyzx
    mul r8.xyz, r8.zzzz, r15.xyzx  // r8.x <- g100.x; r8.y <- g100.y; r8.z <- g100.z
    mul r11.xyz, r8.wwww, r11.xyzx
    nop 
    dp3 r15.x, r7.xyzx, r7.xyzx
    dp3 r15.y, r12.xyzx, r12.xyzx
    dp3 r15.z, r16.xyzx, r16.xyzx
    dp3 r15.w, r13.xyzx, r13.xyzx

#line 369
    mul r15.xyzw, r15.xyzw, l(0.853735, 0.853735, 0.853735, 0.853735)
    mov r15.xyzw, -r15.xyzw
    add r15.xyzw, r15.xyzw, l(1.792843, 1.792843, 1.792843, 1.792843)  // r15.x <- <taylorInvSqrt return value>.x; r15.y <- <taylorInvSqrt return value>.y; r15.z <- <taylorInvSqrt return value>.z; r15.w <- <taylorInvSqrt return value>.w

#line 424
    mov r15.xyzw, r15.xyzw  // r15.x <- norm1.x; r15.y <- norm1.y; r15.z <- norm1.z; r15.w <- norm1.w
    mul r7.xyz, r7.xyzx, r15.xxxx
    mul r12.xyz, r12.xyzx, r15.yyyy
    mul r15.xyz, r15.zzzz, r16.xyzx  // r15.x <- g101.x; r15.y <- g101.y; r15.z <- g101.z
    mul r13.xyz, r13.xyzx, r15.wwww
    dp3 r14.x, r14.xyzx, r6.xyzx  // r14.x <- n000
    mov r6.w, r9.x
    dp3 r14.y, r8.yzxy, r6.yzwy  // r14.y <- n100
    mov r8.xy, r6.xzxx
    mov r8.w, r9.y
    dp3 r14.z, r10.xzyx, r8.xywx  // r14.z <- n010
    mov r8.xy, r6.wzww
    dp3 r14.w, r11.xzyx, r8.xywx  // r14.w <- n110
    mov r8.xy, r6.xyxx
    mov r8.z, r9.z
    dp3 r7.x, r7.xyzx, r8.xyzx  // r7.x <- n001

#line 435
    mov r10.xy, r6.wyww
    mov r10.z, r8.z
    dp3 r7.y, r15.xyzx, r10.xyzx  // r7.y <- n101
    dp3 r7.z, r12.xzyx, r8.xzwx  // r7.z <- n011
    dp3 r7.w, r13.xyzx, r9.xyzx  // r7.w <- n111
    nop 
    mov r6.xyz, r6.xyzx

#line 374
    mul r8.xyz, r6.xyzx, r6.xyzx
    mul r8.xyz, r6.xyzx, r8.xyzx
    mul r9.xyz, r6.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000)
    mov r10.xyz, l(-15.000000,-15.000000,-15.000000,-0.000000)
    add r9.xyz, r9.xyzx, r10.xyzx
    mul r6.xyz, r6.xyzx, r9.xyzx
    add r6.xyz, r6.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
    mul r6.xyz, r6.xyzx, r8.xyzx  // r6.x <- <fade return value>.x; r6.y <- <fade return value>.y; r6.z <- <fade return value>.z

#line 439
    mov r6.xyz, r6.xyzx  // r6.x <- fade_xyz.x; r6.y <- fade_xyz.y; r6.z <- fade_xyz.z
    mov r8.xyzw, -r14.xyzw
    add r7.xyzw, r7.xyzw, r8.xyzw
    mul r7.xyzw, r6.zzzz, r7.xyzw
    add r7.xyzw, r7.xyzw, r14.xyzw  // r7.x <- n_z.x; r7.y <- n_z.y; r7.z <- n_z.z; r7.w <- n_z.w
    mov r6.zw, -r7.xxxy
    add r6.zw, r6.zzzw, r7.zzzw
    mul r6.yz, r6.zzwz, r6.yyyy
    add r6.yz, r6.yyzy, r7.xxyx  // r6.y <- n_yz.x; r6.z <- n_yz.y
    mov r5.w, -r6.y
    add r5.w, r5.w, r6.z
    mul r5.w, r5.w, r6.x
    add r5.w, r5.w, r6.y  // r5.w <- n_xyz
    mul r5.w, r5.w, l(2.200000)  // r5.w <- <cnoise return value>

#line 33 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製作リファクタリング\?E人製作リファクタリング\?E人製?E"
    max r5.w, r5.w, l(0.000000)
    min r5.w, r5.w, l(1.000000)
    mov r6.x, l(-1.000000)
    add r5.w, r5.w, r6.x
    mul r5.w, r5.w, cb2[6].z
    add r5.w, r5.w, l(1.000000)  // r5.w <- noise
    nop 
    mov r6.x, cb2[5].w
    mov r2.w, r2.w

#line 357 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作リファクタリング\★個人製作リファクタリング\★"
    mov r6.y, -r6.x
    add r6.y, r6.y, l(1.000000)
    mov r6.z, -r6.x
    add r6.z, r6.z, l(1.000000)
    mul r6.y, r6.z, r6.y
    div r6.y, r6.y, l(4.000000)
    mul r6.y, r6.y, l(3.141593)
    mul r6.z, r6.x, r6.x
    add r6.z, r6.z, l(1.000000)
    mul r6.w, r6.x, l(2.000000)
    mul r6.w, r2.w, r6.w
    mov r6.w, -r6.w
    add r6.z, r6.w, r6.z
    mul r6.y, r6.z, r6.y
    mul r6.z, r6.x, r6.x
    add r6.z, r6.z, l(1.000000)
    mul r6.x, r6.x, l(2.000000)
    mul r2.w, r2.w, r6.x
    mov r2.w, -r2.w
    add r2.w, r2.w, r6.z
    mul r2.w, r2.w, r6.y  // r2.w <- <Phase return value>

#line 34 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製作リファクタリング\?E人製作リファクタリング\?E人製?E"
    mul r2.w, r5.w, r2.w
    nop 
    mov r5.xyz, r5.xyzx

#line 232 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作リファクタリング\★個人製作リファクタリング\★"
    mov r6.xyz, -cb2[1].xyzx
    add r6.xyz, r5.xyzx, r6.xyzx
    dp3 r5.w, r6.xyzx, r6.xyzx
    rsq r5.w, r5.w
    mul r6.xyz, r5.wwww, r6.xyzx
    dp3 r5.w, r6.xyzx, cb2[2].xyzx  // r5.w <- a
    div r6.x, cb2[4].w, l(2.000000)
    mul r6.x, r6.x, l(0.017453)
    sincos null, r6.x, r6.x  // r6.x <- b
    itof r6.y, l(0)
    lt r6.y, r5.w, r6.y
    lt r6.z, r5.w, r6.x
    or r6.y, r6.z, r6.y
    if_nz r6.y
      itof r6.z, l(0)
    endif   // r6.z <- <AttenuateSpotLight return value>
    if_z r6.y
      itof r6.y, l(0)
      div r6.w, l(1.000000), cb2[3].w
      mov r5.xyz, -r5.xyzx
      add r5.xyz, r5.xyzx, cb2[1].xyzx
      dp3 r5.x, r5.xyzx, r5.xyzx
      sqrt r5.x, r5.x
      mul r5.x, r5.x, r6.w
      mov r5.x, -r5.x
      add r5.x, r5.x, l(1.000000)
      mov r5.y, -r6.x
      add r5.y, r5.y, r5.w
      mov r5.z, -r6.x
      add r5.z, r5.z, l(1.000000)
      div r5.y, r5.y, r5.z
      max r5.y, r5.y, l(0.000000)
      min r5.y, r5.y, l(1.000000)
      mul r5.x, r5.y, r5.x
      max r6.z, r5.x, r6.y
    endif 

#line 34 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製作リファクタリング\?E人製作リファクタリング\?E人製?E"
    mul r2.w, r2.w, r6.z
    add r4.xyzw, r2.wwww, r4.xyzw
  endif 
  iadd r1.w, r1.w, l(1)
endloop 
itof r0.x, l(1)
mul r0.yzw, cb1[48].wwww, cb2[3].xxyz
mul r0.x, r0.x, cb1[48].w
itof r1.x, l(1)
mul r2.xyz, r0.yzwy, cb2[0].xyzx
mul r2.w, r0.x, r1.x
mul r0.xyzw, r4.xyzw, r2.xyzw
utof r1.xyzw, cb2[1].wwww
div r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- fogColor.x; r0.y <- fogColor.y; r0.z <- fogColor.z; r0.w <- fogColor.w
mov o0.xyzw, r0.xyzw  // o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
ret 
// Approximately 699 instruction slots used
