//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer CBBLUR
// {
//
//   float4 Weights0;                   // Offset:    0 Size:    16
//   float4 Weights1;                   // Offset:   16 Size:    16
//   float OffsetX;                     // Offset:   32 Size:     4 [unused]
//   float OffsetY;                     // Offset:   36 Size:     4
//   float w;                           // Offset:   40 Size:     4 [unused]
//   float h;                           // Offset:   44 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// TextureSampler                    sampler      NA          NA    0        1
// TextureTex                        texture  float4          2d    0        1
// CBBLUR                            cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xy          2     NONE   float   xy  
// TEXCOORD                 3     zw        2     NONE   float     zw
// TEXCOORD                 4   xy          3     NONE   float   xy  
// TEXCOORD                 5     zw        3     NONE   float     zw
// TEXCOORD                 6   xy          4     NONE   float   xy  
// TEXCOORD                 7     zw        4     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb2[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xy
dcl_input_ps linear v2.zw
dcl_input_ps linear v3.xy
dcl_input_ps linear v3.zw
dcl_input_ps linear v4.xy
dcl_input_ps linear v4.zw
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.TexCoord0.x; v1.y <- input.TexCoord0.y; v1.z <- input.TexCoord1.x; v1.w <- input.TexCoord1.y; 
//   v2.x <- input.TexCoord2.x; v2.y <- input.TexCoord2.y; v2.z <- input.TexCoord3.x; v2.w <- input.TexCoord3.y; 
//   v3.x <- input.TexCoord4.x; v3.y <- input.TexCoord4.y; v3.z <- input.TexCoord5.x; v3.w <- input.TexCoord5.y; 
//   v4.x <- input.TexCoord6.x; v4.y <- input.TexCoord6.y; v4.z <- input.TexCoord7.x; v4.w <- input.TexCoord7.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 6 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\gaussian_bl"
mov r0.xyzw, l(0,0,0,0)  // r0.x <- output.x; r0.y <- output.y; r0.z <- output.z; r0.w <- output.w
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0
mov r2.x, l(0)
mov r2.y, cb2[2].y
add r2.zw, r2.xxxy, v4.zzzw
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.zwzz, t0.xyzw, s0
add r1.xyzw, r1.xyzw, r3.xyzw
mul r1.xyzw, r1.xyzw, cb2[0].xxxx
add r0.xyzw, r0.xyzw, r1.xyzw
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.zwzz, t0.xyzw, s0
add r2.zw, r2.xxxy, v4.xxxy
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.zwzz, t0.xyzw, s0
add r1.xyzw, r1.xyzw, r3.xyzw
mul r1.xyzw, r1.xyzw, cb2[0].yyyy
add r0.xyzw, r0.xyzw, r1.xyzw
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.xyxx, t0.xyzw, s0
add r2.zw, r2.xxxy, v3.zzzw
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.zwzz, t0.xyzw, s0
add r1.xyzw, r1.xyzw, r3.xyzw
mul r1.xyzw, r1.xyzw, cb2[0].zzzz
add r0.xyzw, r0.xyzw, r1.xyzw
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.zwzz, t0.xyzw, s0
add r2.zw, r2.xxxy, v3.xxxy
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.zwzz, t0.xyzw, s0
add r1.xyzw, r1.xyzw, r3.xyzw
mul r1.xyzw, r1.xyzw, cb2[0].wwww
add r0.xyzw, r0.xyzw, r1.xyzw
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0
add r2.zw, r2.xxxy, v2.zzzw
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.zwzz, t0.xyzw, s0
add r1.xyzw, r1.xyzw, r3.xyzw
mul r1.xyzw, r1.xyzw, cb2[1].xxxx
add r0.xyzw, r0.xyzw, r1.xyzw
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.zwzz, t0.xyzw, s0
add r2.zw, r2.xxxy, v2.xxxy
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.zwzz, t0.xyzw, s0
add r1.xyzw, r1.xyzw, r3.xyzw
mul r1.xyzw, r1.xyzw, cb2[1].yyyy
add r0.xyzw, r0.xyzw, r1.xyzw
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v4.xyxx, t0.xyzw, s0
add r2.zw, r2.xxxy, v1.zzzw
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.zwzz, t0.xyzw, s0
add r1.xyzw, r1.xyzw, r3.xyzw
mul r1.xyzw, r1.xyzw, cb2[1].zzzz
add r0.xyzw, r0.xyzw, r1.xyzw
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v4.zwzz, t0.xyzw, s0
add r2.xy, r2.xyxx, v1.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t0.xyzw, s0
add r1.xyzw, r1.xyzw, r2.xyzw
mul r1.xyzw, r1.xyzw, cb2[1].wwww
add r0.xyzw, r0.xyzw, r1.xyzw

#line 18
mov o0.xyzw, r0.xyzw
ret 
// Approximately 53 instruction slots used
