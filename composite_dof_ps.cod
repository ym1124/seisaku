//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// default_sampler                   sampler      NA          NA    0        1
// scene_tex                         texture  float4          2d    0        1
// blur_tex                          texture  float4          2d    1        1
// blur_tex2                         texture  float4          2d    2        1
// depth_tex                         texture  float4          2d    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Tex.x; v1.y <- input.Tex.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 6 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\co"
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t3.xyzw, s0
mov r0.x, r0.x  // r0.x <- depth
sample_indexable(texture2d)(float,float,float,float) r0.yzw, v1.xyxx, t0.wxyz, s0
mov r0.yzw, r0.yyzw  // r0.y <- scene_color.x; r0.z <- scene_color.y; r0.w <- scene_color.z
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t1.xyzw, s0
mov r1.xyz, r1.xyzx  // r1.x <- blur_color.x; r1.y <- blur_color.y; r1.z <- blur_color.z
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t2.xyzw, s0
mov r2.xyz, r2.xyzx  // r2.x <- blur_color2.x; r2.y <- blur_color2.y; r2.z <- blur_color2.z
lt r1.w, l(0.300000), r0.x
if_nz r1.w
  mov r1.w, -r0.x
  add r1.w, r1.w, l(1.000000)
  mov r3.xyz, -r0.yzwy
  add r2.xyz, r2.xyzx, r3.xyzx
  mul r2.xyz, r1.wwww, r2.xyzx
  add r2.xyz, r0.yzwy, r2.xyzx  // r2.x <- color.x; r2.y <- color.y; r2.z <- color.z
else   // Prior locations: r2.x <- blur_color2.x; r2.y <- blur_color2.y; r2.z <- blur_color2.z
  mov r0.x, -r0.x
  add r0.x, r0.x, l(1.000000)
  mov r3.xyz, -r0.yzwy
  add r1.xyz, r1.xyzx, r3.xyzx
  mul r1.xyz, r0.xxxx, r1.xyzx
  add r2.xyz, r0.yzwy, r1.xyzx  // r2.x <- color.x; r2.y <- color.y; r2.z <- color.z
endif 

#line 17
mov o0.xyz, r2.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 27 instruction slots used
