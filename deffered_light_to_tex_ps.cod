//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANTS
// {
//
//   struct DIRECTIONAL_LIGHT
//   {
//       
//       float4 direction;              // Offset:    0
//       float4 color;                  // Offset:   16
//
//   } directional_light;               // Offset:    0 Size:    32
//   float4 ambient_color;              // Offset:   32 Size:    16
//
// }
//
// cbuffer CAMERA_CONSTANTS
// {
//
//   struct CAMERA
//   {
//       
//       float4 eye;                    // Offset:    0
//       float4 dir;                    // Offset:   16
//       row_major float4x4 camera_view;// Offset:   32
//       row_major float4x4 camera_projection;// Offset:   96
//       row_major float4x4 camera_view_projection;// Offset:  160
//       row_major float4x4 inverse_camera_view;// Offset:  224
//       row_major float4x4 inverse_camera_projection;// Offset:  288
//       row_major float4x4 inverse_camera_view_projection;// Offset:  352
//
//   } camera;                          // Offset:    0 Size:   416
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DecalSampler                      sampler      NA          NA    0        1
// ColorTexture                      texture  float4          2d    0        1
// NormalTexture                     texture  float4          2d    1        1
// PositionTexture                   texture  float4          2d    2        1
// SCENE_CONSTANTS                   cbuffer      NA          NA    1        1
// CAMERA_CONSTANTS                  cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb1[3], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Tex.x; v1.y <- input.Tex.y; 
//   o1.x <- <main return value>.Specular.x; o1.y <- <main return value>.Specular.y; o1.z <- <main return value>.Specular.z; o1.w <- <main return value>.Specular.w; 
//   o0.x <- <main return value>.Diffuse.x; o0.y <- <main return value>.Diffuse.y; o0.z <- <main return value>.Diffuse.z; o0.w <- <main return value>.Diffuse.w
//
#line 6 "D:\äwèK\CåæåÍ\2îNéˆã∆\ï`âÊÉGÉìÉWÉìäJî≠\?Eêlêª?Eptrâ¸ë¢)precompile\deffered_l"
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t0.xyzw, s0
mov r0.w, r0.w  // r0.w <- Color.w
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t2.xyzw, s0
mov r1.xyz, r1.xyzx  // r1.x <- P.x; r1.y <- P.y; r1.z <- P.z
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t1.xyzw, s0
mov r2.xyz, r2.xyzx  // r2.x <- N.x; r2.y <- N.y; r2.z <- N.z

#line 12
mov r1.xyz, -r1.xyzx
add r1.xyz, r1.xyzx, cb4[0].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- E.x; r1.y <- E.y; r1.z <- E.z
dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, cb1[0].xyzx  // r3.x <- L.x; r3.y <- L.y; r3.z <- L.z

#line 16
mov r4.xyz, cb1[2].xyzx  // r4.x <- A.x; r4.y <- A.y; r4.z <- A.z

#line 19
mov r5.xyz, cb1[1].xyzx  // r5.x <- C.x; r5.y <- C.y; r5.z <- C.z
itof r6.xyz, l(1, 1, 1, 0)  // r6.x <- Kd.x; r6.y <- Kd.y; r6.z <- Kd.z
nop 
mov r2.xyz, r2.xyzx
mov r3.xyz, r3.xyzx
mov r5.xyz, r5.xyzx
mov r6.xyz, r6.xyzx

#line 10 "D:\äwèK\CåæåÍ\2îNéˆã∆\ï`âÊÉGÉìÉWÉìäJî≠\Åöå¬êlêªçÏ(ptrâ"
mov r7.xyz, -r3.xyzx
dp3 r1.w, r2.xyzx, r7.xyzx  // r1.w <- D
itof r2.w, l(0)
max r1.w, r1.w, r2.w
mul r6.xyz, r5.xyzx, r6.xyzx
mul r6.xyz, r1.wwww, r6.xyzx  // r6.x <- <Diffuse return value>.x; r6.y <- <Diffuse return value>.y; r6.z <- <Diffuse return value>.z

#line 21 "D:\äwèK\CåæåÍ\2îNéˆã∆\ï`âÊÉGÉìÉWÉìäJî≠\?Eêlêª?Eptrâ¸ë¢)precompile\deffered_l"
mov r6.xyz, r6.xyzx  // r6.x <- D.x; r6.y <- D.y; r6.z <- D.z

#line 24
itof r7.xyz, l(1, 1, 1, 0)  // r7.x <- Ks.x; r7.y <- Ks.y; r7.z <- Ks.z
nop 
mov r2.xyz, r2.xyzx
mov r3.xyz, r3.xyzx
mov r5.xyz, r5.xyzx
mov r1.xyz, r1.xyzx
mov r7.xyz, r7.xyzx

#line 28 "D:\äwèK\CåæåÍ\2îNéˆã∆\ï`âÊÉGÉìÉWÉìäJî≠\Åöå¬êlêªçÏ(ptrâ"
mov r3.xyz, -r3.xyzx
add r1.xyz, r1.xyzx, r3.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- H.x; r1.y <- H.y; r1.z <- H.z
dp3 r1.z, r1.xyzx, r2.xyzx
mov r1.xyz, r1.zzzz  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z
itof r2.xyz, l(0, 0, 0, 0)
max r1.xyz, r1.xyzx, r2.xyzx
mov r2.xyz, l(1.000000,1.000000,1.000000,0)
mul r1.xyz, r1.xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, r1.xyzx
mul r2.xyz, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z
mul r1.xyz, r7.xyzx, r1.xyzx
mul r1.xyz, r5.xyzx, r1.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z
mov r1.xyz, r1.xyzx  // r1.x <- <BlinnPhongSpecular return value>.x; r1.y <- <BlinnPhongSpecular return value>.y; r1.z <- <BlinnPhongSpecular return value>.z

#line 25 "D:\äwèK\CåæåÍ\2îNéˆã∆\ï`âÊÉGÉìÉWÉìäJî≠\?Eêlêª?Eptrâ¸ë¢)precompile\deffered_l"
mov r1.xyz, r1.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z

#line 28
add r0.xyz, r4.xyzx, r6.xyzx  // r0.x <- output.Diffuse.x; r0.y <- output.Diffuse.y; r0.z <- output.Diffuse.z
mov r0.w, r0.w  // r0.w <- output.Diffuse.w
mov r1.xyz, r1.xyzx  // r1.x <- output.Specular.x; r1.y <- output.Specular.y; r1.z <- output.Specular.z
mov r1.w, r0.w  // r1.w <- output.Specular.w
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
ret 
// Approximately 63 instruction slots used
