//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer cb
// {
//
//   int timer;                         // Offset:    0 Size:     4 [unused]
//   float2 sun_pos;                    // Offset:    4 Size:     8
//   float dummy;                       // Offset:   12 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cb                                cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb2[1], immediateIndexed
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.TexCoord.x; v1.y <- input.TexCoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 6 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile"
mov r0.xy, v1.xyxx  // r0.x <- uv.x; r0.y <- uv.y
mul r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mov r0.zw, cb2[0].yyyz  // r0.z <- mm.x; r0.w <- mm.y

#line 15
itof r1.xyz, l(0, 0, 0, 0)  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 19
mov r1.w, l(0)  // r1.w <- i
mov r2.xyz, r1.xyzx  // r2.x <- color.x; r2.y <- color.y; r2.z <- color.z
mov r2.w, r1.w  // r2.w <- i
loop 
  ilt r3.x, r2.w, l(9)
  breakc_z r3.x
  nop 
  mov r3.xy, r0.xyxx
  nop 
  itof r3.z, r2.w
  mul r3.z, r3.z, l(6000.000000)

#line 30 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)preco"
  sincos r3.z, null, r3.z
  mul r3.z, r3.z, l(1000.000000)
  frc r3.z, r3.z  // r3.z <- f
  mov r3.z, r3.z  // r3.z <- <rnd return value>

#line 20 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile"
  mul r3.z, r3.z, l(1.800000)
  log r3.z, r3.z
  mul r3.z, r3.z, l(1.100000)
  exp r3.z, r3.z
  nop 
  itof r3.w, r2.w
  mul r3.w, r3.w, l(20.000000)

#line 30 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)preco"
  sincos r3.w, null, r3.w
  mul r3.w, r3.w, l(1000.000000)
  frc r3.w, r3.w  // r3.w <- f
  mov r3.w, r3.w  // r3.w <- <rnd return value>

#line 20 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile"
  mul r3.w, r3.w, l(3.000000)
  add r3.w, r3.w, l(0.200000)
  mov r4.x, l(-0.500000)
  add r3.w, r3.w, r4.x
  itof r4.x, l(-1)
  mul r3.w, r3.w, r4.x
  mov r4.xy, r0.zwzz

#line 50 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)preco"
  mul r4.z, r3.w, l(4.000000)
  mul r4.zw, r4.zzzz, r4.xxxy
  add r4.zw, r3.xxxy, r4.zzzw
  dp2 r4.z, r4.zwzz, r4.zwzz
  sqrt r4.z, r4.z
  div r4.w, r3.z, l(2.000000)
  add r4.z, r4.w, r4.z  // r4.z <- l

#line 56
  mul r5.xy, r3.wwww, r4.xyxx
  add r5.xy, r3.xyxx, r5.xyxx
  dp2 r4.w, r5.xyxx, r5.xyxx
  sqrt r4.w, r4.w
  mul r3.z, r3.z, l(1.400000)
  log r4.w, r4.w
  mul r3.z, r3.z, r4.w
  exp r3.z, r3.z
  mov r3.z, -r3.z
  add r3.z, r3.z, l(0.010000)
  max r3.z, r3.z, l(0.000000)
  mul r3.z, r3.z, l(50.000000)  // r3.z <- c
  mov r4.w, l(-0.300000)
  add r4.w, r4.w, r4.z
  mov r5.x, -r4.w
  max r4.w, r4.w, r5.x
  log r4.w, r4.w
  mul r4.w, r4.w, l(0.025000)
  exp r4.w, r4.w
  mov r4.w, -r4.w
  add r4.w, r4.w, l(0.001000)
  mul r4.z, r4.z, l(30.000000)
  sincos r4.z, null, r4.z
  add r4.z, r4.z, r4.w
  max r4.z, r4.z, l(0.000000)
  mul r4.z, r4.z, l(3.000000)  // r4.z <- c1
  mul r5.xy, r3.wwww, r4.xyxx
  div r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
  mov r5.xy, -r5.xyxx
  add r5.xy, r3.xyxx, r5.xyxx
  add r5.xy, r5.xyxx, l(0.090000, 0.090000, 0.000000, 0.000000)
  dp2 r4.w, r5.xyxx, r5.xyxx
  sqrt r4.w, r4.w
  mul r4.w, r4.w, l(1.000000)
  mov r5.x, l(1.000000)
  mul r4.w, r4.w, r5.x
  div r4.w, l(0.040000), r4.w
  max r4.w, r4.w, l(0.000000)
  div r4.w, r4.w, l(20.000000)  // r4.w <- c2
  nop 
  mul r3.xy, r3.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000)
  mul r4.xy, r3.wwww, r4.xyxx
  mul r4.xy, r4.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000)
  add r3.xy, r3.xyxx, r4.xyxx
  add r3.xy, r3.xyxx, l(0.900000, 0.900000, 0.000000, 0.000000)
  mov r4.x, l(6)

#line 39
  mov r4.y, -r3.x
  max r4.y, r3.x, r4.y
  mov r5.x, -r3.y
  max r5.y, r3.y, r5.x
  min r5.z, r4.y, r5.y
  max r5.w, r4.y, r5.y
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
  mul r5.z, r5.w, r5.z
  mul r5.w, r5.z, r5.z
  mul r6.x, r5.w, l(0.020835)
  add r6.x, r6.x, l(-0.085133)
  mul r6.x, r5.w, r6.x
  add r6.x, r6.x, l(0.180141)
  mul r6.x, r5.w, r6.x
  add r6.x, r6.x, l(-0.330299)
  mul r5.w, r5.w, r6.x
  add r5.w, r5.w, l(0.999866)
  mul r5.z, r5.w, r5.z
  lt r4.y, r5.y, r4.y
  mul r5.y, r5.z, l(-2.000000)
  add r5.y, r5.y, l(1.570796)
  and r4.y, r4.y, r5.y
  add r4.y, r5.z, r4.y
  lt r5.x, r3.y, r5.x
  and r5.x, r5.x, l(0xc0490fdb)
  add r4.y, r4.y, r5.x
  min r5.x, r3.y, r3.x
  max r5.y, r3.y, r3.x
  mov r5.z, -r5.x
  lt r5.x, r5.x, r5.z
  mov r5.z, -r5.y
  ge r5.y, r5.y, r5.z
  and r5.x, r5.y, r5.x
  mov r5.y, -r4.y
  movc r4.y, r5.x, r5.y, r4.y
  add r4.y, r4.y, l(0.200000)  // r4.y <- a
  itof r4.x, r4.x
  div r4.x, l(6.283190), r4.x  // r4.x <- b
  div r5.x, r4.y, r4.x
  add r5.x, r5.x, l(0.500000)
  round_ni r5.x, r5.x
  mul r4.x, r4.x, r5.x
  mov r4.y, -r4.y
  add r4.x, r4.y, r4.x
  sincos null, r4.x, r4.x
  dp2 r3.x, r3.xyxx, r3.xyxx
  sqrt r3.x, r3.x
  mul r3.x, r3.x, r4.x
  mov r3.y, l(-0.500000)
  add r4.x, r3.y, l(0.510000)
  add r3.x, r3.y, r3.x
  div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
  mul r3.x, r3.y, r3.x
  max r3.x, r3.x, l(0.000000)
  min r3.x, r3.x, l(1.000000)
  mul r3.y, r3.x, l(-2.000000)
  add r3.y, r3.y, l(3.000000)
  mul r3.x, r3.x, r3.x
  mul r3.x, r3.x, r3.y  // r3.x <- f

#line 44
  mov r3.x, r3.x  // r3.x <- <regShape return value>

#line 59
  mov r3.y, l(1.000000)
  mul r3.x, r3.x, r3.y
  mov r3.x, -r3.x
  add r3.x, r3.x, l(0.010000)
  max r3.x, r3.x, l(0.000000)
  mul r3.x, r3.x, l(5.000000)  // r3.x <- s

#line 62
  mul r3.y, r3.w, l(4.000000)
  add r5.xyz, r3.yyyy, l(3.520000, 1.920000, 1.600000, 0.000000)
  sincos null, r5.xyz, r5.xyzx
  mul r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  add r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r5.x <- color.x; r5.y <- color.y; r5.z <- color.z
  mul r3.yzw, r3.zzzz, r5.xxyz  // r3.y <- f.x; r3.z <- f.y; r3.w <- f.z
  mul r4.xyz, r4.zzzz, r5.xyzx
  add r3.yzw, r3.yyzw, r4.xxyz
  mul r4.xyz, r4.wwww, r5.xyzx
  add r3.yzw, r3.yyzw, r4.xxyz
  mul r4.xyz, r3.xxxx, r5.xyzx
  add r3.xyz, r3.yzwy, r4.xyzx  // r3.x <- f.x; r3.y <- f.y; r3.z <- f.z
  mov r4.xyz, l(-0.010000,-0.010000,-0.010000,-0.000000)
  add r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- <circle return value>.x; r3.y <- <circle return value>.y; r3.z <- <circle return value>.z

#line 20 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile"
  add r2.xyz, r2.xyzx, r3.xyzx
  iadd r2.w, r2.w, l(1)
endloop 

#line 26
mov r1.x, l(0.100000)  // r1.x <- bright

#line 32
mov r1.yz, -r0.zzwz
add r1.yz, r0.xxyx, r1.yyzy
dp2 r1.y, r1.yzyy, r1.yzyy
sqrt r1.y, r1.y
mul r1.y, r1.y, l(4.000000)
rsq r1.y, r1.y
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
div r1.x, r1.x, r1.y
max r1.x, r1.x, l(0.000000)
mul r1.x, r1.x, l(4.000000)
mul r1.xyz, r1.xxxx, l(0.200000, 0.210000, 0.300000, 0.000000)
mul r1.xyz, r1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 36
mov r0.zw, -r0.zzzw
add r0.xy, r0.zwzz, r0.xyxx
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
mov r0.x, -r0.x
add r0.x, r0.x, l(1.000000)
mul r0.x, r0.x, l(1.442695)
exp r0.x, r0.x
div r0.x, r0.x, l(5.000000)
mul r0.xyz, r0.xxxx, r1.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z
mov o0.xyz, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 200 instruction slots used
