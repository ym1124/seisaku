//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer cb
// {
//
//   float focus;                       // Offset:    0 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// default_sampler                   sampler      NA          NA    0        1
// depth_tex                         texture  float4          2d    0        1
// cb                                cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Tex.x; v1.y <- input.Tex.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 5 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\conver"
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t0.xyzw, s0
mov r0.x, r0.x  // r0.x <- depth

#line 11
lt r0.y, l(0.500000), r0.x
if_nz r0.y
  itof r0.y, l(2)
  itof r0.z, l(1)
  mov r0.w, -r0.x
  add r0.z, r0.w, r0.z
  mul r0.y, r0.z, r0.y  // r0.y <- depth
else   // Prior locations: r0.x <- depth
  itof r0.z, l(2)
  mul r0.y, r0.x, r0.z  // r0.y <- depth
endif 
mov o0.xyz, r0.yyyy
mov o0.w, l(1.000000)
ret 
// Approximately 16 instruction slots used
