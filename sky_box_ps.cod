//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer CAMERA_CONSTANTS
// {
//
//   struct CAMERA
//   {
//       
//       float4 eye;                    // Offset:    0
//       float4 dir;                    // Offset:   16
//       row_major float4x4 camera_view;// Offset:   32
//       row_major float4x4 camera_projection;// Offset:   96
//       row_major float4x4 camera_view_projection;// Offset:  160
//       row_major float4x4 inverse_camera_view;// Offset:  224
//       row_major float4x4 inverse_camera_projection;// Offset:  288
//       row_major float4x4 inverse_camera_view_projection;// Offset:  352
//
//   } camera;                          // Offset:    0 Size:   416
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DecalSampler                      sampler      NA          NA    0        1
// environment_map                   texture  float4        cube    6        1
// CAMERA_CONSTANTS                  cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// NORMAL                   0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float       
// POSITION                 0   xyzw        3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb4[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Normal.x; v1.y <- input.Normal.y; v1.z <- input.Normal.z; v1.w <- input.Normal.w; 
//   v2.x <- input.Tex.x; v2.y <- input.Tex.y; 
//   v3.x <- input.wPos.x; v3.y <- input.wPos.y; v3.z <- input.wPos.z; v3.w <- input.wPos.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 10 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precomp"
mov r0.xyz, -cb4[0].xyzx
add r0.xyz, r0.xyzx, v3.xyzx  // r0.x <- V.x; r0.y <- V.y; r0.z <- V.z
add r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r0.x <- V.x; r0.y <- V.y; r0.z <- V.z
sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t6.xyzw, s0
mov r0.xyz, r0.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z
mov r0.w, l(1.000000)  // r0.w <- color.w
mov o0.xyzw, r0.xyzw
ret 
// Approximately 9 instruction slots used
