//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   row_major float4x4 world_view_projection;// Offset:    0 Size:    64
//   row_major float4x4 world;          // Offset:   64 Size:    64 [unused]
//   float4 material_color;             // Offset:  128 Size:    16 [unused]
//   float4 light_direction;            // Offset:  144 Size:    16 [unused]
//
// }
//
// cbuffer Param
// {
//
//   float cbEdgeFactor;                // Offset:    0 Size:     4 [unused]
//   float cbInsideFactor;              // Offset:    4 Size:     4 [unused]
//   float cb_depth;                    // Offset:    8 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// default_sampler                   sampler      NA          NA    0        1
// depth_tex                         texture  float4          2d    1        1
// CONSTANT_BUFFER                   cbuffer      NA          NA    0        1
// Param                             cbuffer      NA          NA    2        1
//
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0  TRIEDGE   float       
// SV_TessFactor            1   x           1  TRIEDGE   float       
// SV_TessFactor            2   x           2  TRIEDGE   float       
// SV_InsideTessFactor      0   x           3   TRIINT   float       
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
// Tessellation Domain   # of control points
// -------------------- --------------------
// Triangle                                3
//
ds_5_0
dcl_input_control_point_count 3
dcl_tessellator_domain domain_tri
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_input vDomain.xyz
dcl_input vicp[3][0].xyz
dcl_input vicp[3][1].xyz
dcl_input vicp[3][2].xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_temps 4
mul r0.xy, vDomain.yyyy, vicp[1][2].xyxx
mad r0.xy, vicp[0][2].xyxx, vDomain.xxxx, r0.xyxx
mad r0.xy, vicp[2][2].xyxx, vDomain.zzzz, r0.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r0.xyxx, t1.yzxw, s0, l(0.000000)
mov o3.xy, r0.xyxx
lt r0.x, r0.z, l(1.000000)
add r0.y, -r0.z, l(1.000000)
min o2.xyz, r0.zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, vDomain.yyyy, vicp[1][0].xyzx
mad r1.xyz, vicp[0][0].xyzx, vDomain.xxxx, r1.xyzx
mad r1.xyz, vicp[2][0].xyzx, vDomain.zzzz, r1.xyzx
mul r2.xyz, vDomain.yyyy, vicp[1][1].xyzx
mad r2.xyz, vicp[0][1].xyzx, vDomain.xxxx, r2.xyzx
mad r2.xyz, vicp[2][1].xyzx, vDomain.zzzz, r2.xyzx
mul r0.z, r2.y, cb2[0].z
mad r3.y, -r0.z, r0.y, r1.y
mad r3.xz, -r2.xxzx, cb2[0].zzzz, r1.xxzx
movc r0.xyz, r0.xxxx, r3.xyzx, r1.xyzx
mul r1.xyzw, r0.yyyy, cb0[1].xyzw
mad r1.xyzw, r0.xxxx, cb0[0].xyzw, r1.xyzw
mad r0.xyzw, r0.zzzz, cb0[2].xyzw, r1.xyzw
add o0.xyzw, r0.xyzw, cb0[3].xyzw
mul r0.xyzw, r2.yyyy, cb0[1].xyzw
mad r0.xyzw, r2.xxxx, cb0[0].xyzw, r0.xyzw
mad o1.xyzw, r2.zzzz, cb0[2].xyzw, r0.xyzw
mov o2.w, l(1.000000)
ret 
// Approximately 27 instruction slots used
