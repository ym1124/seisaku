//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer cb
// {
//
//   float3 sphere_pos;                 // Offset:    0 Size:    12
//   int timer;                         // Offset:   12 Size:     4
//   float3 cam_pos;                    // Offset:   16 Size:    12 [unused]
//   float obj_dist;                    // Offset:   28 Size:     4 [unused]
//   float3 light_color;                // Offset:   32 Size:    12 [unused]
//   int dummy;                         // Offset:   44 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cb                                cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb2[1], immediateIndexed
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
dcl_indexableTemp x0[6], 4
dcl_indexableTemp x1[2], 4
dcl_indexableTemp x2[4], 4
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Tex.x; v1.y <- input.Tex.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 36 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)precompile\volume_ligh"
nop 
mov r0.xyz, cb2[0].xyzx
mov r0.w, l(0.700000)

#line 28
mov r0.xyz, r0.xyzx  // r0.x <- new_sphere.center.x; r0.y <- new_sphere.center.y; r0.z <- new_sphere.center.z
mov r0.w, r0.w  // r0.w <- new_sphere.radius
mov r0.xyz, r0.xyzx  // r0.x <- <createSphere return value>.center.x; r0.y <- <createSphere return value>.center.y; r0.z <- <createSphere return value>.center.z
mov r0.w, r0.w  // r0.w <- <createSphere return value>.radius

#line 36
nop 
itof r1.x, l(5)
itof r1.y, cb2[0].w
div r1.y, r1.y, l(30.000000)
sincos r1.y, null, r1.y
mul r1.y, r1.y, r1.x
itof r1.xz, l(-2, 0, -2, 0)
mov r1.w, l(0.700000)

#line 28
mov r1.xyz, r1.xyzx  // r1.x <- new_sphere.center.x; r1.y <- new_sphere.center.y; r1.z <- new_sphere.center.z
mov r1.w, r1.w  // r1.w <- new_sphere.radius
mov r1.xyz, r1.xyzx  // r1.x <- <createSphere return value>.center.x; r1.y <- <createSphere return value>.center.y; r1.z <- <createSphere return value>.center.z
mov r1.w, r1.w  // r1.w <- <createSphere return value>.radius

#line 36
nop 
itof r2.xyz, l(0, -2, 0, 0)
mov r2.w, l(0.700000)

#line 28
mov r2.xyz, r2.xyzx  // r2.x <- new_sphere.center.x; r2.y <- new_sphere.center.y; r2.z <- new_sphere.center.z
mov r2.w, r2.w  // r2.w <- new_sphere.radius
mov r2.xyz, r2.xyzx  // r2.x <- <createSphere return value>.center.x; r2.y <- <createSphere return value>.center.y; r2.z <- <createSphere return value>.center.z
mov r2.w, r2.w  // r2.w <- <createSphere return value>.radius

#line 36
mov x0[0].xyz, r0.xyzx
mov x0[1].x, r0.w
mov x0[2].xyz, r1.xyzx
mov x0[3].x, r1.w
mov x0[4].xyz, r2.xyzx
mov x0[5].x, r2.w

#line 67
nop 
mov r0.xyz, l(0,1.000000,0,0)
mov r1.xyz, l(-1.500000,2.500000,0.600000,0)

#line 57
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- new_plane.normal.x; r0.y <- new_plane.normal.y; r0.z <- new_plane.normal.z
mov r1.xyz, r1.xyzx  // r1.x <- new_plane.pnt.x; r1.y <- new_plane.pnt.y; r1.z <- new_plane.pnt.z

#line 62
mov r0.xyz, r0.xyzx  // r0.x <- <createPlane return value>.normal.x; r0.y <- <createPlane return value>.normal.y; r0.z <- <createPlane return value>.normal.z
mov r1.xyz, r1.xyzx  // r1.x <- <createPlane return value>.pnt.x; r1.y <- <createPlane return value>.pnt.y; r1.z <- <createPlane return value>.pnt.z

#line 67
mov x1[0].xyz, r0.xyzx
mov x1[1].xyz, r1.xyzx

#line 92
nop 
itof r0.x, cb2[0].w
div r0.x, r0.x, l(30.000000)
sincos null, r0.x, r0.x
mul r0.z, r0.x, l(3.000000)
mov r0.xy, l(-2.500000,0,0,0)
mov r0.w, l(1.000000)

#line 84
mov r0.xyz, r0.xyzx  // r0.x <- new_cube.pnt.x; r0.y <- new_cube.pnt.y; r0.z <- new_cube.pnt.z
mov r0.w, r0.w  // r0.w <- new_cube.size
mov r0.xyz, r0.xyzx  // r0.x <- <createCube return value>.pnt.x; r0.y <- <createCube return value>.pnt.y; r0.z <- <createCube return value>.pnt.z
mov r0.w, r0.w  // r0.w <- <createCube return value>.size

#line 92
nop 
mov r1.xyz, l(15.600000,0,0,0)
mov r1.w, l(30.000000)

#line 84
mov r1.xyz, r1.xyzx  // r1.x <- new_cube.pnt.x; r1.y <- new_cube.pnt.y; r1.z <- new_cube.pnt.z
mov r1.w, r1.w  // r1.w <- new_cube.size
mov r1.xyz, r1.xyzx  // r1.x <- <createCube return value>.pnt.x; r1.y <- <createCube return value>.pnt.y; r1.z <- <createCube return value>.pnt.z
mov r1.w, r1.w  // r1.w <- <createCube return value>.size

#line 92
mov x2[0].xyz, r0.xyzx
mov x2[1].x, r0.w
mov x2[2].xyz, r1.xyzx
mov x2[3].x, r1.w

#line 5 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\volume_light_sp"
mov r0.xy, v1.xyxx  // r0.x <- uv.x; r0.y <- uv.y
mov r0.w, l(-0.500000)
add r0.z, r0.w, r0.y  // r0.z <- uv.y
mul r0.xy, r0.xzxx, l(6.283180, 3.141590, 0.000000, 0.000000)  // r0.y <- uv.y
mov r1.xyz, l(0,0,0,0)  // r1.x <- posLight.x; r1.y <- posLight.y; r1.z <- posLight.z
mov r0.z, l(10.000000)  // r0.z <- maxdepth
mov r1.xyz, r1.xyzx  // r1.x <- ro.x; r1.y <- ro.y; r1.z <- ro.z
sincos null, r0.w, r0.y
sincos null, r1.w, r0.x
mul r2.x, r0.w, r1.w  // r2.x <- rd.x
sincos r2.y, null, r0.y  // r2.y <- rd.y
sincos null, r0.y, r0.y
sincos r0.x, null, r0.x
mul r2.z, r0.x, r0.y  // r2.z <- rd.z
mov r0.x, l(0)  // r0.x <- t
mov r0.y, l(0.001389)  // r0.y <- eps

#line 20
mov r0.w, l(0)  // r0.w <- i
mov r1.w, r0.x  // r1.w <- t
mov r2.w, r0.w  // r2.w <- i
loop 
  ilt r3.x, r2.w, l(64)
  breakc_z r3.x

#line 23
  nop 
  mul r3.xyz, r2.xyzx, r1.wwww
  add r3.xyz, r1.xyzx, r3.xyzx
  mov r4.xyz, r2.xyzx

#line 128 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)precompile\volume_ligh"
  mov r3.w, l(100.000000)  // r3.w <- len

#line 134
  mov r5.xyz, x0[0].xyzx
  mov r6.xyz, -r3.xyzx
  add r5.xyz, r5.xyzx, r6.xyzx
  dp3 r4.w, r5.xyzx, r5.xyzx
  sqrt r4.w, r4.w  // r4.w <- l
  mov r5.x, x0[1].x
  mov r5.x, -r5.x
  add r4.w, r4.w, r5.x
  lt r5.x, r4.w, r3.w
  if_nz r5.x
    mov r3.w, r4.w

#line 141
  endif 

#line 134
  mov r5.xyz, x0[2].xyzx
  mov r6.xyz, -r3.xyzx
  add r5.xyz, r5.xyzx, r6.xyzx
  dp3 r4.w, r5.xyzx, r5.xyzx
  sqrt r4.w, r4.w  // r4.w <- l
  mov r5.x, x0[3].x
  mov r5.x, -r5.x
  add r4.w, r4.w, r5.x
  lt r5.x, r4.w, r3.w
  if_nz r5.x
    mov r3.w, r4.w

#line 141
  endif 

#line 134
  mov r5.xyz, x0[4].xyzx
  mov r6.xyz, -r3.xyzx
  add r5.xyz, r5.xyzx, r6.xyzx
  dp3 r4.w, r5.xyzx, r5.xyzx
  sqrt r4.w, r4.w  // r4.w <- l
  mov r5.x, x0[5].x
  mov r5.x, -r5.x
  add r4.w, r4.w, r5.x
  lt r5.x, r4.w, r3.w
  if_nz r5.x
    mov r3.w, r4.w

#line 141
  endif 

#line 147
  mov r5.xyz, x2[0].xyzx
  mov r6.xyz, -r3.xyzx
  add r5.xyz, r5.xyzx, r6.xyzx  // r5.x <- pos.x; r5.y <- pos.y; r5.z <- pos.z
  mov r4.w, x2[1].x
  div r4.w, r4.w, l(2.000000)  // r4.w <- size
  nop 
  mov r5.xyz, r5.xyzx
  mov r4.w, r4.w

#line 122
  mov r6.xyz, -r5.xyzx
  max r5.xyz, r5.xyzx, r6.xyzx
  mov r6.xyz, -r4.wwww
  add r5.xyz, r5.xyzx, r6.xyzx
  max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  dp3 r4.w, r5.xyzx, r5.xyzx
  sqrt r4.w, r4.w  // r4.w <- <box_dist return value>

#line 149
  mov r4.w, r4.w  // r4.w <- d
  lt r5.x, r4.w, r3.w
  if_nz r5.x
    mov r3.w, r4.w
    nop 
    nop 
    nop 
    nop 
    nop 
    nop 

#line 159
  endif 

#line 147
  mov r5.xyz, x2[2].xyzx
  mov r6.xyz, -r3.xyzx
  add r5.xyz, r5.xyzx, r6.xyzx  // r5.x <- pos.x; r5.y <- pos.y; r5.z <- pos.z
  mov r4.w, x2[3].x
  div r4.w, r4.w, l(2.000000)  // r4.w <- size
  nop 
  mov r5.xyz, r5.xyzx  // r5.x <- pos.x; r5.y <- pos.y; r5.z <- pos.z
  mov r4.w, r4.w  // r4.w <- size

#line 122
  mov r6.xyz, -r5.xyzx
  max r5.xyz, r5.xyzx, r6.xyzx
  mov r6.xyz, -r4.wwww
  add r5.xyz, r5.xyzx, r6.xyzx
  max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  dp3 r4.w, r5.xyzx, r5.xyzx
  sqrt r4.w, r4.w  // r4.w <- <box_dist return value>

#line 149
  mov r4.w, r4.w  // r4.w <- d
  lt r5.x, r4.w, r3.w
  if_nz r5.x
    mov r3.w, r4.w
    nop 
    nop 
    nop 
    nop 
    nop 
    nop 

#line 159
  endif 

#line 165
  mov r5.xyz, x1[0].xyzx
  dp3 r4.x, r5.xyzx, r4.xyzx  // r4.x <- denom
  lt r4.y, l(0.000001), r4.x
  if_nz r4.y
    mov r4.yzw, x1[1].xxyz
    mov r3.xyz, -r3.xyzx
    add r3.xyz, r3.xyzx, r4.yzwy  // r3.x <- origintopoint.x; r3.y <- origintopoint.y; r3.z <- origintopoint.z
    mov r4.yzw, x1[0].xxyz
    dp3 r3.x, r3.xyzx, r4.yzwy
    div r3.x, r3.x, r4.x  // r3.x <- d
    lt r3.y, r3.x, r3.w
    if_nz r3.y
      mov r3.w, r3.x
    endif 
  endif 

#line 178
  mov r3.w, r3.w  // r3.w <- <DE return value>

#line 23 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\volume_light_sp"
  mov r3.w, r3.w  // r3.w <- d
  add r3.x, r1.w, r3.w  // r3.x <- t
  mul r3.y, r0.y, r3.x
  lt r3.y, r3.w, r3.y
  lt r3.z, r0.z, r3.x
  or r3.y, r3.z, r3.y
  if_nz r3.y
    mov r1.w, r3.x  // r1.w <- t
    break 
  endif   // r3.x <- t

#line 20
  iadd r2.w, r2.w, l(1)

#line 27
  mov r1.w, r3.x  // r1.w <- t
endloop 
div r0.x, r1.w, l(10.000000)
max r0.x, r0.x, l(0.000000)
min r0.xyz, r0.xxxx, l(0.990000, 0.990000, 0.990000, 0.000000)  // r0.z <- t
mov o0.xyz, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 215 instruction slots used
