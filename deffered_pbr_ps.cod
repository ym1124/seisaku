//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANTS
// {
//
//   struct DIRECTIONAL_LIGHT
//   {
//       
//       float4 direction;              // Offset:    0
//       float4 color;                  // Offset:   16
//
//   } directional_light;               // Offset:    0 Size:    32
//   float4 ambient_color;              // Offset:   32 Size:    16 [unused]
//
// }
//
// cbuffer CAMERA_CONSTANTS
// {
//
//   struct CAMERA
//   {
//       
//       float4 eye;                    // Offset:    0
//       float4 dir;                    // Offset:   16
//       row_major float4x4 camera_view;// Offset:   32
//       row_major float4x4 camera_projection;// Offset:   96
//       row_major float4x4 camera_view_projection;// Offset:  160
//       row_major float4x4 inverse_camera_view;// Offset:  224
//       row_major float4x4 inverse_camera_projection;// Offset:  288
//       row_major float4x4 inverse_camera_view_projection;// Offset:  352
//
//   } camera;                          // Offset:    0 Size:   416
//
// }
//
// cbuffer Cbpbr
// {
//
//   float metalness;                   // Offset:    0 Size:     4
//   float roughness;                   // Offset:    4 Size:     4
//   float2 dummy;                      // Offset:    8 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// defaultSampler                    sampler      NA          NA    0        1
// spBRDF_Sampler                    sampler      NA          NA    1        1
// albedoTexture                     texture  float4          2d    0        1
// specularTexture                   texture  float4        cube    4        1
// irradianceTexture                 texture  float4        cube    5        1
// specularBRDF_LUT                  texture  float4          2d    6        1
// wpos_tex                          texture  float4          2d    7        1
// wnormal_tex                       texture  float4          2d    8        1
// SCENE_CONSTANTS                   cbuffer      NA          NA    1        1
// Cbpbr                             cbuffer      NA          NA    2        1
// CAMERA_CONSTANTS                  cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb1[2], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 12
//
// Initial variable locations:
//   v0.x <- pin.Position.x; v0.y <- pin.Position.y; v0.z <- pin.Position.z; v0.w <- pin.Position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 14 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)precomp"
mov r0.x, l(3.141592)  // r0.x <- PI
mov r0.y, l(0.000010)  // r0.y <- Epsilon

#line 20
mov r1.xyz, l(0.040000,0.040000,0.040000,0)  // r1.x <- Fdielectric.x; r1.y <- Fdielectric.y; r1.z <- Fdielectric.z

#line 10 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\d"
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t7.xyzw, s0
mov r2.xyz, r2.xyzx  // r2.x <- w_position.x; r2.y <- w_position.y; r2.z <- w_position.z
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.xyxx, t8.xyzw, s0
mov r3.xyz, r3.xyzx  // r3.x <- normal.x; r3.y <- normal.y; r3.z <- normal.z

#line 14
sample_indexable(texture2d)(float,float,float,float) r4.xyz, v1.xyxx, t0.xyzw, s0
mov r4.xyz, r4.xyzx  // r4.x <- albedo.x; r4.y <- albedo.y; r4.z <- albedo.z

#line 23
mov r2.xyz, -r2.xyzx
add r2.xyz, r2.xyzx, cb4[0].xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx  // r2.x <- Lo.x; r2.y <- Lo.y; r2.z <- Lo.z

#line 28
dp3 r0.z, r3.xyzx, r3.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, r3.xyzx  // r3.x <- N.x; r3.y <- N.y; r3.z <- N.z

#line 31
dp3 r0.z, r3.xyzx, r2.xyzx
max r5.x, r0.z, l(0.000000)  // r5.x <- cosLo

#line 34
mul r0.z, r5.x, l(2.000000)
mul r6.xyz, r3.xyzx, r0.zzzz
mov r7.xyz, -r2.xyzx
add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- Lr.x; r6.y <- Lr.y; r6.z <- Lr.z

#line 37
mov r7.xyz, -r1.xyzx
add r7.xyz, r4.xyzx, r7.xyzx
mul r7.xyz, r7.xyzx, cb2[0].xxxx
add r1.xyz, r1.xyzx, r7.xyzx  // r1.x <- F0.x; r1.y <- F0.y; r1.z <- F0.z

#line 40
mov r7.xyz, l(0,0,0,0)  // r7.x <- directLighting.x; r7.y <- directLighting.y; r7.z <- directLighting.z

#line 44
mov r8.xyz, -cb1[0].xyzx  // r8.x <- Li.x; r8.y <- Li.y; r8.z <- Li.z
mov r9.xyz, cb1[1].xyzx  // r9.x <- Lradiance.x; r9.y <- Lradiance.y; r9.z <- Lradiance.z

#line 49
add r10.xyz, r2.xyzx, r8.xyzx
dp3 r0.z, r10.xyzx, r10.xyzx
rsq r0.z, r0.z
mul r10.xyz, r0.zzzz, r10.xyzx  // r10.x <- Lh.x; r10.y <- Lh.y; r10.z <- Lh.z

#line 52
dp3 r0.z, r3.xyzx, r8.xyzx
max r0.z, r0.z, l(0.000000)  // r0.z <- cosLi
dp3 r0.w, r3.xyzx, r10.xyzx
max r0.w, r0.w, l(0.000000)  // r0.w <- cosLh

#line 56
nop 
mov r1.xyz, r1.xyzx
dp3 r1.w, r10.xyzx, r2.xyzx
max r1.w, r1.w, l(0.000000)

#line 76 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)precomp"
mov r2.xyz, -r1.xyzx
add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mov r1.w, -r1.w
add r1.w, r1.w, l(1.000000)
mov r2.w, l(1.000000)
mul r2.w, r1.w, r2.w
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.w
mul r2.xyz, r1.wwww, r2.xyzx
add r2.xyz, r1.xyzx, r2.xyzx  // r2.x <- <fresnelSchlick return value>.x; r2.y <- <fresnelSchlick return value>.y; r2.z <- <fresnelSchlick return value>.z

#line 56 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\d"
mov r2.xyz, r2.xyzx  // r2.x <- F.x; r2.y <- F.y; r2.z <- F.z
nop 
mov r0.w, r0.w
mov r1.w, cb2[0].y

#line 52 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)precomp"
mul r1.w, r1.w, r1.w  // r1.w <- alpha
mul r1.w, r1.w, r1.w  // r1.w <- alphaSq
mul r0.w, r0.w, r0.w
mov r2.w, l(-1.000000)
add r2.w, r1.w, r2.w
mul r0.w, r0.w, r2.w
add r0.w, r0.w, l(1.000000)  // r0.w <- denom
mul r0.x, r0.w, r0.x
mul r0.x, r0.w, r0.x
div r0.x, r1.w, r0.x  // r0.x <- <ndfGGX return value>

#line 58 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\d"
mov r0.x, r0.x  // r0.x <- D
nop 
mov r0.z, r0.z
mov r0.w, r5.x
mov r1.w, cb2[0].y

#line 68 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)precomp"
add r1.w, r1.w, l(1.000000)  // r1.w <- r
mul r1.w, r1.w, r1.w
div r1.w, r1.w, l(8.000000)  // r1.w <- k
nop 
mov r0.z, r0.z
mov r1.w, r1.w

#line 62
mov r2.w, -r1.w
add r2.w, r2.w, l(1.000000)
mul r2.w, r0.z, r2.w
add r2.w, r1.w, r2.w
div r2.w, r0.z, r2.w  // r2.w <- <gaSchlickG1 return value>

#line 70
nop 
mov r0.w, r0.w

#line 62
mov r3.w, -r1.w
add r3.w, r3.w, l(1.000000)
mul r3.w, r0.w, r3.w
add r1.w, r1.w, r3.w
div r1.w, r0.w, r1.w  // r1.w <- <gaSchlickG1 return value>

#line 70
mul r1.w, r1.w, r2.w  // r1.w <- <gaSchlickGGX return value>

#line 60 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\d"
mov r1.w, r1.w  // r1.w <- G

#line 64
itof r8.xyz, l(1, 1, 1, 0)
mov r10.xyz, -r2.xyzx
add r8.xyz, r8.xyzx, r10.xyzx
itof r10.xyz, l(0, 0, 0, 0)
mov r11.xyz, -r8.xyzx
add r10.xyz, r10.xyzx, r11.xyzx
mul r10.xyz, r10.xyzx, cb2[0].xxxx
add r8.xyz, r8.xyzx, r10.xyzx  // r8.x <- kd.x; r8.y <- kd.y; r8.z <- kd.z

#line 67
mul r8.xyz, r4.xyzx, r8.xyzx  // r8.x <- diffuseBRDF.x; r8.y <- diffuseBRDF.y; r8.z <- diffuseBRDF.z

#line 70
mul r2.xyz, r0.xxxx, r2.xyzx
mul r2.xyz, r1.wwww, r2.xyzx
mul r0.x, r0.z, l(4.000000)
mul r0.x, r0.w, r0.x
max r0.x, r0.x, r0.y
div r2.xyz, r2.xyzx, r0.xxxx  // r2.x <- specularBRDF.x; r2.y <- specularBRDF.y; r2.z <- specularBRDF.z

#line 73
add r2.xyz, r2.xyzx, r8.xyzx
mul r2.xyz, r9.xyzx, r2.xyzx
mul r0.xyz, r0.zzzz, r2.xyzx
add r0.xyz, r0.xyzx, r7.xyzx  // r0.x <- directLighting.x; r0.y <- directLighting.y; r0.z <- directLighting.z

#line 80
sample_indexable(texturecube)(float,float,float,float) r2.xyz, r3.xyzx, t5.xyzw, s0
mov r2.xyz, r2.xyzx  // r2.x <- irradiance.x; r2.y <- irradiance.y; r2.z <- irradiance.z

#line 84
nop 
mov r0.w, r0.w

#line 76 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)precomp"
mov r3.xyz, -r1.xyzx
add r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mov r0.w, -r0.w
add r0.w, r0.w, l(1.000000)
mov r1.w, l(1.000000)
mul r1.w, r0.w, r1.w
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
mul r3.xyz, r0.wwww, r3.xyzx
add r3.xyz, r1.xyzx, r3.xyzx  // r3.x <- <fresnelSchlick return value>.x; r3.y <- <fresnelSchlick return value>.y; r3.z <- <fresnelSchlick return value>.z

#line 84 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\d"
mov r3.xyz, r3.xyzx  // r3.x <- F.x; r3.y <- F.y; r3.z <- F.z

#line 87
mov r3.xyz, -r3.xyzx
add r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mov r7.xyz, -r3.xyzx
add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r7.xyz, r7.xyzx, cb2[0].xxxx
add r3.xyz, r3.xyzx, r7.xyzx  // r3.x <- kd.x; r3.y <- kd.y; r3.z <- kd.z

#line 90
mul r3.xyz, r4.xyzx, r3.xyzx
mul r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- diffuseIBL.x; r2.y <- diffuseIBL.y; r2.z <- diffuseIBL.z

#line 93
nop 

#line 83 "D:\学習\C言語\2年授業\描画エンジン開発\★個人製作(ptr改造)precomp"
resinfo_indexable(texturecube)(float,float,float,float)_uint r0.w, l(0), t4.xyzw
mov r0.w, r0.w  // r0.w <- levels
mov r0.w, r0.w  // r0.w <- <querySpecularTextureLevels return value>

#line 93 "D:\学習\C言語\2年授業\描画エンジン開発\?E人製?Eptr改造)precompile\d"
mov r0.w, r0.w  // r0.w <- specularTextureLevels
utof r0.w, r0.w
mul r0.w, r0.w, cb2[0].y
sample_l_indexable(texturecube)(float,float,float,float) r3.xyz, r6.xyzx, t4.xyzw, s0, r0.w
mov r3.xyz, r3.xyzx  // r3.x <- specularIrradiance.x; r3.y <- specularIrradiance.y; r3.z <- specularIrradiance.z

#line 97
mov r5.y, cb2[0].y
sample_indexable(texture2d)(float,float,float,float) r4.xy, r5.xyxx, t6.xyzw, s1
mov r4.xy, r4.xyxx  // r4.x <- specularBRDF.x; r4.y <- specularBRDF.y

#line 100
mul r1.xyz, r1.xyzx, r4.xxxx
add r1.xyz, r4.yyyy, r1.xyzx
mul r1.xyz, r3.xyzx, r1.xyzx  // r1.x <- specularIBL.x; r1.y <- specularIBL.y; r1.z <- specularIBL.z

#line 103
add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- ambientLighting.x; r1.y <- ambientLighting.y; r1.z <- ambientLighting.z

#line 107
add o0.xyz, r0.xyzx, r1.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 154 instruction slots used
